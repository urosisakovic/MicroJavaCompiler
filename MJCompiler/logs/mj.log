INFO  22:07:27,150 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\semantic.mj
INFO  22:07:27,183 - #2 program
INFO  22:07:27,183 - #20 MJProgram
INFO  22:07:27,183 - #20 abc
INFO  22:07:27,183 - #20 a
INFO  22:07:27,184 - #40 ;
INFO  22:07:27,184 - #7 const
INFO  22:07:27,184 - #20 int
INFO  22:07:27,184 - #20 cnst
INFO  22:07:27,184 - #37 =
INFO  22:07:27,184 - #21 1
INFO  22:07:27,184 - #40 ;
INFO  22:07:27,185 - #47 {
INFO  22:07:27,185 - #20 int
INFO  22:07:27,185 - #20 fun
INFO  22:07:27,185 - #43 (
INFO  22:07:27,185 - #20 int
INFO  22:07:27,185 - #20 x
INFO  22:07:27,185 - #44 )
INFO  22:07:27,185 - #47 {
INFO  22:07:27,185 - #48 }
INFO  22:07:27,186 - #16 void
INFO  22:07:27,186 - #20 main
INFO  22:07:27,186 - #43 (
INFO  22:07:27,186 - #44 )
INFO  22:07:27,186 - #20 int
INFO  22:07:27,186 - #20 b
INFO  22:07:27,186 - #40 ;
INFO  22:07:27,186 - #20 char
INFO  22:07:27,186 - #20 b
INFO  22:07:27,186 - #40 ;
INFO  22:07:27,187 - #20 int
INFO  22:07:27,187 - #20 num
INFO  22:07:27,187 - #40 ;
INFO  22:07:27,187 - #20 char
INFO  22:07:27,187 - #20 character
INFO  22:07:27,187 - #40 ;
INFO  22:07:27,187 - #20 bool
INFO  22:07:27,187 - #20 boolean
INFO  22:07:27,187 - #40 ;
INFO  22:07:27,187 - #20 int
INFO  22:07:27,187 - #20 niz
INFO  22:07:27,187 - #45 [
INFO  22:07:27,187 - #46 ]
INFO  22:07:27,187 - #41 ,
INFO  22:07:27,187 - #20 niz1
INFO  22:07:27,188 - #45 [
INFO  22:07:27,188 - #46 ]
INFO  22:07:27,188 - #40 ;
INFO  22:07:27,188 - #47 {
INFO  22:07:27,188 - #20 num
INFO  22:07:27,188 - #37 =
INFO  22:07:27,188 - #22 a
INFO  22:07:27,188 - #40 ;
INFO  22:07:27,188 - #20 num
INFO  22:07:27,188 - #37 =
INFO  22:07:27,188 - #23 true
INFO  22:07:27,188 - #40 ;
INFO  22:07:27,189 - #20 character
INFO  22:07:27,189 - #37 =
INFO  22:07:27,189 - #21 1
INFO  22:07:27,189 - #40 ;
INFO  22:07:27,189 - #20 character
INFO  22:07:27,189 - #37 =
INFO  22:07:27,189 - #23 true
INFO  22:07:27,189 - #40 ;
INFO  22:07:27,189 - #20 boolean
INFO  22:07:27,189 - #37 =
INFO  22:07:27,189 - #21 1
INFO  22:07:27,189 - #40 ;
INFO  22:07:27,189 - #20 boolean
INFO  22:07:27,189 - #37 =
INFO  22:07:27,189 - #22 a
INFO  22:07:27,189 - #40 ;
INFO  22:07:27,189 - #20 cnst
INFO  22:07:27,189 - #37 =
INFO  22:07:27,190 - #21 2
INFO  22:07:27,190 - #40 ;
INFO  22:07:27,190 - #20 character
INFO  22:07:27,190 - #38 ++
INFO  22:07:27,190 - #40 ;
INFO  22:07:27,190 - #20 boolean
INFO  22:07:27,190 - #39 --
INFO  22:07:27,190 - #40 ;
INFO  22:07:27,190 - #20 fun
INFO  22:07:27,190 - #43 (
INFO  22:07:27,190 - #21 1
INFO  22:07:27,190 - #41 ,
INFO  22:07:27,190 - #21 2
INFO  22:07:27,190 - #44 )
INFO  22:07:27,190 - #40 ;
INFO  22:07:27,190 - #20 fun
INFO  22:07:27,190 - #43 (
INFO  22:07:27,190 - #23 true
INFO  22:07:27,190 - #44 )
INFO  22:07:27,191 - #40 ;
INFO  22:07:27,191 - #20 character
INFO  22:07:27,191 - #37 =
INFO  22:07:27,191 - #25 -
INFO  22:07:27,191 - #22 a
INFO  22:07:27,191 - #40 ;
INFO  22:07:27,191 - #20 niz
INFO  22:07:27,191 - #37 =
INFO  22:07:27,191 - #12 new
INFO  22:07:27,191 - #20 int
INFO  22:07:27,191 - #45 [
INFO  22:07:27,191 - #22 a
INFO  22:07:27,191 - #46 ]
INFO  22:07:27,191 - #40 ;
INFO  22:07:27,191 - #10 do
INFO  22:07:27,191 - #47 {
INFO  22:07:27,192 - #20 num
INFO  22:07:27,192 - #38 ++
INFO  22:07:27,192 - #40 ;
INFO  22:07:27,192 - #3 break
INFO  22:07:27,192 - #40 ;
INFO  22:07:27,192 - #18 continue
INFO  22:07:27,193 - #40 ;
INFO  22:07:27,193 - #48 }
INFO  22:07:27,193 - #11 while
INFO  22:07:27,193 - #43 (
INFO  22:07:27,193 - #20 num
INFO  22:07:27,193 - #33 <
INFO  22:07:27,193 - #21 10
INFO  22:07:27,193 - #44 )
INFO  22:07:27,194 - #40 ;
INFO  22:07:27,194 - #3 break
INFO  22:07:27,194 - #40 ;
INFO  22:07:27,194 - #18 continue
INFO  22:07:27,194 - #40 ;
INFO  22:07:27,194 - #8 if
INFO  22:07:27,194 - #43 (
INFO  22:07:27,194 - #20 niz
INFO  22:07:27,194 - #33 <
INFO  22:07:27,194 - #20 niz1
INFO  22:07:27,195 - #44 )
INFO  22:07:27,195 - #47 {
INFO  22:07:27,195 - #20 num
INFO  22:07:27,195 - #37 =
INFO  22:07:27,195 - #21 1
INFO  22:07:27,195 - #40 ;
INFO  22:07:27,195 - #48 }
INFO  22:07:27,195 - #8 if
INFO  22:07:27,195 - #43 (
INFO  22:07:27,195 - #20 num
INFO  22:07:27,195 - #44 )
INFO  22:07:27,195 - #47 {
INFO  22:07:27,195 - #20 num
INFO  22:07:27,195 - #37 =
INFO  22:07:27,195 - #21 2
INFO  22:07:27,195 - #40 ;
INFO  22:07:27,195 - #48 }
INFO  22:07:27,195 - #10 do
INFO  22:07:27,195 - #47 {
INFO  22:07:27,195 - #20 niz
INFO  22:07:27,195 - #45 [
INFO  22:07:27,195 - #23 true
INFO  22:07:27,195 - #46 ]
INFO  22:07:27,195 - #37 =
INFO  22:07:27,196 - #21 1
INFO  22:07:27,196 - #40 ;
INFO  22:07:27,196 - #48 }
INFO  22:07:27,196 - #11 while
INFO  22:07:27,196 - #43 (
INFO  22:07:27,196 - #20 num
INFO  22:07:27,196 - #44 )
INFO  22:07:27,196 - #40 ;
INFO  22:07:27,196 - #20 num
INFO  22:07:27,196 - #37 =
INFO  22:07:27,196 - #20 num
INFO  22:07:27,196 - #24 +
INFO  22:07:27,196 - #22 a
INFO  22:07:27,196 - #40 ;
INFO  22:07:27,196 - #20 num
INFO  22:07:27,196 - #37 =
INFO  22:07:27,196 - #20 num
INFO  22:07:27,196 - #26 *
INFO  22:07:27,196 - #22 a
INFO  22:07:27,197 - #40 ;
INFO  22:07:27,197 - #20 num
INFO  22:07:27,197 - #37 =
INFO  22:07:27,197 - #20 boolean
INFO  22:07:27,197 - #49 ?
INFO  22:07:27,197 - #21 1
INFO  22:07:27,197 - #50 :
INFO  22:07:27,197 - #22 a
INFO  22:07:27,197 - #40 ;
INFO  22:07:27,197 - #48 }
INFO  22:07:27,197 - #48 }
INFO  22:07:27,198 - 

================SINTAKSNO STABLO====================


INFO  22:07:27,199 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               a
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         num
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorCharConst(
                                                                 a
                                                                ) [FactorCharConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               true
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     character
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 boolean
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             cnst
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorDecrement(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                      ) [DesignatorDecrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorMethodCallParams(
                                      DesignatorSimple(
                                       fun
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [DesignatorMethodCallParams]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprNeg(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprNeg]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 niz
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           int
                                          ) [Type]
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementSingle]
                                    StmtBreak(
                                    ) [StmtBreak]
                                  ) [StatementMulti]
                                  StmtContinue(
                                  ) [StmtContinue]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         10
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtBreak(
                        ) [StmtBreak]
                      ) [StatementMulti]
                      StmtContinue(
                      ) [StmtContinue]
                    ) [StatementMulti]
                    StmtIf(
                      IfKeyword(
                      ) [IfKeyword]
                      StmtIfBody(
                        IfCond(
                          CondSingle(
                            CondTermSingle(
                              CondFactRelop(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz1
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactRelop]
                            ) [CondTermSingle]
                          ) [CondSingle]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                    ) [StmtIf]
                  ) [StatementMulti]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactSingle]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtDoWhile(
                  DoKeyword(
                  ) [DoKeyword]
                  StmtWhileBody(
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorArray(
                             niz
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtWhileBody]
                  CondSingle(
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [StmtDoWhile]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprAddop(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprAddop]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:07:27,200 - 

================SEMANTICKA OBRADA====================


ERROR 22:07:27,203 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  22:07:27,204 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  22:07:27,204 - Deklarisana konstanta 'cnst' na liniji 5
INFO  22:07:27,205 - Formalni parametar funkcije fun: 'x' na liniji 7
INFO  22:07:27,205 - Deklarisana promenljiva 'b' na liniji 16
ERROR 22:07:27,205 - Semanticka greska - 'b' je vec deklarisano na liniji 16
INFO  22:07:27,205 - Deklarisana promenljiva 'num' na liniji 17
INFO  22:07:27,205 - Deklarisana promenljiva 'character' na liniji 17
INFO  22:07:27,205 - Deklarisana promenljiva 'boolean' na liniji 17
INFO  22:07:27,205 - Deklarisan niz 'niz' na liniji 18
INFO  22:07:27,205 - Deklarisan niz 'niz1' na liniji 18
ERROR 22:07:27,205 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 22:07:27,205 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 22:07:27,205 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 22:07:27,205 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 22:07:27,205 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 27
ERROR 22:07:27,205 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 28
ERROR 22:07:27,205 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 31
ERROR 22:07:27,205 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 34
ERROR 22:07:27,205 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 35
INFO  22:07:27,205 - Pronadjen poziv funkcije 'fun' na liniji 38
ERROR 22:07:27,205 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 38
INFO  22:07:27,205 - Pronadjen poziv funkcije 'fun' na liniji 39
ERROR 22:07:27,205 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 39
ERROR 22:07:27,205 - Semanticka greska - tip mora da bude int na liniji 42
ERROR 22:07:27,205 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 45
ERROR 22:07:27,205 - Semanticka greska - break iskaz van petlje
ERROR 22:07:27,205 - Semanticka greska - continue iskaz van petlje
ERROR 22:07:27,206 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 56
ERROR 22:07:27,206 - Semanticka greska - if uslov nije tipa bool na liniji 60
ERROR 22:07:27,206 - Semanticka greska - nevalidan pristup elementu niza na liniji 65
INFO  22:07:27,206 - Pristup elementu niza 'niz' na liniji 65
ERROR 22:07:27,206 - Semanticka greska - while uslov nije tipa bool na liniji 64
ERROR 22:07:27,206 - Semanticka greska - clanovi izraza nisu tipa int na liniji 68
ERROR 22:07:27,206 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 68
ERROR 22:07:27,206 - Semanticka greska - clanovi izraza nisu tipa int na liniji 69
ERROR 22:07:27,206 - Semanticka greska - drugi i treci izraz moraju biti istog tipa na liniji 71
INFO  22:07:27,207 - ===================================
ERROR 22:07:27,207 - Parsiranje nije uspesno zavrseno!
ERROR 22:07:27,211 - [Line #0 ]  SEMANTIC_ERROR: Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
ERROR 22:07:27,211 - [Line #16]  SEMANTIC_ERROR: Semanticka greska - 'b' je vec deklarisano na liniji 16
ERROR 22:07:27,211 - [Line #23]  SEMANTIC_ERROR: Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 22:07:27,211 - [Line #24]  SEMANTIC_ERROR: Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 22:07:27,211 - [Line #25]  SEMANTIC_ERROR: Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 22:07:27,211 - [Line #26]  SEMANTIC_ERROR: Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 22:07:27,211 - [Line #27]  SEMANTIC_ERROR: Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 27
ERROR 22:07:27,211 - [Line #28]  SEMANTIC_ERROR: Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 28
ERROR 22:07:27,212 - [Line #31]  SEMANTIC_ERROR: Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 31
ERROR 22:07:27,212 - [Line #34]  SEMANTIC_ERROR: Semanticka greska - tip za inkrement moze biti jedino int na liniji 34
ERROR 22:07:27,212 - [Line #35]  SEMANTIC_ERROR: Semanticka greska - tip za dekrement moze biti jedino int na liniji 35
ERROR 22:07:27,212 - [Line #38]  SEMANTIC_ERROR: Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 38
ERROR 22:07:27,212 - [Line #39]  SEMANTIC_ERROR: Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 39
ERROR 22:07:27,212 - [Line #42]  SEMANTIC_ERROR: Semanticka greska - tip mora da bude int na liniji 42
ERROR 22:07:27,212 - [Line #45]  SEMANTIC_ERROR: Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 45
ERROR 22:07:27,212 - [Line #0 ]  SEMANTIC_ERROR: Semanticka greska - break iskaz van petlje
ERROR 22:07:27,212 - [Line #0 ]  SEMANTIC_ERROR: Semanticka greska - continue iskaz van petlje
ERROR 22:07:27,212 - [Line #56]  SEMANTIC_ERROR: Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 56
ERROR 22:07:27,212 - [Line #60]  SEMANTIC_ERROR: Semanticka greska - if uslov nije tipa bool na liniji 60
ERROR 22:07:27,212 - [Line #65]  SEMANTIC_ERROR: Semanticka greska - nevalidan pristup elementu niza na liniji 65
ERROR 22:07:27,212 - [Line #64]  SEMANTIC_ERROR: Semanticka greska - while uslov nije tipa bool na liniji 64
ERROR 22:07:27,212 - [Line #68]  SEMANTIC_ERROR: Semanticka greska - clanovi izraza nisu tipa int na liniji 68
ERROR 22:07:27,212 - [Line #68]  SEMANTIC_ERROR: Semanticka greska - clanovi izraza nisu kompatibilni na liniji 68
ERROR 22:07:27,213 - [Line #69]  SEMANTIC_ERROR: Semanticka greska - clanovi izraza nisu tipa int na liniji 69
ERROR 22:07:27,213 - [Line #71]  SEMANTIC_ERROR: Semanticka greska - drugi i treci izraz moraju biti istog tipa na liniji 71
INFO  22:41:44,338 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\semantic.mj
INFO  22:41:44,365 - #2 program
INFO  22:41:44,365 - #20 MJProgram
INFO  22:41:44,365 - #20 abc
INFO  22:41:44,365 - #20 a
INFO  22:41:44,367 - #40 ;
INFO  22:41:44,367 - #7 const
INFO  22:41:44,367 - #20 int
INFO  22:41:44,367 - #20 cnst
INFO  22:41:44,367 - #37 =
INFO  22:41:44,367 - #21 1
INFO  22:41:44,367 - #40 ;
INFO  22:41:44,367 - #47 {
INFO  22:41:44,367 - #20 int
INFO  22:41:44,367 - #20 fun
INFO  22:41:44,367 - #43 (
INFO  22:41:44,367 - #20 int
INFO  22:41:44,367 - #20 x
INFO  22:41:44,367 - #44 )
INFO  22:41:44,367 - #47 {
INFO  22:41:44,367 - #48 }
INFO  22:41:44,367 - #16 void
INFO  22:41:44,368 - #20 main
INFO  22:41:44,368 - #43 (
INFO  22:41:44,368 - #44 )
INFO  22:41:44,368 - #20 int
INFO  22:41:44,368 - #20 b
INFO  22:41:44,368 - #40 ;
INFO  22:41:44,368 - #20 char
INFO  22:41:44,368 - #20 b
INFO  22:41:44,368 - #40 ;
INFO  22:41:44,368 - #20 int
INFO  22:41:44,368 - #20 num
INFO  22:41:44,368 - #40 ;
INFO  22:41:44,368 - #20 char
INFO  22:41:44,368 - #20 character
INFO  22:41:44,369 - #40 ;
INFO  22:41:44,369 - #20 bool
INFO  22:41:44,369 - #20 boolean
INFO  22:41:44,369 - #40 ;
INFO  22:41:44,369 - #20 int
INFO  22:41:44,369 - #20 niz
INFO  22:41:44,369 - #45 [
INFO  22:41:44,369 - #46 ]
INFO  22:41:44,369 - #41 ,
INFO  22:41:44,369 - #20 niz1
INFO  22:41:44,369 - #45 [
INFO  22:41:44,369 - #46 ]
INFO  22:41:44,369 - #40 ;
INFO  22:41:44,369 - #47 {
INFO  22:41:44,369 - #20 num
INFO  22:41:44,369 - #37 =
INFO  22:41:44,370 - #22 a
ERROR 22:41:44,370 - 
Sintaksna greska na liniji 23, koloni 8 za simbol "a"!
INFO  22:41:44,370 - #40 ;
INFO  22:41:44,370 - #20 num
INFO  22:41:44,370 - #37 =
INFO  22:41:44,371 - #23 true
ERROR 22:41:44,371 - Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 8 za simbol "a"!
ERROR 22:41:44,371 - 
Sintaksna greska na liniji 24, koloni 8 za simbol "true"!
INFO  22:41:44,371 - #40 ;
INFO  22:41:44,371 - #20 character
INFO  22:41:44,371 - #37 =
INFO  22:41:44,371 - #21 1
ERROR 22:41:44,371 - Oporavak od greske u konstrukciji iskaza dodele na liniji 24, koloni 8 za simbol "true"!
ERROR 22:41:44,372 - 
Sintaksna greska na liniji 25, koloni 14 za simbol "1"!
INFO  22:41:44,372 - #40 ;
INFO  22:41:44,372 - #20 character
INFO  22:41:44,372 - #37 =
INFO  22:41:44,372 - #23 true
ERROR 22:41:44,372 - Oporavak od greske u konstrukciji iskaza dodele na liniji 25, koloni 14 za simbol "1"!
ERROR 22:41:44,372 - 
Sintaksna greska na liniji 26, koloni 14 za simbol "true"!
INFO  22:41:44,372 - #40 ;
INFO  22:41:44,372 - #20 boolean
INFO  22:41:44,372 - #37 =
INFO  22:41:44,372 - #21 1
ERROR 22:41:44,372 - Oporavak od greske u konstrukciji iskaza dodele na liniji 26, koloni 14 za simbol "true"!
ERROR 22:41:44,372 - 
Sintaksna greska na liniji 27, koloni 12 za simbol "1"!
INFO  22:41:44,372 - #40 ;
INFO  22:41:44,372 - #20 boolean
INFO  22:41:44,372 - #37 =
INFO  22:41:44,372 - #22 a
ERROR 22:41:44,372 - Oporavak od greske u konstrukciji iskaza dodele na liniji 27, koloni 12 za simbol "1"!
ERROR 22:41:44,372 - 
Sintaksna greska na liniji 28, koloni 12 za simbol "a"!
INFO  22:41:44,372 - #40 ;
INFO  22:41:44,373 - #20 cnst
INFO  22:41:44,373 - #37 =
INFO  22:41:44,373 - #21 2
ERROR 22:41:44,373 - Oporavak od greske u konstrukciji iskaza dodele na liniji 28, koloni 12 za simbol "a"!
ERROR 22:41:44,373 - 
Sintaksna greska na liniji 31, koloni 9 za simbol "2"!
INFO  22:41:44,373 - #40 ;
INFO  22:41:44,373 - #20 character
INFO  22:41:44,373 - #38 ++
INFO  22:41:44,373 - #40 ;
ERROR 22:41:44,373 - Oporavak od greske u konstrukciji iskaza dodele na liniji 31, koloni 9 za simbol "2"!
INFO  22:41:44,373 - #20 boolean
INFO  22:41:44,373 - #39 --
INFO  22:41:44,373 - #40 ;
INFO  22:41:44,373 - #20 fun
INFO  22:41:44,373 - #43 (
INFO  22:41:44,373 - #21 1
ERROR 22:41:44,374 - 
Sintaksna greska na liniji 38, koloni 6 za simbol "1"!
INFO  22:41:44,374 - #41 ,
INFO  22:41:44,374 - #21 2
INFO  22:41:44,374 - #44 )
INFO  22:41:44,374 - #40 ;
INFO  22:41:44,374 - #20 fun
INFO  22:41:44,374 - #43 (
INFO  22:41:44,374 - #23 true
INFO  22:41:44,374 - #44 )
INFO  22:41:44,374 - #40 ;
INFO  22:41:44,374 - #20 character
INFO  22:41:44,374 - #37 =
INFO  22:41:44,374 - #25 -
INFO  22:41:44,374 - #22 a
INFO  22:41:44,374 - #40 ;
INFO  22:41:44,374 - #20 niz
INFO  22:41:44,374 - #37 =
INFO  22:41:44,374 - #12 new
INFO  22:41:44,374 - #20 int
INFO  22:41:44,375 - #45 [
INFO  22:41:44,375 - #22 a
INFO  22:41:44,375 - #46 ]
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #10 do
INFO  22:41:44,375 - #47 {
INFO  22:41:44,375 - #20 num
INFO  22:41:44,375 - #38 ++
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #3 break
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #18 continue
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #48 }
INFO  22:41:44,375 - #11 while
INFO  22:41:44,375 - #43 (
INFO  22:41:44,375 - #20 num
INFO  22:41:44,375 - #33 <
INFO  22:41:44,375 - #21 10
INFO  22:41:44,375 - #44 )
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #3 break
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #18 continue
INFO  22:41:44,375 - #40 ;
INFO  22:41:44,375 - #8 if
INFO  22:41:44,375 - #43 (
INFO  22:41:44,375 - #20 niz
INFO  22:41:44,375 - #33 <
INFO  22:41:44,375 - #20 niz1
INFO  22:41:44,375 - #44 )
INFO  22:41:44,375 - #47 {
INFO  22:41:44,375 - #20 num
INFO  22:41:44,375 - #37 =
ERROR 22:41:44,375 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 38, koloni 6 za simbol "1"!
INFO  22:41:44,376 - #21 1
ERROR 22:41:44,376 - 
Sintaksna greska na liniji 57, koloni 9 za simbol "1"!
INFO  22:41:44,376 - #40 ;
INFO  22:41:44,376 - #48 }
INFO  22:41:44,376 - #8 if
INFO  22:41:44,376 - #43 (
INFO  22:41:44,376 - #20 num
INFO  22:41:44,376 - #44 )
INFO  22:41:44,376 - #47 {
INFO  22:41:44,376 - #20 num
INFO  22:41:44,376 - #37 =
INFO  22:41:44,376 - #21 2
INFO  22:41:44,376 - #40 ;
INFO  22:41:44,376 - #48 }
INFO  22:41:44,376 - #10 do
INFO  22:41:44,376 - #47 {
INFO  22:41:44,376 - #20 niz
INFO  22:41:44,376 - #45 [
INFO  22:41:44,376 - #23 true
INFO  22:41:44,376 - #46 ]
INFO  22:41:44,376 - #37 =
INFO  22:41:44,376 - #21 1
INFO  22:41:44,376 - #40 ;
INFO  22:41:44,376 - #48 }
INFO  22:41:44,376 - #11 while
INFO  22:41:44,376 - #43 (
INFO  22:41:44,376 - #20 num
INFO  22:41:44,377 - #44 )
INFO  22:41:44,377 - #40 ;
INFO  22:41:44,377 - #20 num
INFO  22:41:44,377 - #37 =
INFO  22:41:44,377 - #20 num
ERROR 22:41:44,377 - Oporavak od greske u konstrukciji iskaza dodele na liniji 57, koloni 9 za simbol "1"!
ERROR 22:41:44,377 - 
Sintaksna greska na liniji 68, koloni 8 za simbol "num"!
INFO  22:41:44,377 - #24 +
INFO  22:41:44,377 - #22 a
INFO  22:41:44,377 - #40 ;
INFO  22:41:44,377 - #20 num
INFO  22:41:44,377 - #37 =
INFO  22:41:44,377 - #20 num
ERROR 22:41:44,377 - Oporavak od greske u konstrukciji iskaza dodele na liniji 68, koloni 8 za simbol "num"!
ERROR 22:41:44,377 - 
Sintaksna greska na liniji 69, koloni 8 za simbol "num"!
INFO  22:41:44,377 - #26 *
INFO  22:41:44,377 - #22 a
INFO  22:41:44,377 - #40 ;
INFO  22:41:44,377 - #20 num
INFO  22:41:44,377 - #37 =
INFO  22:41:44,377 - #20 boolean
ERROR 22:41:44,377 - Oporavak od greske u konstrukciji iskaza dodele na liniji 69, koloni 8 za simbol "num"!
ERROR 22:41:44,377 - 
Sintaksna greska na liniji 71, koloni 8 za simbol "boolean"!
INFO  22:41:44,377 - #49 ?
INFO  22:41:44,377 - #21 1
INFO  22:41:44,377 - #50 :
INFO  22:41:44,377 - #22 a
INFO  22:41:44,377 - #40 ;
INFO  22:41:44,377 - #48 }
INFO  22:41:44,377 - #48 }
ERROR 22:41:44,377 - Oporavak od greske u konstrukciji iskaza dodele na liniji 71, koloni 8 za simbol "boolean"!
INFO  22:41:44,378 - 

================SINTAKSNO STABLO====================


INFO  22:41:44,378 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               a
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid2(
        MethodVoidName(
         main
        ) [MethodVoidName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                    AssignmentError(
                    ) [AssignmentError]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentError(
                  ) [AssignmentError]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentError(
                ) [AssignmentError]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentError(
              ) [AssignmentError]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid2]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:41:44,378 - 

================SEMANTICKA OBRADA====================


ERROR 22:41:44,381 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  22:41:44,381 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  22:41:44,382 - Deklarisana konstanta 'cnst' na liniji 5
INFO  22:41:44,382 - Formalni parametar funkcije fun: 'x' na liniji 7
ERROR 22:41:44,382 - Semanticka greska - 'num' nije deklarisano na liniji 57
ERROR 22:41:44,382 - Semanticka greska - 'num' nije deklarisano na liniji 68
ERROR 22:41:44,382 - Semanticka greska - 'num' nije deklarisano na liniji 69
ERROR 22:41:44,382 - Semanticka greska - 'num' nije deklarisano na liniji 71
INFO  22:41:44,382 - ===================================
ERROR 22:41:44,382 - Parsiranje nije uspesno zavrseno!
ERROR 22:41:44,386 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 8 za simbol "a"!
ERROR 22:41:44,386 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 8 za simbol "a"!
ERROR 22:41:44,386 - [Line #24]  SYNTAX_ERROR: 
Sintaksna greska na liniji 24, koloni 8 za simbol "true"!
ERROR 22:41:44,386 - [Line #24]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 24, koloni 8 za simbol "true"!
ERROR 22:41:44,387 - [Line #25]  SYNTAX_ERROR: 
Sintaksna greska na liniji 25, koloni 14 za simbol "1"!
ERROR 22:41:44,387 - [Line #25]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 25, koloni 14 za simbol "1"!
ERROR 22:41:44,387 - [Line #26]  SYNTAX_ERROR: 
Sintaksna greska na liniji 26, koloni 14 za simbol "true"!
ERROR 22:41:44,387 - [Line #26]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 26, koloni 14 za simbol "true"!
ERROR 22:41:44,387 - [Line #27]  SYNTAX_ERROR: 
Sintaksna greska na liniji 27, koloni 12 za simbol "1"!
ERROR 22:41:44,387 - [Line #27]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 27, koloni 12 za simbol "1"!
ERROR 22:41:44,387 - [Line #28]  SYNTAX_ERROR: 
Sintaksna greska na liniji 28, koloni 12 za simbol "a"!
ERROR 22:41:44,387 - [Line #28]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 28, koloni 12 za simbol "a"!
ERROR 22:41:44,387 - [Line #31]  SYNTAX_ERROR: 
Sintaksna greska na liniji 31, koloni 9 za simbol "2"!
ERROR 22:41:44,387 - [Line #31]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 31, koloni 9 za simbol "2"!
ERROR 22:41:44,387 - [Line #38]  SYNTAX_ERROR: 
Sintaksna greska na liniji 38, koloni 6 za simbol "1"!
ERROR 22:41:44,387 - [Line #38]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 38, koloni 6 za simbol "1"!
ERROR 22:41:44,387 - [Line #57]  SYNTAX_ERROR: 
Sintaksna greska na liniji 57, koloni 9 za simbol "1"!
ERROR 22:41:44,387 - [Line #57]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 57, koloni 9 za simbol "1"!
ERROR 22:41:44,387 - [Line #68]  SYNTAX_ERROR: 
Sintaksna greska na liniji 68, koloni 8 za simbol "num"!
ERROR 22:41:44,387 - [Line #68]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 68, koloni 8 za simbol "num"!
ERROR 22:41:44,388 - [Line #69]  SYNTAX_ERROR: 
Sintaksna greska na liniji 69, koloni 8 za simbol "num"!
ERROR 22:41:44,388 - [Line #69]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 69, koloni 8 za simbol "num"!
ERROR 22:41:44,388 - [Line #71]  SYNTAX_ERROR: 
Sintaksna greska na liniji 71, koloni 8 za simbol "boolean"!
ERROR 22:41:44,388 - [Line #71]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 71, koloni 8 za simbol "boolean"!
ERROR 22:41:44,388 - [Line #0 ]  SEMANTIC_ERROR: Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
ERROR 22:41:44,388 - [Line #57]  SEMANTIC_ERROR: Semanticka greska - 'num' nije deklarisano na liniji 57
ERROR 22:41:44,388 - [Line #68]  SEMANTIC_ERROR: Semanticka greska - 'num' nije deklarisano na liniji 68
ERROR 22:41:44,388 - [Line #69]  SEMANTIC_ERROR: Semanticka greska - 'num' nije deklarisano na liniji 69
ERROR 22:41:44,388 - [Line #71]  SEMANTIC_ERROR: Semanticka greska - 'num' nije deklarisano na liniji 71
INFO  22:42:09,528 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:42:09,555 - #2 program
INFO  22:42:09,555 - #20 test302
INFO  22:42:09,555 - #7 const
INFO  22:42:09,556 - #20 int
INFO  22:42:09,556 - #20 jedan
INFO  22:42:09,556 - #37 =
INFO  22:42:09,556 - #21 1
INFO  22:42:09,556 - #40 ;
INFO  22:42:09,557 - #20 int
INFO  22:42:09,557 - #20 i
INFO  22:42:09,557 - #40 ;
INFO  22:42:09,557 - #20 bool
INFO  22:42:09,557 - #20 ibool
INFO  22:42:09,557 - #40 ;
INFO  22:42:09,557 - #20 int
INFO  22:42:09,557 - #20 niz
INFO  22:42:09,557 - #45 [
INFO  22:42:09,557 - #46 ]
INFO  22:42:09,557 - #40 ;
INFO  22:42:09,558 - #47 {
INFO  22:42:09,558 - #20 int
INFO  22:42:09,558 - #20 sum
INFO  22:42:09,558 - #43 (
INFO  22:42:09,558 - #20 int
INFO  22:42:09,558 - #20 z
INFO  22:42:09,558 - #41 ,
INFO  22:42:09,558 - #20 int
INFO  22:42:09,558 - #20 d
INFO  22:42:09,558 - #44 )
INFO  22:42:09,558 - #47 {
INFO  22:42:09,558 - #15 return
INFO  22:42:09,558 - #20 z
ERROR 22:42:09,558 - 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
INFO  22:42:09,559 - #24 +
INFO  22:42:09,559 - #20 d
INFO  22:42:09,559 - #40 ;
INFO  22:42:09,560 - #48 }
INFO  22:42:09,560 - #20 int
INFO  22:42:09,560 - #20 inkrement
INFO  22:42:09,560 - #43 (
INFO  22:42:09,560 - #20 int
INFO  22:42:09,560 - #20 a
INFO  22:42:09,560 - #41 ,
INFO  22:42:09,560 - #20 int
INFO  22:42:09,560 - #20 inc
INFO  22:42:09,560 - #44 )
ERROR 22:42:09,560 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
INFO  22:42:09,560 - #20 int
INFO  22:42:09,560 - #20 pom
INFO  22:42:09,560 - #40 ;
INFO  22:42:09,560 - #47 {
INFO  22:42:09,561 - #8 if
INFO  22:42:09,561 - #43 (
INFO  22:42:09,561 - #20 inc
ERROR 22:42:09,561 - 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
INFO  22:42:09,561 - #29 ==
INFO  22:42:09,561 - #20 jedan
INFO  22:42:09,561 - #44 )
INFO  22:42:09,561 - #20 pom
INFO  22:42:09,561 - #37 =
INFO  22:42:09,561 - #21 1
ERROR 22:42:09,561 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:42:09,562 - 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
INFO  22:42:09,562 - #40 ;
INFO  22:42:09,562 - #6 else
INFO  22:42:09,562 - #8 if
INFO  22:42:09,562 - #43 (
ERROR 22:42:09,562 - Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
INFO  22:42:09,562 - #20 inc
ERROR 22:42:09,563 - 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
INFO  22:42:09,563 - #29 ==
INFO  22:42:09,563 - #21 2
INFO  22:42:09,563 - #44 )
INFO  22:42:09,563 - #20 pom
INFO  22:42:09,563 - #37 =
INFO  22:42:09,563 - #20 a
ERROR 22:42:09,563 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:42:09,563 - 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
INFO  22:42:09,563 - #40 ;
INFO  22:42:09,563 - #15 return
INFO  22:42:09,563 - #20 sum
INFO  22:42:09,563 - #43 (
INFO  22:42:09,563 - #20 a
INFO  22:42:09,563 - #41 ,
INFO  22:42:09,563 - #20 pom
INFO  22:42:09,563 - #44 )
INFO  22:42:09,563 - #40 ;
INFO  22:42:09,563 - #48 }
INFO  22:42:09,563 - #20 bool
INFO  22:42:09,563 - #20 verify
ERROR 22:42:09,563 - Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
INFO  22:42:09,564 - #43 (
INFO  22:42:09,564 - #44 )
INFO  22:42:09,564 - #47 {
INFO  22:42:09,564 - #13 print
INFO  22:42:09,564 - #43 (
INFO  22:42:09,564 - #22 v
ERROR 22:42:09,564 - 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
INFO  22:42:09,564 - #44 )
INFO  22:42:09,564 - #40 ;
INFO  22:42:09,564 - #15 return
INFO  22:42:09,564 - #23 false
INFO  22:42:09,564 - #40 ;
INFO  22:42:09,564 - #48 }
INFO  22:42:09,564 - #16 void
INFO  22:42:09,564 - #20 main
INFO  22:42:09,564 - #43 (
INFO  22:42:09,564 - #44 )
INFO  22:42:09,564 - #47 {
INFO  22:42:09,565 - #8 if
INFO  22:42:09,565 - #43 (
ERROR 22:42:09,565 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
INFO  22:42:09,565 - #21 1
ERROR 22:42:09,565 - 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
INFO  22:42:09,565 - #30 !=
INFO  22:42:09,565 - #21 1
INFO  22:42:09,565 - #44 )
INFO  22:42:09,565 - #13 print
INFO  22:42:09,565 - #43 (
INFO  22:42:09,565 - #25 -
ERROR 22:42:09,565 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:42:09,565 - 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
INFO  22:42:09,565 - #21 6
INFO  22:42:09,565 - #44 )
INFO  22:42:09,565 - #40 ;
INFO  22:42:09,565 - #6 else
INFO  22:42:09,565 - #13 print
INFO  22:42:09,565 - #43 (
INFO  22:42:09,565 - #21 0
INFO  22:42:09,565 - #44 )
INFO  22:42:09,566 - #40 ;
INFO  22:42:09,566 - #20 ibool
INFO  22:42:09,566 - #37 =
INFO  22:42:09,566 - #23 false
INFO  22:42:09,566 - #40 ;
INFO  22:42:09,566 - #20 i
INFO  22:42:09,566 - #37 =
INFO  22:42:09,566 - #21 0
INFO  22:42:09,566 - #40 ;
INFO  22:42:09,566 - #10 do
INFO  22:42:09,566 - #47 {
INFO  22:42:09,566 - #8 if
INFO  22:42:09,566 - #43 (
INFO  22:42:09,566 - #20 i
INFO  22:42:09,566 - #29 ==
INFO  22:42:09,566 - #21 2
INFO  22:42:09,566 - #44 )
INFO  22:42:09,566 - #20 ibool
INFO  22:42:09,566 - #37 =
INFO  22:42:09,566 - #23 true
INFO  22:42:09,566 - #40 ;
INFO  22:42:09,566 - #20 i
INFO  22:42:09,566 - #38 ++
INFO  22:42:09,566 - #40 ;
INFO  22:42:09,566 - #48 }
INFO  22:42:09,566 - #11 while
INFO  22:42:09,566 - #43 (
INFO  22:42:09,566 - #20 i
INFO  22:42:09,566 - #33 <
INFO  22:42:09,566 - #21 5
INFO  22:42:09,566 - #44 )
INFO  22:42:09,566 - #40 ;
INFO  22:42:09,566 - #8 if
INFO  22:42:09,566 - #43 (
INFO  22:42:09,566 - #20 ibool
INFO  22:42:09,566 - #44 )
INFO  22:42:09,566 - #8 if
INFO  22:42:09,566 - #43 (
INFO  22:42:09,566 - #20 i
INFO  22:42:09,566 - #29 ==
INFO  22:42:09,566 - #21 5
INFO  22:42:09,566 - #44 )
INFO  22:42:09,567 - #13 print
INFO  22:42:09,567 - #43 (
INFO  22:42:09,567 - #21 1
INFO  22:42:09,567 - #44 )
INFO  22:42:09,567 - #40 ;
INFO  22:42:09,567 - #6 else
INFO  22:42:09,567 - #13 print
INFO  22:42:09,567 - #43 (
INFO  22:42:09,567 - #25 -
INFO  22:42:09,567 - #21 1
INFO  22:42:09,567 - #44 )
INFO  22:42:09,567 - #40 ;
INFO  22:42:09,567 - #20 niz
INFO  22:42:09,567 - #37 =
INFO  22:42:09,567 - #12 new
INFO  22:42:09,567 - #20 int
INFO  22:42:09,567 - #45 [
INFO  22:42:09,567 - #21 3
INFO  22:42:09,567 - #46 ]
INFO  22:42:09,567 - #40 ;
INFO  22:42:09,567 - #20 niz
INFO  22:42:09,567 - #45 [
INFO  22:42:09,567 - #21 0
INFO  22:42:09,567 - #46 ]
INFO  22:42:09,567 - #37 =
INFO  22:42:09,567 - #21 1
INFO  22:42:09,567 - #40 ;
INFO  22:42:09,567 - #20 niz
INFO  22:42:09,567 - #45 [
INFO  22:42:09,567 - #21 1
INFO  22:42:09,567 - #46 ]
INFO  22:42:09,567 - #37 =
INFO  22:42:09,567 - #21 2
INFO  22:42:09,567 - #40 ;
INFO  22:42:09,567 - #20 niz
INFO  22:42:09,567 - #45 [
INFO  22:42:09,567 - #21 2
INFO  22:42:09,567 - #46 ]
INFO  22:42:09,567 - #37 =
INFO  22:42:09,567 - #20 sum
INFO  22:42:09,567 - #43 (
INFO  22:42:09,567 - #20 niz
INFO  22:42:09,567 - #45 [
INFO  22:42:09,567 - #21 1
INFO  22:42:09,567 - #46 ]
INFO  22:42:09,567 - #41 ,
INFO  22:42:09,567 - #20 niz
INFO  22:42:09,567 - #45 [
INFO  22:42:09,567 - #21 0
INFO  22:42:09,567 - #46 ]
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #24 +
INFO  22:42:09,568 - #21 1
INFO  22:42:09,568 - #40 ;
INFO  22:42:09,568 - #8 if
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #20 verify
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #36 ||
INFO  22:42:09,568 - #20 niz
INFO  22:42:09,568 - #45 [
INFO  22:42:09,568 - #21 2
INFO  22:42:09,568 - #46 ]
INFO  22:42:09,568 - #29 ==
INFO  22:42:09,568 - #21 4
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #13 print
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #20 ord
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #22 A
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #40 ;
INFO  22:42:09,568 - #6 else
INFO  22:42:09,568 - #13 print
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #20 ord
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #22 a
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #40 ;
INFO  22:42:09,568 - #13 print
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #20 eol
INFO  22:42:09,568 - #44 )
INFO  22:42:09,568 - #40 ;
INFO  22:42:09,568 - #20 i
INFO  22:42:09,568 - #37 =
INFO  22:42:09,568 - #21 0
INFO  22:42:09,568 - #40 ;
INFO  22:42:09,568 - #10 do
INFO  22:42:09,568 - #47 {
INFO  22:42:09,568 - #8 if
INFO  22:42:09,568 - #43 (
INFO  22:42:09,568 - #20 i
INFO  22:42:09,568 - #29 ==
INFO  22:42:09,569 - #21 3
INFO  22:42:09,569 - #44 )
INFO  22:42:09,569 - #47 {
INFO  22:42:09,569 - #20 i
INFO  22:42:09,569 - #38 ++
ERROR 22:42:09,569 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
INFO  22:42:09,569 - #40 ;
INFO  22:42:09,569 - #18 continue
INFO  22:42:09,569 - #40 ;
INFO  22:42:09,569 - #48 }
INFO  22:42:09,569 - #8 if
ERROR 22:42:09,569 - 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
INFO  22:42:09,569 - #43 (
INFO  22:42:09,569 - #20 i
INFO  22:42:09,569 - #29 ==
INFO  22:42:09,569 - #21 4
INFO  22:42:09,569 - #44 )
INFO  22:42:09,569 - #3 break
INFO  22:42:09,569 - #40 ;
INFO  22:42:09,569 - #20 i
INFO  22:42:09,569 - #37 =
INFO  22:42:09,569 - #20 inkrement
INFO  22:42:09,569 - #43 (
INFO  22:42:09,569 - #20 i
INFO  22:42:09,569 - #41 ,
INFO  22:42:09,569 - #21 1
INFO  22:42:09,569 - #44 )
INFO  22:42:09,569 - #40 ;
INFO  22:42:09,569 - #48 }
INFO  22:42:09,569 - #11 while
INFO  22:42:09,569 - #43 (
INFO  22:42:09,569 - #20 i
INFO  22:42:09,569 - #33 <
INFO  22:42:09,569 - #21 10
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #8 if
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 i
INFO  22:42:09,570 - #29 ==
INFO  22:42:09,570 - #21 3
INFO  22:42:09,570 - #35 &&
INFO  22:42:09,570 - #20 verify
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #13 print
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #25 -
INFO  22:42:09,570 - #21 4
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #6 else
INFO  22:42:09,570 - #13 print
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #21 4
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #14 read
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 niz
INFO  22:42:09,570 - #45 [
INFO  22:42:09,570 - #21 0
INFO  22:42:09,570 - #46 ]
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #14 read
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 niz
INFO  22:42:09,570 - #45 [
INFO  22:42:09,570 - #21 1
INFO  22:42:09,570 - #46 ]
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #14 read
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 niz
INFO  22:42:09,570 - #45 [
INFO  22:42:09,570 - #21 2
INFO  22:42:09,570 - #46 ]
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #13 print
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 eol
INFO  22:42:09,570 - #44 )
INFO  22:42:09,570 - #40 ;
INFO  22:42:09,570 - #13 print
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 sum
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 sum
INFO  22:42:09,570 - #43 (
INFO  22:42:09,570 - #20 niz
INFO  22:42:09,571 - #45 [
INFO  22:42:09,571 - #21 0
INFO  22:42:09,571 - #46 ]
INFO  22:42:09,571 - #41 ,
INFO  22:42:09,571 - #20 niz
INFO  22:42:09,571 - #45 [
INFO  22:42:09,571 - #21 1
INFO  22:42:09,571 - #46 ]
INFO  22:42:09,571 - #44 )
INFO  22:42:09,571 - #41 ,
INFO  22:42:09,571 - #20 niz
INFO  22:42:09,571 - #45 [
INFO  22:42:09,571 - #21 2
INFO  22:42:09,571 - #46 ]
INFO  22:42:09,571 - #44 )
INFO  22:42:09,571 - #44 )
INFO  22:42:09,571 - #40 ;
INFO  22:42:09,571 - #13 print
INFO  22:42:09,571 - #43 (
INFO  22:42:09,571 - #20 eol
INFO  22:42:09,571 - #44 )
INFO  22:42:09,571 - #40 ;
INFO  22:42:09,571 - #13 print
INFO  22:42:09,571 - #43 (
INFO  22:42:09,571 - #20 inkrement
INFO  22:42:09,571 - #43 (
INFO  22:42:09,571 - #20 niz
INFO  22:42:09,571 - #45 [
INFO  22:42:09,571 - #21 2
INFO  22:42:09,571 - #46 ]
INFO  22:42:09,571 - #41 ,
INFO  22:42:09,571 - #21 2
INFO  22:42:09,571 - #44 )
INFO  22:42:09,571 - #44 )
INFO  22:42:09,571 - #40 ;
INFO  22:42:09,571 - #48 }
INFO  22:42:09,571 - #48 }
ERROR 22:42:09,571 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
ERROR 22:42:09,576 - [Line #16]  SYNTAX_ERROR: 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
ERROR 22:42:09,576 - [Line #16]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
ERROR 22:42:09,576 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:42:09,576 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:42:09,576 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
ERROR 22:42:09,576 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
ERROR 22:42:09,576 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:42:09,576 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:42:09,576 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
ERROR 22:42:09,576 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
ERROR 22:42:09,576 - [Line #29]  SYNTAX_ERROR: 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
ERROR 22:42:09,577 - [Line #29]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
ERROR 22:42:09,577 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
ERROR 22:42:09,577 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:42:09,577 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
ERROR 22:42:09,577 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
ERROR 22:42:09,577 - [Line #64]  SYNTAX_ERROR: 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
ERROR 22:42:09,577 - [Line #81]  SYNTAX_ERROR: Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
INFO  22:42:19,149 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:42:19,176 - #2 program
INFO  22:42:19,176 - #20 test302
INFO  22:42:19,176 - #7 const
INFO  22:42:19,176 - #20 int
INFO  22:42:19,176 - #20 jedan
INFO  22:42:19,176 - #37 =
INFO  22:42:19,177 - #21 1
INFO  22:42:19,177 - #40 ;
INFO  22:42:19,177 - #20 int
INFO  22:42:19,177 - #20 i
INFO  22:42:19,177 - #40 ;
INFO  22:42:19,177 - #20 bool
INFO  22:42:19,177 - #20 ibool
INFO  22:42:19,178 - #40 ;
INFO  22:42:19,178 - #20 int
INFO  22:42:19,178 - #20 niz
INFO  22:42:19,178 - #45 [
INFO  22:42:19,178 - #46 ]
INFO  22:42:19,178 - #40 ;
INFO  22:42:19,178 - #47 {
INFO  22:42:19,178 - #20 int
INFO  22:42:19,178 - #20 sum
INFO  22:42:19,178 - #43 (
INFO  22:42:19,178 - #20 int
INFO  22:42:19,178 - #20 z
INFO  22:42:19,178 - #41 ,
INFO  22:42:19,178 - #20 int
INFO  22:42:19,178 - #20 d
INFO  22:42:19,179 - #44 )
INFO  22:42:19,179 - #47 {
INFO  22:42:19,179 - #15 return
INFO  22:42:19,179 - #20 z
ERROR 22:42:19,179 - 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
INFO  22:42:19,179 - #24 +
INFO  22:42:19,180 - #20 d
INFO  22:42:19,180 - #40 ;
INFO  22:42:19,180 - #48 }
INFO  22:42:19,180 - #20 int
INFO  22:42:19,180 - #20 inkrement
INFO  22:42:19,180 - #43 (
INFO  22:42:19,180 - #20 int
INFO  22:42:19,180 - #20 a
INFO  22:42:19,180 - #41 ,
INFO  22:42:19,180 - #20 int
INFO  22:42:19,180 - #20 inc
INFO  22:42:19,180 - #44 )
ERROR 22:42:19,180 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
INFO  22:42:19,181 - #20 int
INFO  22:42:19,181 - #20 pom
INFO  22:42:19,181 - #40 ;
INFO  22:42:19,181 - #47 {
INFO  22:42:19,181 - #8 if
INFO  22:42:19,181 - #43 (
INFO  22:42:19,181 - #20 inc
ERROR 22:42:19,181 - 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
INFO  22:42:19,182 - #29 ==
INFO  22:42:19,182 - #20 jedan
INFO  22:42:19,182 - #44 )
INFO  22:42:19,182 - #20 pom
INFO  22:42:19,182 - #37 =
INFO  22:42:19,182 - #21 1
ERROR 22:42:19,182 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:42:19,182 - 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
INFO  22:42:19,182 - #40 ;
INFO  22:42:19,182 - #6 else
INFO  22:42:19,182 - #8 if
INFO  22:42:19,182 - #43 (
ERROR 22:42:19,183 - Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
INFO  22:42:19,183 - #20 inc
ERROR 22:42:19,183 - 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
INFO  22:42:19,183 - #29 ==
INFO  22:42:19,183 - #21 2
INFO  22:42:19,183 - #44 )
INFO  22:42:19,183 - #20 pom
INFO  22:42:19,183 - #37 =
INFO  22:42:19,183 - #20 a
ERROR 22:42:19,183 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:42:19,183 - 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
INFO  22:42:19,183 - #40 ;
INFO  22:42:19,183 - #15 return
INFO  22:42:19,183 - #20 sum
INFO  22:42:19,183 - #43 (
INFO  22:42:19,183 - #20 a
INFO  22:42:19,184 - #41 ,
INFO  22:42:19,184 - #20 pom
INFO  22:42:19,184 - #44 )
INFO  22:42:19,184 - #40 ;
INFO  22:42:19,184 - #48 }
INFO  22:42:19,184 - #20 bool
INFO  22:42:19,184 - #20 verify
ERROR 22:42:19,184 - Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
INFO  22:42:19,184 - #43 (
INFO  22:42:19,184 - #44 )
INFO  22:42:19,184 - #47 {
INFO  22:42:19,184 - #13 print
INFO  22:42:19,184 - #43 (
INFO  22:42:19,184 - #22 v
ERROR 22:42:19,184 - 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
INFO  22:42:19,184 - #44 )
INFO  22:42:19,184 - #40 ;
INFO  22:42:19,185 - #15 return
INFO  22:42:19,185 - #23 false
INFO  22:42:19,185 - #40 ;
INFO  22:42:19,185 - #48 }
INFO  22:42:19,185 - #16 void
INFO  22:42:19,185 - #20 main
INFO  22:42:19,185 - #43 (
INFO  22:42:19,185 - #44 )
INFO  22:42:19,185 - #47 {
INFO  22:42:19,185 - #8 if
INFO  22:42:19,185 - #43 (
ERROR 22:42:19,185 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
INFO  22:42:19,185 - #21 1
ERROR 22:42:19,185 - 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
INFO  22:42:19,185 - #30 !=
INFO  22:42:19,185 - #21 1
INFO  22:42:19,185 - #44 )
INFO  22:42:19,185 - #13 print
INFO  22:42:19,185 - #43 (
INFO  22:42:19,186 - #25 -
ERROR 22:42:19,186 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:42:19,186 - 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
INFO  22:42:19,186 - #21 6
INFO  22:42:19,186 - #44 )
INFO  22:42:19,186 - #40 ;
INFO  22:42:19,186 - #6 else
INFO  22:42:19,186 - #13 print
INFO  22:42:19,186 - #43 (
INFO  22:42:19,186 - #21 0
INFO  22:42:19,186 - #44 )
INFO  22:42:19,186 - #40 ;
INFO  22:42:19,186 - #20 ibool
INFO  22:42:19,186 - #37 =
INFO  22:42:19,186 - #23 false
INFO  22:42:19,186 - #40 ;
INFO  22:42:19,186 - #20 i
INFO  22:42:19,186 - #37 =
INFO  22:42:19,186 - #21 0
INFO  22:42:19,186 - #40 ;
INFO  22:42:19,186 - #10 do
INFO  22:42:19,186 - #47 {
INFO  22:42:19,186 - #8 if
INFO  22:42:19,186 - #43 (
INFO  22:42:19,186 - #20 i
INFO  22:42:19,186 - #29 ==
INFO  22:42:19,186 - #21 2
INFO  22:42:19,186 - #44 )
INFO  22:42:19,186 - #20 ibool
INFO  22:42:19,186 - #37 =
INFO  22:42:19,186 - #23 true
INFO  22:42:19,186 - #40 ;
INFO  22:42:19,186 - #20 i
INFO  22:42:19,186 - #38 ++
INFO  22:42:19,186 - #40 ;
INFO  22:42:19,186 - #48 }
INFO  22:42:19,186 - #11 while
INFO  22:42:19,186 - #43 (
INFO  22:42:19,186 - #20 i
INFO  22:42:19,187 - #33 <
INFO  22:42:19,187 - #21 5
INFO  22:42:19,187 - #44 )
INFO  22:42:19,187 - #40 ;
INFO  22:42:19,187 - #8 if
INFO  22:42:19,187 - #43 (
INFO  22:42:19,187 - #20 ibool
INFO  22:42:19,187 - #44 )
INFO  22:42:19,187 - #8 if
INFO  22:42:19,187 - #43 (
INFO  22:42:19,187 - #20 i
INFO  22:42:19,187 - #29 ==
INFO  22:42:19,187 - #21 5
INFO  22:42:19,187 - #44 )
INFO  22:42:19,187 - #13 print
INFO  22:42:19,187 - #43 (
INFO  22:42:19,187 - #21 1
INFO  22:42:19,187 - #44 )
INFO  22:42:19,187 - #40 ;
INFO  22:42:19,187 - #6 else
INFO  22:42:19,187 - #13 print
INFO  22:42:19,187 - #43 (
INFO  22:42:19,187 - #25 -
INFO  22:42:19,187 - #21 1
INFO  22:42:19,187 - #44 )
INFO  22:42:19,187 - #40 ;
INFO  22:42:19,187 - #20 niz
INFO  22:42:19,187 - #37 =
INFO  22:42:19,187 - #12 new
INFO  22:42:19,187 - #20 int
INFO  22:42:19,187 - #45 [
INFO  22:42:19,187 - #21 3
INFO  22:42:19,187 - #46 ]
INFO  22:42:19,187 - #40 ;
INFO  22:42:19,187 - #20 niz
INFO  22:42:19,187 - #45 [
INFO  22:42:19,187 - #21 0
INFO  22:42:19,187 - #46 ]
INFO  22:42:19,187 - #37 =
INFO  22:42:19,187 - #21 1
INFO  22:42:19,187 - #40 ;
INFO  22:42:19,187 - #20 niz
INFO  22:42:19,187 - #45 [
INFO  22:42:19,187 - #21 1
INFO  22:42:19,187 - #46 ]
INFO  22:42:19,187 - #37 =
INFO  22:42:19,187 - #21 2
INFO  22:42:19,187 - #40 ;
INFO  22:42:19,188 - #20 niz
INFO  22:42:19,188 - #45 [
INFO  22:42:19,188 - #21 2
INFO  22:42:19,188 - #46 ]
INFO  22:42:19,188 - #37 =
INFO  22:42:19,188 - #20 sum
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #20 niz
INFO  22:42:19,188 - #45 [
INFO  22:42:19,188 - #21 1
INFO  22:42:19,188 - #46 ]
INFO  22:42:19,188 - #41 ,
INFO  22:42:19,188 - #20 niz
INFO  22:42:19,188 - #45 [
INFO  22:42:19,188 - #21 0
INFO  22:42:19,188 - #46 ]
INFO  22:42:19,188 - #44 )
INFO  22:42:19,188 - #24 +
INFO  22:42:19,188 - #21 1
INFO  22:42:19,188 - #40 ;
INFO  22:42:19,188 - #8 if
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #20 verify
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #44 )
INFO  22:42:19,188 - #36 ||
INFO  22:42:19,188 - #20 niz
INFO  22:42:19,188 - #45 [
INFO  22:42:19,188 - #21 2
INFO  22:42:19,188 - #46 ]
INFO  22:42:19,188 - #29 ==
INFO  22:42:19,188 - #21 4
INFO  22:42:19,188 - #44 )
INFO  22:42:19,188 - #13 print
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #20 ord
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #22 A
INFO  22:42:19,188 - #44 )
INFO  22:42:19,188 - #44 )
INFO  22:42:19,188 - #40 ;
INFO  22:42:19,188 - #6 else
INFO  22:42:19,188 - #13 print
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #20 ord
INFO  22:42:19,188 - #43 (
INFO  22:42:19,188 - #22 a
INFO  22:42:19,188 - #44 )
INFO  22:42:19,189 - #44 )
INFO  22:42:19,189 - #40 ;
INFO  22:42:19,189 - #13 print
INFO  22:42:19,189 - #43 (
INFO  22:42:19,189 - #20 eol
INFO  22:42:19,189 - #44 )
INFO  22:42:19,189 - #40 ;
INFO  22:42:19,189 - #20 i
INFO  22:42:19,189 - #37 =
INFO  22:42:19,189 - #21 0
INFO  22:42:19,189 - #40 ;
INFO  22:42:19,189 - #10 do
INFO  22:42:19,189 - #47 {
INFO  22:42:19,189 - #8 if
INFO  22:42:19,189 - #43 (
INFO  22:42:19,189 - #20 i
INFO  22:42:19,189 - #29 ==
INFO  22:42:19,189 - #21 3
INFO  22:42:19,189 - #44 )
INFO  22:42:19,189 - #47 {
INFO  22:42:19,189 - #20 i
INFO  22:42:19,189 - #38 ++
ERROR 22:42:19,189 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
INFO  22:42:19,189 - #40 ;
INFO  22:42:19,189 - #18 continue
INFO  22:42:19,189 - #40 ;
INFO  22:42:19,189 - #48 }
INFO  22:42:19,189 - #8 if
ERROR 22:42:19,189 - 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #20 i
INFO  22:42:19,190 - #29 ==
INFO  22:42:19,190 - #21 4
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #3 break
INFO  22:42:19,190 - #40 ;
INFO  22:42:19,190 - #20 i
INFO  22:42:19,190 - #37 =
INFO  22:42:19,190 - #20 inkrement
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #20 i
INFO  22:42:19,190 - #41 ,
INFO  22:42:19,190 - #21 1
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #40 ;
INFO  22:42:19,190 - #48 }
INFO  22:42:19,190 - #11 while
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #20 i
INFO  22:42:19,190 - #33 <
INFO  22:42:19,190 - #21 10
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #40 ;
INFO  22:42:19,190 - #8 if
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #20 i
INFO  22:42:19,190 - #29 ==
INFO  22:42:19,190 - #21 3
INFO  22:42:19,190 - #35 &&
INFO  22:42:19,190 - #20 verify
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #13 print
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #25 -
INFO  22:42:19,190 - #21 4
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #40 ;
INFO  22:42:19,190 - #6 else
INFO  22:42:19,190 - #13 print
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #21 4
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #40 ;
INFO  22:42:19,190 - #14 read
INFO  22:42:19,190 - #43 (
INFO  22:42:19,190 - #20 niz
INFO  22:42:19,190 - #45 [
INFO  22:42:19,190 - #21 0
INFO  22:42:19,190 - #46 ]
INFO  22:42:19,190 - #44 )
INFO  22:42:19,190 - #40 ;
INFO  22:42:19,190 - #14 read
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 niz
INFO  22:42:19,191 - #45 [
INFO  22:42:19,191 - #21 1
INFO  22:42:19,191 - #46 ]
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #40 ;
INFO  22:42:19,191 - #14 read
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 niz
INFO  22:42:19,191 - #45 [
INFO  22:42:19,191 - #21 2
INFO  22:42:19,191 - #46 ]
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #40 ;
INFO  22:42:19,191 - #13 print
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 eol
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #40 ;
INFO  22:42:19,191 - #13 print
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 sum
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 sum
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 niz
INFO  22:42:19,191 - #45 [
INFO  22:42:19,191 - #21 0
INFO  22:42:19,191 - #46 ]
INFO  22:42:19,191 - #41 ,
INFO  22:42:19,191 - #20 niz
INFO  22:42:19,191 - #45 [
INFO  22:42:19,191 - #21 1
INFO  22:42:19,191 - #46 ]
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #41 ,
INFO  22:42:19,191 - #20 niz
INFO  22:42:19,191 - #45 [
INFO  22:42:19,191 - #21 2
INFO  22:42:19,191 - #46 ]
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #40 ;
INFO  22:42:19,191 - #13 print
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 eol
INFO  22:42:19,191 - #44 )
INFO  22:42:19,191 - #40 ;
INFO  22:42:19,191 - #13 print
INFO  22:42:19,191 - #43 (
INFO  22:42:19,191 - #20 inkrement
INFO  22:42:19,192 - #43 (
INFO  22:42:19,192 - #20 niz
INFO  22:42:19,192 - #45 [
INFO  22:42:19,192 - #21 2
INFO  22:42:19,192 - #46 ]
INFO  22:42:19,192 - #41 ,
INFO  22:42:19,192 - #21 2
INFO  22:42:19,192 - #44 )
INFO  22:42:19,192 - #44 )
INFO  22:42:19,192 - #40 ;
INFO  22:42:19,192 - #48 }
INFO  22:42:19,192 - #48 }
ERROR 22:42:19,192 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
ERROR 22:42:19,196 - [Line #16]  SYNTAX_ERROR: 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
ERROR 22:42:19,196 - [Line #16]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
ERROR 22:42:19,196 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:42:19,196 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:42:19,197 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
ERROR 22:42:19,197 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
ERROR 22:42:19,197 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:42:19,197 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:42:19,197 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
ERROR 22:42:19,197 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
ERROR 22:42:19,197 - [Line #29]  SYNTAX_ERROR: 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
ERROR 22:42:19,197 - [Line #29]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
ERROR 22:42:19,197 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
ERROR 22:42:19,197 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:42:19,197 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
ERROR 22:42:19,197 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
ERROR 22:42:19,197 - [Line #64]  SYNTAX_ERROR: 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
ERROR 22:42:19,197 - [Line #81]  SYNTAX_ERROR: Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
INFO  22:43:32,889 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:43:32,916 - #2 program
INFO  22:43:32,917 - #20 test302
INFO  22:43:32,917 - #7 const
INFO  22:43:32,917 - #20 int
INFO  22:43:32,917 - #20 jedan
INFO  22:43:32,917 - #37 =
INFO  22:43:32,917 - #21 1
INFO  22:43:32,918 - #40 ;
INFO  22:43:32,918 - #20 int
INFO  22:43:32,918 - #20 i
INFO  22:43:32,918 - #40 ;
INFO  22:43:32,918 - #20 bool
INFO  22:43:32,918 - #20 ibool
INFO  22:43:32,918 - #40 ;
INFO  22:43:32,919 - #20 int
INFO  22:43:32,919 - #20 niz
INFO  22:43:32,919 - #45 [
INFO  22:43:32,919 - #46 ]
INFO  22:43:32,919 - #40 ;
INFO  22:43:32,919 - #47 {
INFO  22:43:32,919 - #20 int
INFO  22:43:32,919 - #20 sum
INFO  22:43:32,919 - #43 (
INFO  22:43:32,919 - #20 int
INFO  22:43:32,919 - #20 z
INFO  22:43:32,919 - #41 ,
INFO  22:43:32,919 - #20 int
INFO  22:43:32,920 - #20 d
INFO  22:43:32,920 - #44 )
INFO  22:43:32,920 - #47 {
INFO  22:43:32,920 - #15 return
INFO  22:43:32,920 - #20 z
ERROR 22:43:32,920 - 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
INFO  22:43:32,921 - #24 +
INFO  22:43:32,921 - #20 d
INFO  22:43:32,921 - #40 ;
INFO  22:43:32,921 - #48 }
INFO  22:43:32,921 - #20 int
INFO  22:43:32,921 - #20 inkrement
INFO  22:43:32,921 - #43 (
INFO  22:43:32,921 - #20 int
INFO  22:43:32,921 - #20 a
INFO  22:43:32,921 - #41 ,
INFO  22:43:32,921 - #20 int
INFO  22:43:32,921 - #20 inc
INFO  22:43:32,921 - #44 )
ERROR 22:43:32,921 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
INFO  22:43:32,922 - #20 int
INFO  22:43:32,922 - #20 pom
INFO  22:43:32,922 - #40 ;
INFO  22:43:32,922 - #47 {
INFO  22:43:32,922 - #8 if
INFO  22:43:32,922 - #43 (
INFO  22:43:32,922 - #20 inc
ERROR 22:43:32,923 - 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
INFO  22:43:32,923 - #29 ==
INFO  22:43:32,923 - #20 jedan
INFO  22:43:32,923 - #44 )
INFO  22:43:32,923 - #20 pom
INFO  22:43:32,923 - #37 =
INFO  22:43:32,923 - #21 1
ERROR 22:43:32,923 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:43:32,923 - 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
INFO  22:43:32,923 - #40 ;
INFO  22:43:32,923 - #6 else
INFO  22:43:32,924 - #8 if
INFO  22:43:32,924 - #43 (
ERROR 22:43:32,924 - Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
INFO  22:43:32,924 - #20 inc
ERROR 22:43:32,924 - 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
INFO  22:43:32,924 - #29 ==
INFO  22:43:32,924 - #21 2
INFO  22:43:32,924 - #44 )
INFO  22:43:32,924 - #20 pom
INFO  22:43:32,924 - #37 =
INFO  22:43:32,924 - #20 a
ERROR 22:43:32,924 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:43:32,924 - 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
INFO  22:43:32,924 - #40 ;
INFO  22:43:32,924 - #15 return
INFO  22:43:32,924 - #20 sum
INFO  22:43:32,925 - #43 (
INFO  22:43:32,925 - #20 a
INFO  22:43:32,925 - #41 ,
INFO  22:43:32,925 - #20 pom
INFO  22:43:32,925 - #44 )
INFO  22:43:32,925 - #40 ;
INFO  22:43:32,925 - #48 }
INFO  22:43:32,925 - #20 bool
INFO  22:43:32,925 - #20 verify
ERROR 22:43:32,925 - Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
INFO  22:43:32,925 - #43 (
INFO  22:43:32,925 - #44 )
INFO  22:43:32,925 - #47 {
INFO  22:43:32,925 - #13 print
INFO  22:43:32,925 - #43 (
INFO  22:43:32,925 - #22 v
ERROR 22:43:32,926 - 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
INFO  22:43:32,926 - #44 )
INFO  22:43:32,926 - #40 ;
INFO  22:43:32,926 - #15 return
INFO  22:43:32,926 - #23 false
INFO  22:43:32,926 - #40 ;
INFO  22:43:32,926 - #48 }
INFO  22:43:32,926 - #16 void
INFO  22:43:32,926 - #20 main
INFO  22:43:32,926 - #43 (
INFO  22:43:32,926 - #44 )
INFO  22:43:32,926 - #47 {
INFO  22:43:32,926 - #8 if
INFO  22:43:32,926 - #43 (
ERROR 22:43:32,926 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
INFO  22:43:32,926 - #21 1
ERROR 22:43:32,926 - 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
INFO  22:43:32,926 - #30 !=
INFO  22:43:32,926 - #21 1
INFO  22:43:32,926 - #44 )
INFO  22:43:32,927 - #13 print
INFO  22:43:32,927 - #43 (
INFO  22:43:32,927 - #25 -
ERROR 22:43:32,927 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:43:32,927 - 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
INFO  22:43:32,927 - #21 6
INFO  22:43:32,927 - #44 )
INFO  22:43:32,927 - #40 ;
INFO  22:43:32,927 - #6 else
INFO  22:43:32,927 - #13 print
INFO  22:43:32,927 - #43 (
INFO  22:43:32,927 - #21 0
INFO  22:43:32,927 - #44 )
INFO  22:43:32,927 - #40 ;
INFO  22:43:32,927 - #20 ibool
INFO  22:43:32,927 - #37 =
INFO  22:43:32,927 - #23 false
INFO  22:43:32,927 - #40 ;
INFO  22:43:32,927 - #20 i
INFO  22:43:32,927 - #37 =
INFO  22:43:32,927 - #21 0
INFO  22:43:32,927 - #40 ;
INFO  22:43:32,927 - #10 do
INFO  22:43:32,927 - #47 {
INFO  22:43:32,927 - #8 if
INFO  22:43:32,927 - #43 (
INFO  22:43:32,927 - #20 i
INFO  22:43:32,927 - #29 ==
INFO  22:43:32,927 - #21 2
INFO  22:43:32,927 - #44 )
INFO  22:43:32,927 - #20 ibool
INFO  22:43:32,927 - #37 =
INFO  22:43:32,927 - #23 true
INFO  22:43:32,927 - #40 ;
INFO  22:43:32,927 - #20 i
INFO  22:43:32,927 - #38 ++
INFO  22:43:32,927 - #40 ;
INFO  22:43:32,928 - #48 }
INFO  22:43:32,928 - #11 while
INFO  22:43:32,928 - #43 (
INFO  22:43:32,928 - #20 i
INFO  22:43:32,928 - #33 <
INFO  22:43:32,928 - #21 5
INFO  22:43:32,928 - #44 )
INFO  22:43:32,928 - #40 ;
INFO  22:43:32,928 - #8 if
INFO  22:43:32,928 - #43 (
INFO  22:43:32,928 - #20 ibool
INFO  22:43:32,928 - #44 )
INFO  22:43:32,928 - #8 if
INFO  22:43:32,928 - #43 (
INFO  22:43:32,928 - #20 i
INFO  22:43:32,928 - #29 ==
INFO  22:43:32,928 - #21 5
INFO  22:43:32,928 - #44 )
INFO  22:43:32,928 - #13 print
INFO  22:43:32,928 - #43 (
INFO  22:43:32,928 - #21 1
INFO  22:43:32,928 - #44 )
INFO  22:43:32,928 - #40 ;
INFO  22:43:32,928 - #6 else
INFO  22:43:32,928 - #13 print
INFO  22:43:32,928 - #43 (
INFO  22:43:32,928 - #25 -
INFO  22:43:32,928 - #21 1
INFO  22:43:32,928 - #44 )
INFO  22:43:32,928 - #40 ;
INFO  22:43:32,928 - #20 niz
INFO  22:43:32,928 - #37 =
INFO  22:43:32,928 - #12 new
INFO  22:43:32,928 - #20 int
INFO  22:43:32,928 - #45 [
INFO  22:43:32,928 - #21 3
INFO  22:43:32,928 - #46 ]
INFO  22:43:32,928 - #40 ;
INFO  22:43:32,928 - #20 niz
INFO  22:43:32,928 - #45 [
INFO  22:43:32,928 - #21 0
INFO  22:43:32,928 - #46 ]
INFO  22:43:32,928 - #37 =
INFO  22:43:32,928 - #21 1
INFO  22:43:32,928 - #40 ;
INFO  22:43:32,928 - #20 niz
INFO  22:43:32,928 - #45 [
INFO  22:43:32,928 - #21 1
INFO  22:43:32,929 - #46 ]
INFO  22:43:32,929 - #37 =
INFO  22:43:32,929 - #21 2
INFO  22:43:32,929 - #40 ;
INFO  22:43:32,929 - #20 niz
INFO  22:43:32,929 - #45 [
INFO  22:43:32,929 - #21 2
INFO  22:43:32,929 - #46 ]
INFO  22:43:32,929 - #37 =
INFO  22:43:32,929 - #20 sum
INFO  22:43:32,929 - #43 (
INFO  22:43:32,929 - #20 niz
INFO  22:43:32,929 - #45 [
INFO  22:43:32,929 - #21 1
INFO  22:43:32,929 - #46 ]
INFO  22:43:32,929 - #41 ,
INFO  22:43:32,929 - #20 niz
INFO  22:43:32,929 - #45 [
INFO  22:43:32,929 - #21 0
INFO  22:43:32,929 - #46 ]
INFO  22:43:32,929 - #44 )
INFO  22:43:32,929 - #24 +
INFO  22:43:32,929 - #21 1
INFO  22:43:32,929 - #40 ;
INFO  22:43:32,929 - #8 if
INFO  22:43:32,929 - #43 (
INFO  22:43:32,929 - #20 verify
INFO  22:43:32,929 - #43 (
INFO  22:43:32,929 - #44 )
INFO  22:43:32,929 - #36 ||
INFO  22:43:32,929 - #20 niz
INFO  22:43:32,929 - #45 [
INFO  22:43:32,929 - #21 2
INFO  22:43:32,929 - #46 ]
INFO  22:43:32,929 - #29 ==
INFO  22:43:32,929 - #21 4
INFO  22:43:32,929 - #44 )
INFO  22:43:32,929 - #13 print
INFO  22:43:32,929 - #43 (
INFO  22:43:32,929 - #20 ord
INFO  22:43:32,929 - #43 (
INFO  22:43:32,929 - #22 A
INFO  22:43:32,929 - #44 )
INFO  22:43:32,929 - #44 )
INFO  22:43:32,929 - #40 ;
INFO  22:43:32,929 - #6 else
INFO  22:43:32,929 - #13 print
INFO  22:43:32,930 - #43 (
INFO  22:43:32,930 - #20 ord
INFO  22:43:32,930 - #43 (
INFO  22:43:32,930 - #22 a
INFO  22:43:32,930 - #44 )
INFO  22:43:32,930 - #44 )
INFO  22:43:32,930 - #40 ;
INFO  22:43:32,930 - #13 print
INFO  22:43:32,930 - #43 (
INFO  22:43:32,930 - #20 eol
INFO  22:43:32,930 - #44 )
INFO  22:43:32,930 - #40 ;
INFO  22:43:32,930 - #20 i
INFO  22:43:32,930 - #37 =
INFO  22:43:32,930 - #21 0
INFO  22:43:32,930 - #40 ;
INFO  22:43:32,930 - #10 do
INFO  22:43:32,930 - #47 {
INFO  22:43:32,930 - #8 if
INFO  22:43:32,930 - #43 (
INFO  22:43:32,930 - #20 i
INFO  22:43:32,930 - #29 ==
INFO  22:43:32,930 - #21 3
INFO  22:43:32,930 - #44 )
INFO  22:43:32,930 - #47 {
INFO  22:43:32,930 - #20 i
INFO  22:43:32,930 - #38 ++
ERROR 22:43:32,930 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
INFO  22:43:32,930 - #40 ;
INFO  22:43:32,930 - #18 continue
INFO  22:43:32,930 - #40 ;
INFO  22:43:32,930 - #48 }
INFO  22:43:32,931 - #8 if
ERROR 22:43:32,931 - 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #20 i
INFO  22:43:32,931 - #29 ==
INFO  22:43:32,931 - #21 4
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #3 break
INFO  22:43:32,931 - #40 ;
INFO  22:43:32,931 - #20 i
INFO  22:43:32,931 - #37 =
INFO  22:43:32,931 - #20 inkrement
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #20 i
INFO  22:43:32,931 - #41 ,
INFO  22:43:32,931 - #21 1
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #40 ;
INFO  22:43:32,931 - #48 }
INFO  22:43:32,931 - #11 while
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #20 i
INFO  22:43:32,931 - #33 <
INFO  22:43:32,931 - #21 10
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #40 ;
INFO  22:43:32,931 - #8 if
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #20 i
INFO  22:43:32,931 - #29 ==
INFO  22:43:32,931 - #21 3
INFO  22:43:32,931 - #35 &&
INFO  22:43:32,931 - #20 verify
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #13 print
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #25 -
INFO  22:43:32,931 - #21 4
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #40 ;
INFO  22:43:32,931 - #6 else
INFO  22:43:32,931 - #13 print
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #21 4
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #40 ;
INFO  22:43:32,931 - #14 read
INFO  22:43:32,931 - #43 (
INFO  22:43:32,931 - #20 niz
INFO  22:43:32,931 - #45 [
INFO  22:43:32,931 - #21 0
INFO  22:43:32,931 - #46 ]
INFO  22:43:32,931 - #44 )
INFO  22:43:32,931 - #40 ;
INFO  22:43:32,932 - #14 read
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 niz
INFO  22:43:32,932 - #45 [
INFO  22:43:32,932 - #21 1
INFO  22:43:32,932 - #46 ]
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #40 ;
INFO  22:43:32,932 - #14 read
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 niz
INFO  22:43:32,932 - #45 [
INFO  22:43:32,932 - #21 2
INFO  22:43:32,932 - #46 ]
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #40 ;
INFO  22:43:32,932 - #13 print
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 eol
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #40 ;
INFO  22:43:32,932 - #13 print
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 sum
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 sum
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 niz
INFO  22:43:32,932 - #45 [
INFO  22:43:32,932 - #21 0
INFO  22:43:32,932 - #46 ]
INFO  22:43:32,932 - #41 ,
INFO  22:43:32,932 - #20 niz
INFO  22:43:32,932 - #45 [
INFO  22:43:32,932 - #21 1
INFO  22:43:32,932 - #46 ]
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #41 ,
INFO  22:43:32,932 - #20 niz
INFO  22:43:32,932 - #45 [
INFO  22:43:32,932 - #21 2
INFO  22:43:32,932 - #46 ]
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #40 ;
INFO  22:43:32,932 - #13 print
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 eol
INFO  22:43:32,932 - #44 )
INFO  22:43:32,932 - #40 ;
INFO  22:43:32,932 - #13 print
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 inkrement
INFO  22:43:32,932 - #43 (
INFO  22:43:32,932 - #20 niz
INFO  22:43:32,932 - #45 [
INFO  22:43:32,933 - #21 2
INFO  22:43:32,933 - #46 ]
INFO  22:43:32,933 - #41 ,
INFO  22:43:32,933 - #21 2
INFO  22:43:32,933 - #44 )
INFO  22:43:32,933 - #44 )
INFO  22:43:32,933 - #40 ;
INFO  22:43:32,933 - #48 }
INFO  22:43:32,933 - #48 }
ERROR 22:43:32,933 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
ERROR 22:43:32,937 - [Line #16]  SYNTAX_ERROR: 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
ERROR 22:43:32,938 - [Line #16]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
ERROR 22:43:32,938 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:43:32,938 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:43:32,938 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
ERROR 22:43:32,938 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
ERROR 22:43:32,938 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:43:32,938 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:43:32,938 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
ERROR 22:43:32,938 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
ERROR 22:43:32,938 - [Line #29]  SYNTAX_ERROR: 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
ERROR 22:43:32,938 - [Line #29]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
ERROR 22:43:32,938 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
ERROR 22:43:32,938 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:43:32,938 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
ERROR 22:43:32,938 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
ERROR 22:43:32,938 - [Line #64]  SYNTAX_ERROR: 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
ERROR 22:43:32,939 - [Line #81]  SYNTAX_ERROR: Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
INFO  22:45:10,841 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:45:10,868 - #2 program
INFO  22:45:10,868 - #20 test302
INFO  22:45:10,868 - #7 const
INFO  22:45:10,869 - #20 int
INFO  22:45:10,869 - #20 jedan
INFO  22:45:10,869 - #37 =
INFO  22:45:10,869 - #21 1
INFO  22:45:10,869 - #40 ;
INFO  22:45:10,869 - #20 int
INFO  22:45:10,870 - #20 i
INFO  22:45:10,870 - #40 ;
INFO  22:45:10,870 - #20 bool
INFO  22:45:10,870 - #20 ibool
INFO  22:45:10,870 - #40 ;
INFO  22:45:10,870 - #20 int
INFO  22:45:10,870 - #20 niz
INFO  22:45:10,870 - #45 [
INFO  22:45:10,870 - #46 ]
INFO  22:45:10,870 - #40 ;
INFO  22:45:10,870 - #47 {
INFO  22:45:10,870 - #20 int
INFO  22:45:10,870 - #20 sum
INFO  22:45:10,871 - #43 (
INFO  22:45:10,871 - #20 int
INFO  22:45:10,871 - #20 z
INFO  22:45:10,871 - #41 ,
INFO  22:45:10,871 - #20 int
INFO  22:45:10,871 - #20 d
INFO  22:45:10,871 - #44 )
INFO  22:45:10,871 - #47 {
INFO  22:45:10,871 - #15 return
INFO  22:45:10,871 - #20 z
ERROR 22:45:10,871 - 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
INFO  22:45:10,872 - #24 +
INFO  22:45:10,872 - #20 d
INFO  22:45:10,872 - #40 ;
INFO  22:45:10,872 - #48 }
INFO  22:45:10,872 - #20 int
INFO  22:45:10,872 - #20 inkrement
INFO  22:45:10,873 - #43 (
INFO  22:45:10,873 - #20 int
INFO  22:45:10,873 - #20 a
INFO  22:45:10,873 - #41 ,
INFO  22:45:10,873 - #20 int
INFO  22:45:10,873 - #20 inc
INFO  22:45:10,873 - #44 )
ERROR 22:45:10,873 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
INFO  22:45:10,873 - #20 int
INFO  22:45:10,873 - #20 pom
INFO  22:45:10,873 - #40 ;
INFO  22:45:10,873 - #47 {
INFO  22:45:10,873 - #8 if
INFO  22:45:10,873 - #43 (
INFO  22:45:10,874 - #20 inc
ERROR 22:45:10,874 - 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
INFO  22:45:10,874 - #29 ==
INFO  22:45:10,874 - #20 jedan
INFO  22:45:10,874 - #44 )
INFO  22:45:10,874 - #20 pom
INFO  22:45:10,874 - #37 =
INFO  22:45:10,874 - #21 1
ERROR 22:45:10,874 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:45:10,875 - 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
INFO  22:45:10,875 - #40 ;
INFO  22:45:10,875 - #6 else
INFO  22:45:10,875 - #8 if
INFO  22:45:10,875 - #43 (
ERROR 22:45:10,875 - Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
INFO  22:45:10,876 - #20 inc
ERROR 22:45:10,876 - 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
INFO  22:45:10,876 - #29 ==
INFO  22:45:10,876 - #21 2
INFO  22:45:10,876 - #44 )
INFO  22:45:10,876 - #20 pom
INFO  22:45:10,876 - #37 =
INFO  22:45:10,876 - #20 a
ERROR 22:45:10,876 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:45:10,876 - 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
INFO  22:45:10,876 - #40 ;
INFO  22:45:10,876 - #15 return
INFO  22:45:10,876 - #20 sum
INFO  22:45:10,876 - #43 (
INFO  22:45:10,876 - #20 a
INFO  22:45:10,876 - #41 ,
INFO  22:45:10,876 - #20 pom
INFO  22:45:10,876 - #44 )
INFO  22:45:10,876 - #40 ;
INFO  22:45:10,876 - #48 }
INFO  22:45:10,876 - #20 bool
INFO  22:45:10,876 - #20 verify
ERROR 22:45:10,876 - Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
INFO  22:45:10,877 - #43 (
INFO  22:45:10,877 - #44 )
INFO  22:45:10,877 - #47 {
INFO  22:45:10,877 - #13 print
INFO  22:45:10,877 - #43 (
INFO  22:45:10,877 - #22 v
ERROR 22:45:10,877 - 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
INFO  22:45:10,877 - #44 )
INFO  22:45:10,877 - #40 ;
INFO  22:45:10,877 - #15 return
INFO  22:45:10,877 - #23 false
INFO  22:45:10,877 - #40 ;
INFO  22:45:10,877 - #48 }
INFO  22:45:10,877 - #16 void
INFO  22:45:10,877 - #20 main
INFO  22:45:10,877 - #43 (
INFO  22:45:10,877 - #44 )
INFO  22:45:10,877 - #47 {
INFO  22:45:10,877 - #8 if
INFO  22:45:10,877 - #43 (
ERROR 22:45:10,877 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
INFO  22:45:10,878 - #21 1
ERROR 22:45:10,878 - 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
INFO  22:45:10,878 - #30 !=
INFO  22:45:10,878 - #21 1
INFO  22:45:10,878 - #44 )
INFO  22:45:10,878 - #13 print
INFO  22:45:10,878 - #43 (
INFO  22:45:10,878 - #25 -
ERROR 22:45:10,878 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:45:10,878 - 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
INFO  22:45:10,878 - #21 6
INFO  22:45:10,878 - #44 )
INFO  22:45:10,878 - #40 ;
INFO  22:45:10,878 - #6 else
INFO  22:45:10,878 - #13 print
INFO  22:45:10,878 - #43 (
INFO  22:45:10,878 - #21 0
INFO  22:45:10,878 - #44 )
INFO  22:45:10,878 - #40 ;
INFO  22:45:10,878 - #20 ibool
INFO  22:45:10,878 - #37 =
INFO  22:45:10,879 - #23 false
INFO  22:45:10,879 - #40 ;
INFO  22:45:10,879 - #20 i
INFO  22:45:10,879 - #37 =
INFO  22:45:10,879 - #21 0
INFO  22:45:10,879 - #40 ;
INFO  22:45:10,879 - #10 do
INFO  22:45:10,879 - #47 {
INFO  22:45:10,879 - #8 if
INFO  22:45:10,879 - #43 (
INFO  22:45:10,879 - #20 i
INFO  22:45:10,879 - #29 ==
INFO  22:45:10,879 - #21 2
INFO  22:45:10,879 - #44 )
INFO  22:45:10,879 - #20 ibool
INFO  22:45:10,879 - #37 =
INFO  22:45:10,879 - #23 true
INFO  22:45:10,879 - #40 ;
INFO  22:45:10,879 - #20 i
INFO  22:45:10,879 - #38 ++
INFO  22:45:10,879 - #40 ;
INFO  22:45:10,879 - #48 }
INFO  22:45:10,879 - #11 while
INFO  22:45:10,879 - #43 (
INFO  22:45:10,879 - #20 i
INFO  22:45:10,879 - #33 <
INFO  22:45:10,879 - #21 5
INFO  22:45:10,879 - #44 )
INFO  22:45:10,879 - #40 ;
INFO  22:45:10,879 - #8 if
INFO  22:45:10,879 - #43 (
INFO  22:45:10,879 - #20 ibool
INFO  22:45:10,879 - #44 )
INFO  22:45:10,879 - #8 if
INFO  22:45:10,879 - #43 (
INFO  22:45:10,879 - #20 i
INFO  22:45:10,879 - #29 ==
INFO  22:45:10,879 - #21 5
INFO  22:45:10,879 - #44 )
INFO  22:45:10,879 - #13 print
INFO  22:45:10,879 - #43 (
INFO  22:45:10,879 - #21 1
INFO  22:45:10,879 - #44 )
INFO  22:45:10,879 - #40 ;
INFO  22:45:10,879 - #6 else
INFO  22:45:10,879 - #13 print
INFO  22:45:10,880 - #43 (
INFO  22:45:10,880 - #25 -
INFO  22:45:10,880 - #21 1
INFO  22:45:10,880 - #44 )
INFO  22:45:10,880 - #40 ;
INFO  22:45:10,880 - #20 niz
INFO  22:45:10,880 - #37 =
INFO  22:45:10,880 - #12 new
INFO  22:45:10,880 - #20 int
INFO  22:45:10,880 - #45 [
INFO  22:45:10,880 - #21 3
INFO  22:45:10,880 - #46 ]
INFO  22:45:10,880 - #40 ;
INFO  22:45:10,880 - #20 niz
INFO  22:45:10,880 - #45 [
INFO  22:45:10,880 - #21 0
INFO  22:45:10,880 - #46 ]
INFO  22:45:10,880 - #37 =
INFO  22:45:10,880 - #21 1
INFO  22:45:10,880 - #40 ;
INFO  22:45:10,880 - #20 niz
INFO  22:45:10,880 - #45 [
INFO  22:45:10,880 - #21 1
INFO  22:45:10,880 - #46 ]
INFO  22:45:10,880 - #37 =
INFO  22:45:10,880 - #21 2
INFO  22:45:10,880 - #40 ;
INFO  22:45:10,880 - #20 niz
INFO  22:45:10,880 - #45 [
INFO  22:45:10,880 - #21 2
INFO  22:45:10,880 - #46 ]
INFO  22:45:10,880 - #37 =
INFO  22:45:10,880 - #20 sum
INFO  22:45:10,880 - #43 (
INFO  22:45:10,880 - #20 niz
INFO  22:45:10,880 - #45 [
INFO  22:45:10,880 - #21 1
INFO  22:45:10,880 - #46 ]
INFO  22:45:10,880 - #41 ,
INFO  22:45:10,880 - #20 niz
INFO  22:45:10,880 - #45 [
INFO  22:45:10,880 - #21 0
INFO  22:45:10,880 - #46 ]
INFO  22:45:10,880 - #44 )
INFO  22:45:10,880 - #24 +
INFO  22:45:10,880 - #21 1
INFO  22:45:10,880 - #40 ;
INFO  22:45:10,880 - #8 if
INFO  22:45:10,880 - #43 (
INFO  22:45:10,880 - #20 verify
INFO  22:45:10,880 - #43 (
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #36 ||
INFO  22:45:10,881 - #20 niz
INFO  22:45:10,881 - #45 [
INFO  22:45:10,881 - #21 2
INFO  22:45:10,881 - #46 ]
INFO  22:45:10,881 - #29 ==
INFO  22:45:10,881 - #21 4
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #13 print
INFO  22:45:10,881 - #43 (
INFO  22:45:10,881 - #20 ord
INFO  22:45:10,881 - #43 (
INFO  22:45:10,881 - #22 A
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #40 ;
INFO  22:45:10,881 - #6 else
INFO  22:45:10,881 - #13 print
INFO  22:45:10,881 - #43 (
INFO  22:45:10,881 - #20 ord
INFO  22:45:10,881 - #43 (
INFO  22:45:10,881 - #22 a
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #40 ;
INFO  22:45:10,881 - #13 print
INFO  22:45:10,881 - #43 (
INFO  22:45:10,881 - #20 eol
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #40 ;
INFO  22:45:10,881 - #20 i
INFO  22:45:10,881 - #37 =
INFO  22:45:10,881 - #21 0
INFO  22:45:10,881 - #40 ;
INFO  22:45:10,881 - #10 do
INFO  22:45:10,881 - #47 {
INFO  22:45:10,881 - #8 if
INFO  22:45:10,881 - #43 (
INFO  22:45:10,881 - #20 i
INFO  22:45:10,881 - #29 ==
INFO  22:45:10,881 - #21 3
INFO  22:45:10,881 - #44 )
INFO  22:45:10,881 - #47 {
INFO  22:45:10,881 - #20 i
INFO  22:45:10,881 - #38 ++
ERROR 22:45:10,882 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
INFO  22:45:10,882 - #40 ;
INFO  22:45:10,882 - #18 continue
INFO  22:45:10,882 - #40 ;
INFO  22:45:10,882 - #48 }
INFO  22:45:10,882 - #8 if
ERROR 22:45:10,882 - 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
INFO  22:45:10,882 - #43 (
INFO  22:45:10,882 - #20 i
INFO  22:45:10,882 - #29 ==
INFO  22:45:10,882 - #21 4
INFO  22:45:10,882 - #44 )
INFO  22:45:10,882 - #3 break
INFO  22:45:10,882 - #40 ;
INFO  22:45:10,882 - #20 i
INFO  22:45:10,882 - #37 =
INFO  22:45:10,882 - #20 inkrement
INFO  22:45:10,882 - #43 (
INFO  22:45:10,882 - #20 i
INFO  22:45:10,882 - #41 ,
INFO  22:45:10,882 - #21 1
INFO  22:45:10,882 - #44 )
INFO  22:45:10,882 - #40 ;
INFO  22:45:10,882 - #48 }
INFO  22:45:10,882 - #11 while
INFO  22:45:10,882 - #43 (
INFO  22:45:10,882 - #20 i
INFO  22:45:10,882 - #33 <
INFO  22:45:10,882 - #21 10
INFO  22:45:10,882 - #44 )
INFO  22:45:10,882 - #40 ;
INFO  22:45:10,882 - #8 if
INFO  22:45:10,882 - #43 (
INFO  22:45:10,882 - #20 i
INFO  22:45:10,882 - #29 ==
INFO  22:45:10,882 - #21 3
INFO  22:45:10,883 - #35 &&
INFO  22:45:10,883 - #20 verify
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #13 print
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #25 -
INFO  22:45:10,883 - #21 4
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #40 ;
INFO  22:45:10,883 - #6 else
INFO  22:45:10,883 - #13 print
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #21 4
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #40 ;
INFO  22:45:10,883 - #14 read
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 niz
INFO  22:45:10,883 - #45 [
INFO  22:45:10,883 - #21 0
INFO  22:45:10,883 - #46 ]
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #40 ;
INFO  22:45:10,883 - #14 read
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 niz
INFO  22:45:10,883 - #45 [
INFO  22:45:10,883 - #21 1
INFO  22:45:10,883 - #46 ]
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #40 ;
INFO  22:45:10,883 - #14 read
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 niz
INFO  22:45:10,883 - #45 [
INFO  22:45:10,883 - #21 2
INFO  22:45:10,883 - #46 ]
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #40 ;
INFO  22:45:10,883 - #13 print
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 eol
INFO  22:45:10,883 - #44 )
INFO  22:45:10,883 - #40 ;
INFO  22:45:10,883 - #13 print
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 sum
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 sum
INFO  22:45:10,883 - #43 (
INFO  22:45:10,883 - #20 niz
INFO  22:45:10,883 - #45 [
INFO  22:45:10,883 - #21 0
INFO  22:45:10,883 - #46 ]
INFO  22:45:10,884 - #41 ,
INFO  22:45:10,884 - #20 niz
INFO  22:45:10,884 - #45 [
INFO  22:45:10,884 - #21 1
INFO  22:45:10,884 - #46 ]
INFO  22:45:10,884 - #44 )
INFO  22:45:10,884 - #41 ,
INFO  22:45:10,884 - #20 niz
INFO  22:45:10,884 - #45 [
INFO  22:45:10,884 - #21 2
INFO  22:45:10,884 - #46 ]
INFO  22:45:10,884 - #44 )
INFO  22:45:10,884 - #44 )
INFO  22:45:10,884 - #40 ;
INFO  22:45:10,884 - #13 print
INFO  22:45:10,884 - #43 (
INFO  22:45:10,884 - #20 eol
INFO  22:45:10,884 - #44 )
INFO  22:45:10,884 - #40 ;
INFO  22:45:10,884 - #13 print
INFO  22:45:10,884 - #43 (
INFO  22:45:10,884 - #20 inkrement
INFO  22:45:10,884 - #43 (
INFO  22:45:10,884 - #20 niz
INFO  22:45:10,884 - #45 [
INFO  22:45:10,884 - #21 2
INFO  22:45:10,884 - #46 ]
INFO  22:45:10,884 - #41 ,
INFO  22:45:10,884 - #21 2
INFO  22:45:10,884 - #44 )
INFO  22:45:10,884 - #44 )
INFO  22:45:10,884 - #40 ;
INFO  22:45:10,884 - #48 }
INFO  22:45:10,884 - #48 }
ERROR 22:45:10,884 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
ERROR 22:45:10,889 - [Line #16]  SYNTAX_ERROR: 
Sintaksna greska na liniji 16, koloni 9 za simbol "z"!
ERROR 22:45:10,889 - [Line #16]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 9 za simbol "z"!
ERROR 22:45:10,889 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:45:10,889 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 22, koloni 5 za simbol "inc"!
ERROR 22:45:10,889 - [Line #22]  SYNTAX_ERROR: 
Sintaksna greska na liniji 22, koloni 25 za simbol "1"!
ERROR 22:45:10,889 - [Line #22]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 22, koloni 25 za simbol "1"!
ERROR 22:45:10,889 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:45:10,889 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 23, koloni 10 za simbol "inc"!
ERROR 22:45:10,889 - [Line #23]  SYNTAX_ERROR: 
Sintaksna greska na liniji 23, koloni 26 za simbol "a"!
ERROR 22:45:10,889 - [Line #23]  SYNTAX_ERROR: Oporavak od greske u konstrukciji iskaza dodele na liniji 23, koloni 26 za simbol "a"!
ERROR 22:45:10,889 - [Line #29]  SYNTAX_ERROR: 
Sintaksna greska na liniji 29, koloni 8 za simbol "v"!
ERROR 22:45:10,889 - [Line #29]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 29, koloni 8 za simbol "v"!
ERROR 22:45:10,889 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 5 za simbol "1"!
ERROR 22:45:10,889 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u logickom izrazu if konstrukcije na liniji 35, koloni 5 za simbol "1"!
ERROR 22:45:10,890 - [Line #35]  SYNTAX_ERROR: 
Sintaksna greska na liniji 35, koloni 17 za simbol "-"!
ERROR 22:45:10,890 - [Line #35]  SYNTAX_ERROR: Oporavak od greske u definiciji formalnih parametara funkcije na liniji 35, koloni 17 za simbol "-"!
ERROR 22:45:10,890 - [Line #64]  SYNTAX_ERROR: 
Sintaksna greska na liniji 64, koloni 3 za simbol "if"!
ERROR 22:45:10,890 - [Line #81]  SYNTAX_ERROR: Fatalna greska, parsiranje se ne moze nastaviti na liniji 81, koloni 1!
INFO  22:51:07,604 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:51:07,632 - #2 program
INFO  22:51:07,632 - #20 test302
INFO  22:51:07,632 - #7 const
INFO  22:51:07,632 - #20 int
INFO  22:51:07,632 - #20 jedan
INFO  22:51:07,633 - #37 =
INFO  22:51:07,633 - #21 1
INFO  22:51:07,633 - #40 ;
INFO  22:51:07,633 - #20 int
INFO  22:51:07,633 - #20 i
INFO  22:51:07,633 - #40 ;
INFO  22:51:07,633 - #20 bool
INFO  22:51:07,634 - #20 ibool
INFO  22:51:07,634 - #40 ;
INFO  22:51:07,634 - #20 int
INFO  22:51:07,634 - #20 niz
INFO  22:51:07,634 - #45 [
INFO  22:51:07,634 - #46 ]
INFO  22:51:07,634 - #40 ;
INFO  22:51:07,634 - #47 {
INFO  22:51:07,634 - #20 int
INFO  22:51:07,634 - #20 sum
INFO  22:51:07,634 - #43 (
INFO  22:51:07,634 - #20 int
INFO  22:51:07,634 - #20 z
INFO  22:51:07,634 - #41 ,
INFO  22:51:07,635 - #20 int
INFO  22:51:07,635 - #20 d
INFO  22:51:07,635 - #44 )
INFO  22:51:07,635 - #47 {
INFO  22:51:07,635 - #15 return
INFO  22:51:07,635 - #20 z
INFO  22:51:07,635 - #24 +
INFO  22:51:07,635 - #20 d
INFO  22:51:07,636 - #40 ;
INFO  22:51:07,636 - #48 }
INFO  22:51:07,636 - #20 int
INFO  22:51:07,636 - #20 inkrement
INFO  22:51:07,636 - #43 (
INFO  22:51:07,636 - #20 int
INFO  22:51:07,636 - #20 a
INFO  22:51:07,636 - #41 ,
INFO  22:51:07,636 - #20 int
INFO  22:51:07,636 - #20 inc
INFO  22:51:07,636 - #44 )
INFO  22:51:07,636 - #20 int
INFO  22:51:07,637 - #20 pom
INFO  22:51:07,637 - #40 ;
INFO  22:51:07,637 - #47 {
INFO  22:51:07,637 - #8 if
INFO  22:51:07,637 - #43 (
INFO  22:51:07,637 - #20 inc
INFO  22:51:07,637 - #29 ==
INFO  22:51:07,637 - #20 jedan
INFO  22:51:07,638 - #44 )
INFO  22:51:07,638 - #20 pom
INFO  22:51:07,638 - #37 =
INFO  22:51:07,638 - #21 1
INFO  22:51:07,638 - #40 ;
INFO  22:51:07,638 - #6 else
INFO  22:51:07,638 - #8 if
INFO  22:51:07,638 - #43 (
INFO  22:51:07,638 - #20 inc
INFO  22:51:07,638 - #29 ==
INFO  22:51:07,639 - #21 2
INFO  22:51:07,639 - #44 )
INFO  22:51:07,639 - #20 pom
INFO  22:51:07,639 - #37 =
INFO  22:51:07,639 - #20 a
INFO  22:51:07,639 - #40 ;
INFO  22:51:07,639 - #15 return
INFO  22:51:07,639 - #20 sum
INFO  22:51:07,639 - #43 (
INFO  22:51:07,639 - #20 a
INFO  22:51:07,639 - #41 ,
INFO  22:51:07,639 - #20 pom
INFO  22:51:07,639 - #44 )
INFO  22:51:07,639 - #40 ;
INFO  22:51:07,639 - #48 }
INFO  22:51:07,639 - #20 bool
INFO  22:51:07,640 - #20 verify
INFO  22:51:07,640 - #43 (
INFO  22:51:07,640 - #44 )
INFO  22:51:07,640 - #47 {
INFO  22:51:07,640 - #13 print
INFO  22:51:07,640 - #43 (
INFO  22:51:07,640 - #22 v
INFO  22:51:07,640 - #44 )
INFO  22:51:07,640 - #40 ;
INFO  22:51:07,640 - #15 return
INFO  22:51:07,640 - #23 false
INFO  22:51:07,640 - #40 ;
INFO  22:51:07,640 - #48 }
INFO  22:51:07,640 - #16 void
INFO  22:51:07,640 - #20 main
INFO  22:51:07,640 - #43 (
INFO  22:51:07,640 - #44 )
INFO  22:51:07,641 - #47 {
INFO  22:51:07,641 - #8 if
INFO  22:51:07,641 - #43 (
INFO  22:51:07,641 - #21 1
INFO  22:51:07,641 - #30 !=
INFO  22:51:07,641 - #21 1
INFO  22:51:07,641 - #44 )
INFO  22:51:07,641 - #13 print
INFO  22:51:07,641 - #43 (
INFO  22:51:07,641 - #25 -
INFO  22:51:07,641 - #21 6
INFO  22:51:07,641 - #44 )
INFO  22:51:07,641 - #40 ;
INFO  22:51:07,641 - #6 else
INFO  22:51:07,641 - #13 print
INFO  22:51:07,641 - #43 (
INFO  22:51:07,641 - #21 0
INFO  22:51:07,642 - #44 )
INFO  22:51:07,642 - #40 ;
INFO  22:51:07,642 - #20 ibool
INFO  22:51:07,642 - #37 =
INFO  22:51:07,642 - #23 false
INFO  22:51:07,642 - #40 ;
INFO  22:51:07,642 - #20 i
INFO  22:51:07,642 - #37 =
INFO  22:51:07,642 - #21 0
INFO  22:51:07,642 - #40 ;
INFO  22:51:07,642 - #10 do
INFO  22:51:07,642 - #47 {
INFO  22:51:07,643 - #8 if
INFO  22:51:07,643 - #43 (
INFO  22:51:07,643 - #20 i
INFO  22:51:07,643 - #29 ==
INFO  22:51:07,643 - #21 2
INFO  22:51:07,643 - #44 )
INFO  22:51:07,643 - #20 ibool
INFO  22:51:07,643 - #37 =
INFO  22:51:07,643 - #23 true
INFO  22:51:07,643 - #40 ;
INFO  22:51:07,643 - #20 i
INFO  22:51:07,643 - #38 ++
INFO  22:51:07,643 - #40 ;
INFO  22:51:07,643 - #48 }
INFO  22:51:07,643 - #11 while
INFO  22:51:07,643 - #43 (
INFO  22:51:07,643 - #20 i
INFO  22:51:07,643 - #33 <
INFO  22:51:07,643 - #21 5
INFO  22:51:07,644 - #44 )
INFO  22:51:07,644 - #40 ;
INFO  22:51:07,644 - #8 if
INFO  22:51:07,644 - #43 (
INFO  22:51:07,644 - #20 ibool
INFO  22:51:07,644 - #44 )
INFO  22:51:07,644 - #8 if
INFO  22:51:07,644 - #43 (
INFO  22:51:07,644 - #20 i
INFO  22:51:07,644 - #29 ==
INFO  22:51:07,644 - #21 5
INFO  22:51:07,644 - #44 )
INFO  22:51:07,644 - #13 print
INFO  22:51:07,644 - #43 (
INFO  22:51:07,644 - #21 1
INFO  22:51:07,644 - #44 )
INFO  22:51:07,644 - #40 ;
INFO  22:51:07,644 - #6 else
INFO  22:51:07,644 - #13 print
INFO  22:51:07,644 - #43 (
INFO  22:51:07,644 - #25 -
INFO  22:51:07,644 - #21 1
INFO  22:51:07,644 - #44 )
INFO  22:51:07,644 - #40 ;
INFO  22:51:07,644 - #20 niz
INFO  22:51:07,644 - #37 =
INFO  22:51:07,644 - #12 new
INFO  22:51:07,644 - #20 int
INFO  22:51:07,644 - #45 [
INFO  22:51:07,645 - #21 3
INFO  22:51:07,645 - #46 ]
INFO  22:51:07,645 - #40 ;
INFO  22:51:07,645 - #20 niz
INFO  22:51:07,645 - #45 [
INFO  22:51:07,645 - #21 0
INFO  22:51:07,645 - #46 ]
INFO  22:51:07,645 - #37 =
INFO  22:51:07,645 - #21 1
INFO  22:51:07,645 - #40 ;
INFO  22:51:07,645 - #20 niz
INFO  22:51:07,645 - #45 [
INFO  22:51:07,645 - #21 1
INFO  22:51:07,645 - #46 ]
INFO  22:51:07,645 - #37 =
INFO  22:51:07,645 - #21 2
INFO  22:51:07,645 - #40 ;
INFO  22:51:07,645 - #20 niz
INFO  22:51:07,645 - #45 [
INFO  22:51:07,645 - #21 2
INFO  22:51:07,645 - #46 ]
INFO  22:51:07,645 - #37 =
INFO  22:51:07,645 - #20 sum
INFO  22:51:07,645 - #43 (
INFO  22:51:07,645 - #20 niz
INFO  22:51:07,645 - #45 [
INFO  22:51:07,645 - #21 1
INFO  22:51:07,645 - #46 ]
INFO  22:51:07,645 - #41 ,
INFO  22:51:07,645 - #20 niz
INFO  22:51:07,645 - #45 [
INFO  22:51:07,645 - #21 0
INFO  22:51:07,645 - #46 ]
INFO  22:51:07,645 - #44 )
INFO  22:51:07,645 - #24 +
INFO  22:51:07,645 - #21 1
INFO  22:51:07,645 - #40 ;
INFO  22:51:07,645 - #8 if
INFO  22:51:07,645 - #43 (
INFO  22:51:07,645 - #20 verify
INFO  22:51:07,645 - #43 (
INFO  22:51:07,645 - #44 )
INFO  22:51:07,645 - #36 ||
INFO  22:51:07,646 - #20 niz
INFO  22:51:07,646 - #45 [
INFO  22:51:07,646 - #21 2
INFO  22:51:07,646 - #46 ]
INFO  22:51:07,646 - #29 ==
INFO  22:51:07,646 - #21 4
INFO  22:51:07,646 - #44 )
INFO  22:51:07,646 - #13 print
INFO  22:51:07,646 - #43 (
INFO  22:51:07,646 - #20 ord
INFO  22:51:07,646 - #43 (
INFO  22:51:07,646 - #22 A
INFO  22:51:07,646 - #44 )
INFO  22:51:07,646 - #44 )
INFO  22:51:07,646 - #40 ;
INFO  22:51:07,646 - #6 else
INFO  22:51:07,646 - #13 print
INFO  22:51:07,646 - #43 (
INFO  22:51:07,646 - #20 ord
INFO  22:51:07,646 - #43 (
INFO  22:51:07,646 - #22 a
INFO  22:51:07,646 - #44 )
INFO  22:51:07,646 - #44 )
INFO  22:51:07,646 - #40 ;
INFO  22:51:07,646 - #13 print
INFO  22:51:07,646 - #43 (
INFO  22:51:07,646 - #20 eol
INFO  22:51:07,646 - #44 )
INFO  22:51:07,646 - #40 ;
INFO  22:51:07,646 - #20 i
INFO  22:51:07,646 - #37 =
INFO  22:51:07,646 - #21 0
INFO  22:51:07,646 - #40 ;
INFO  22:51:07,646 - #10 do
INFO  22:51:07,646 - #47 {
INFO  22:51:07,646 - #8 if
INFO  22:51:07,646 - #43 (
INFO  22:51:07,646 - #20 i
INFO  22:51:07,646 - #29 ==
INFO  22:51:07,646 - #21 3
INFO  22:51:07,646 - #44 )
INFO  22:51:07,647 - #47 {
INFO  22:51:07,647 - #20 i
INFO  22:51:07,647 - #38 ++
INFO  22:51:07,647 - #40 ;
INFO  22:51:07,647 - #18 continue
INFO  22:51:07,647 - #40 ;
INFO  22:51:07,647 - #48 }
INFO  22:51:07,647 - #8 if
INFO  22:51:07,647 - #43 (
INFO  22:51:07,647 - #20 i
INFO  22:51:07,647 - #29 ==
INFO  22:51:07,647 - #21 4
INFO  22:51:07,647 - #44 )
INFO  22:51:07,647 - #3 break
INFO  22:51:07,647 - #40 ;
INFO  22:51:07,647 - #20 i
INFO  22:51:07,647 - #37 =
INFO  22:51:07,647 - #20 inkrement
INFO  22:51:07,647 - #43 (
INFO  22:51:07,647 - #20 i
INFO  22:51:07,647 - #41 ,
INFO  22:51:07,647 - #21 1
INFO  22:51:07,647 - #44 )
INFO  22:51:07,647 - #40 ;
INFO  22:51:07,647 - #48 }
INFO  22:51:07,647 - #11 while
INFO  22:51:07,647 - #43 (
INFO  22:51:07,647 - #20 i
INFO  22:51:07,647 - #33 <
INFO  22:51:07,647 - #21 10
INFO  22:51:07,647 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,648 - #8 if
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #20 i
INFO  22:51:07,648 - #29 ==
INFO  22:51:07,648 - #21 3
INFO  22:51:07,648 - #35 &&
INFO  22:51:07,648 - #20 verify
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #13 print
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #25 -
INFO  22:51:07,648 - #21 4
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,648 - #6 else
INFO  22:51:07,648 - #13 print
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #21 4
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,648 - #14 read
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #20 niz
INFO  22:51:07,648 - #45 [
INFO  22:51:07,648 - #21 0
INFO  22:51:07,648 - #46 ]
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,648 - #14 read
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #20 niz
INFO  22:51:07,648 - #45 [
INFO  22:51:07,648 - #21 1
INFO  22:51:07,648 - #46 ]
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,648 - #14 read
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #20 niz
INFO  22:51:07,648 - #45 [
INFO  22:51:07,648 - #21 2
INFO  22:51:07,648 - #46 ]
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,648 - #13 print
INFO  22:51:07,648 - #43 (
INFO  22:51:07,648 - #20 eol
INFO  22:51:07,648 - #44 )
INFO  22:51:07,648 - #40 ;
INFO  22:51:07,649 - #13 print
INFO  22:51:07,649 - #43 (
INFO  22:51:07,649 - #20 sum
INFO  22:51:07,649 - #43 (
INFO  22:51:07,649 - #20 sum
INFO  22:51:07,649 - #43 (
INFO  22:51:07,649 - #20 niz
INFO  22:51:07,649 - #45 [
INFO  22:51:07,649 - #21 0
INFO  22:51:07,649 - #46 ]
INFO  22:51:07,649 - #41 ,
INFO  22:51:07,649 - #20 niz
INFO  22:51:07,649 - #45 [
INFO  22:51:07,649 - #21 1
INFO  22:51:07,649 - #46 ]
INFO  22:51:07,649 - #44 )
INFO  22:51:07,649 - #41 ,
INFO  22:51:07,649 - #20 niz
INFO  22:51:07,649 - #45 [
INFO  22:51:07,649 - #21 2
INFO  22:51:07,649 - #46 ]
INFO  22:51:07,649 - #44 )
INFO  22:51:07,649 - #44 )
INFO  22:51:07,649 - #40 ;
INFO  22:51:07,649 - #13 print
INFO  22:51:07,649 - #43 (
INFO  22:51:07,649 - #20 eol
INFO  22:51:07,649 - #44 )
INFO  22:51:07,649 - #40 ;
INFO  22:51:07,649 - #13 print
INFO  22:51:07,649 - #43 (
INFO  22:51:07,649 - #20 inkrement
INFO  22:51:07,649 - #43 (
INFO  22:51:07,649 - #20 niz
INFO  22:51:07,649 - #45 [
INFO  22:51:07,649 - #21 2
INFO  22:51:07,649 - #46 ]
INFO  22:51:07,649 - #41 ,
INFO  22:51:07,649 - #21 2
INFO  22:51:07,649 - #44 )
INFO  22:51:07,649 - #44 )
INFO  22:51:07,649 - #40 ;
INFO  22:51:07,649 - #48 }
INFO  22:51:07,649 - #48 }
INFO  22:51:07,650 - 

================SINTAKSNO STABLO====================


INFO  22:51:07,652 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           z
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         d
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   inc
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   jedan
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 a
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               pom
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     v
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprSingle(
                TermSingle(
                  FactorBoolConst(
                   false
                  ) [FactorBoolConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtIfElse(
                                                    IfKeyword(
                                                    ) [IfKeyword]
                                                    StmtIfBody(
                                                      IfCond(
                                                        CondSingle(
                                                          CondTermSingle(
                                                            CondFactRelop(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                              RelopNE(
                                                              ) [RelopNE]
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [CondFactRelop]
                                                          ) [CondTermSingle]
                                                        ) [CondSingle]
                                                      ) [IfCond]
                                                      StmtPrint(
                                                        ExprNeg(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             6
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprNeg]
                                                      ) [StmtPrint]
                                                    ) [StmtIfBody]
                                                    StmtPrint(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [StmtPrint]
                                                  ) [StmtIfElse]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     ibool
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           false
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   i
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         0
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDoWhile(
                                              DoKeyword(
                                              ) [DoKeyword]
                                              StmtWhileBody(
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        IfKeyword(
                                                        ) [IfKeyword]
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondSingle(
                                                              CondTermSingle(
                                                                CondFactRelop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         i
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       2
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [CondFactRelop]
                                                              ) [CondTermSingle]
                                                            ) [CondSingle]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorBoolConst(
                                                                     true
                                                                    ) [FactorBoolConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                              ) [StmtWhileBody]
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    RelopLT(
                                                    ) [RelopLT]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         5
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [StmtDoWhile]
                                          ) [StatementMulti]
                                          StmtIf(
                                            IfKeyword(
                                            ) [IfKeyword]
                                            StmtIfBody(
                                              IfCond(
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactSingle(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             ibool
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [CondFactSingle]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [IfCond]
                                              StmtIfElse(
                                                IfKeyword(
                                                ) [IfKeyword]
                                                StmtIfBody(
                                                  IfCond(
                                                    CondSingle(
                                                      CondTermSingle(
                                                        CondFactRelop(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 i
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                          RelopEQ(
                                                          ) [RelopEQ]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               5
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [CondFactRelop]
                                                      ) [CondTermSingle]
                                                    ) [CondSingle]
                                                  ) [IfCond]
                                                  StmtPrint(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [StmtPrint]
                                                ) [StmtIfBody]
                                                StmtPrint(
                                                  ExprNeg(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprNeg]
                                                ) [StmtPrint]
                                              ) [StmtIfElse]
                                            ) [StmtIfBody]
                                          ) [StmtIf]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             niz
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNewArray(
                                                    Type(
                                                     int
                                                    ) [Type]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [FactorNewArray]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorArray(
                                       niz
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorArray]
                                      AssignmentExpr(
                                        ExprAddop(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 sum
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActParsSingle]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprAddop]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtIfElse(
                                  IfKeyword(
                                  ) [IfKeyword]
                                  StmtIfBody(
                                    IfCond(
                                      CondOr(
                                        CondSingle(
                                          CondTermSingle(
                                            CondFactSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCall(
                                                    DesignatorSimple(
                                                     verify
                                                    ) [DesignatorSimple]
                                                  ) [FuncCall]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [CondFactSingle]
                                          ) [CondTermSingle]
                                        ) [CondSingle]
                                        CondTermSingle(
                                          CondFactRelop(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            RelopEQ(
                                            ) [RelopEQ]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 4
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [CondFactRelop]
                                        ) [CondTermSingle]
                                      ) [CondOr]
                                    ) [IfCond]
                                    StmtPrint(
                                      ExprSingle(
                                        TermSingle(
                                          FuncCallParams(
                                            DesignatorSimple(
                                             ord
                                            ) [DesignatorSimple]
                                            ActParsSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   A
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ActParsSingle]
                                          ) [FuncCallParams]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [StmtPrint]
                                  ) [StmtIfBody]
                                  StmtPrint(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCallParams(
                                          DesignatorSimple(
                                           ord
                                          ) [DesignatorSimple]
                                          ActParsSingle(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ActParsSingle]
                                        ) [FuncCallParams]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [StmtPrint]
                                ) [StmtIfElse]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       eol
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 i
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       0
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      IfKeyword(
                                      ) [IfKeyword]
                                      StmtIfBody(
                                        IfCond(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactRelop(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [CondFactRelop]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               inkrement
                                              ) [DesignatorSimple]
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsSingle]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActParsMulti]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtIfElse(
                          IfKeyword(
                          ) [IfKeyword]
                          StmtIfBody(
                            IfCond(
                              CondSingle(
                                CondTermAnd(
                                  CondTermSingle(
                                    CondFactRelop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      RelopEQ(
                                      ) [RelopEQ]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [CondFactRelop]
                                  ) [CondTermSingle]
                                  CondFactSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCall(
                                          DesignatorSimple(
                                           verify
                                          ) [DesignatorSimple]
                                        ) [FuncCall]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [CondFactSingle]
                                ) [CondTermAnd]
                              ) [CondSingle]
                            ) [IfCond]
                            StmtPrint(
                              ExprNeg(
                                TermSingle(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprNeg]
                            ) [StmtPrint]
                          ) [StmtIfBody]
                          StmtPrint(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 4
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [StmtPrint]
                        ) [StmtIfElse]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorArray(
                     niz
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorArray]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtPrint(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FuncCallParams(
                                DesignatorSimple(
                                 sum
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActParsSingle]
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActParsMulti]
                              ) [FuncCallParams]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               niz
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     eol
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprSingle(
              TermSingle(
                FuncCallParams(
                  DesignatorSimple(
                   inkrement
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             niz
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ActParsSingle]
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ActParsMulti]
                ) [FuncCallParams]
              ) [TermSingle]
            ) [ExprSingle]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:51:07,656 - 

================SEMANTICKA OBRADA====================


INFO  22:51:07,659 - Deklarisana konstanta 'jedan' na liniji 5
INFO  22:51:07,659 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  22:51:07,659 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  22:51:07,659 - Deklarisan globalni niz 'niz' na liniji 10
INFO  22:51:07,659 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  22:51:07,660 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  22:51:07,660 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  22:51:07,660 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  22:51:07,660 - Deklarisana promenljiva 'pom' na liniji 20
INFO  22:51:07,660 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 50
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 51
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 52
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 52
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 52
INFO  22:51:07,660 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  22:51:07,660 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 53
INFO  22:51:07,660 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  22:51:07,660 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  22:51:07,660 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  22:51:07,660 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 71
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 72
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 73
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 76
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 76
INFO  22:51:07,660 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 76
INFO  22:51:07,660 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:51:07,660 - Pristup elementu niza 'niz' na liniji 79
INFO  22:51:07,660 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  22:51:07,661 - ===================================
INFO  22:51:07,661 - Generisanje MJ bajtkoda: C:\Users\User\src\MicroJavaCompiler\MJCompiler\program.obj
INFO  22:51:07,663 - Parsiranje uspesno zavrseno!
INFO  22:55:00,978 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:55:01,004 - #2 program
INFO  22:55:01,004 - #19 test302
INFO  22:55:01,004 - #7 const
INFO  22:55:01,005 - #19 int
INFO  22:55:01,005 - #19 jedan
INFO  22:55:01,005 - #36 =
INFO  22:55:01,005 - #20 1
INFO  22:55:01,005 - #39 ;
INFO  22:55:01,006 - #19 int
INFO  22:55:01,006 - #19 i
INFO  22:55:01,006 - #39 ;
INFO  22:55:01,006 - #19 bool
INFO  22:55:01,006 - #19 ibool
INFO  22:55:01,006 - #39 ;
INFO  22:55:01,006 - #19 int
INFO  22:55:01,006 - #19 niz
INFO  22:55:01,007 - #44 [
INFO  22:55:01,007 - #45 ]
INFO  22:55:01,007 - #39 ;
INFO  22:55:01,007 - #46 {
INFO  22:55:01,007 - #19 int
INFO  22:55:01,007 - #19 sum
INFO  22:55:01,007 - #42 (
INFO  22:55:01,007 - #19 int
INFO  22:55:01,007 - #19 z
INFO  22:55:01,007 - #40 ,
INFO  22:55:01,007 - #19 int
INFO  22:55:01,007 - #19 d
INFO  22:55:01,007 - #43 )
INFO  22:55:01,007 - #46 {
INFO  22:55:01,008 - #15 return
INFO  22:55:01,008 - #19 z
INFO  22:55:01,008 - #23 +
INFO  22:55:01,008 - #19 d
INFO  22:55:01,008 - #39 ;
INFO  22:55:01,008 - #47 }
INFO  22:55:01,009 - #19 int
INFO  22:55:01,009 - #19 inkrement
INFO  22:55:01,009 - #42 (
INFO  22:55:01,009 - #19 int
INFO  22:55:01,009 - #19 a
INFO  22:55:01,009 - #40 ,
INFO  22:55:01,009 - #19 int
INFO  22:55:01,009 - #19 inc
INFO  22:55:01,009 - #43 )
INFO  22:55:01,009 - #19 int
INFO  22:55:01,009 - #19 pom
INFO  22:55:01,009 - #39 ;
INFO  22:55:01,009 - #46 {
INFO  22:55:01,009 - #8 if
INFO  22:55:01,010 - #42 (
INFO  22:55:01,010 - #19 inc
INFO  22:55:01,010 - #28 ==
INFO  22:55:01,010 - #19 jedan
INFO  22:55:01,010 - #43 )
INFO  22:55:01,011 - #19 pom
INFO  22:55:01,011 - #36 =
INFO  22:55:01,011 - #20 1
INFO  22:55:01,011 - #39 ;
INFO  22:55:01,011 - #6 else
INFO  22:55:01,011 - #8 if
INFO  22:55:01,011 - #42 (
INFO  22:55:01,011 - #19 inc
INFO  22:55:01,011 - #28 ==
INFO  22:55:01,011 - #20 2
INFO  22:55:01,011 - #43 )
INFO  22:55:01,011 - #19 pom
INFO  22:55:01,011 - #36 =
INFO  22:55:01,011 - #19 a
INFO  22:55:01,012 - #39 ;
INFO  22:55:01,012 - #15 return
INFO  22:55:01,012 - #19 sum
INFO  22:55:01,012 - #42 (
INFO  22:55:01,012 - #19 a
INFO  22:55:01,012 - #40 ,
INFO  22:55:01,012 - #19 pom
INFO  22:55:01,012 - #43 )
INFO  22:55:01,012 - #39 ;
INFO  22:55:01,012 - #47 }
INFO  22:55:01,012 - #19 bool
INFO  22:55:01,012 - #19 verify
INFO  22:55:01,012 - #42 (
INFO  22:55:01,012 - #43 )
INFO  22:55:01,012 - #46 {
INFO  22:55:01,012 - #13 print
INFO  22:55:01,013 - #42 (
INFO  22:55:01,013 - #21 v
INFO  22:55:01,013 - #43 )
INFO  22:55:01,013 - #39 ;
INFO  22:55:01,013 - #15 return
INFO  22:55:01,013 - #22 false
INFO  22:55:01,013 - #39 ;
INFO  22:55:01,013 - #47 }
INFO  22:55:01,013 - #16 void
INFO  22:55:01,013 - #19 main
INFO  22:55:01,013 - #42 (
INFO  22:55:01,013 - #43 )
INFO  22:55:01,013 - #46 {
INFO  22:55:01,013 - #8 if
INFO  22:55:01,013 - #42 (
INFO  22:55:01,013 - #20 1
INFO  22:55:01,013 - #29 !=
INFO  22:55:01,013 - #20 1
INFO  22:55:01,014 - #43 )
INFO  22:55:01,014 - #13 print
INFO  22:55:01,014 - #42 (
INFO  22:55:01,014 - #24 -
INFO  22:55:01,014 - #20 6
INFO  22:55:01,014 - #43 )
INFO  22:55:01,014 - #39 ;
INFO  22:55:01,014 - #6 else
INFO  22:55:01,014 - #13 print
INFO  22:55:01,014 - #42 (
INFO  22:55:01,014 - #20 0
INFO  22:55:01,014 - #43 )
INFO  22:55:01,014 - #39 ;
INFO  22:55:01,015 - #19 ibool
INFO  22:55:01,015 - #36 =
INFO  22:55:01,015 - #22 false
INFO  22:55:01,015 - #39 ;
INFO  22:55:01,015 - #19 i
INFO  22:55:01,015 - #36 =
INFO  22:55:01,015 - #20 0
INFO  22:55:01,015 - #39 ;
INFO  22:55:01,015 - #10 do
INFO  22:55:01,015 - #46 {
INFO  22:55:01,015 - #8 if
INFO  22:55:01,016 - #42 (
INFO  22:55:01,016 - #19 i
INFO  22:55:01,016 - #28 ==
INFO  22:55:01,016 - #20 2
INFO  22:55:01,016 - #43 )
INFO  22:55:01,016 - #19 ibool
INFO  22:55:01,016 - #36 =
INFO  22:55:01,016 - #22 true
INFO  22:55:01,016 - #39 ;
INFO  22:55:01,016 - #19 i
INFO  22:55:01,016 - #37 ++
INFO  22:55:01,016 - #39 ;
INFO  22:55:01,016 - #47 }
INFO  22:55:01,016 - #11 while
INFO  22:55:01,016 - #42 (
INFO  22:55:01,016 - #19 i
INFO  22:55:01,016 - #32 <
INFO  22:55:01,016 - #20 5
INFO  22:55:01,016 - #43 )
INFO  22:55:01,016 - #39 ;
INFO  22:55:01,016 - #8 if
INFO  22:55:01,017 - #42 (
INFO  22:55:01,017 - #19 ibool
INFO  22:55:01,017 - #43 )
INFO  22:55:01,017 - #8 if
INFO  22:55:01,017 - #42 (
INFO  22:55:01,017 - #19 i
INFO  22:55:01,017 - #28 ==
INFO  22:55:01,017 - #20 5
INFO  22:55:01,017 - #43 )
INFO  22:55:01,017 - #13 print
INFO  22:55:01,017 - #42 (
INFO  22:55:01,017 - #20 1
INFO  22:55:01,017 - #43 )
INFO  22:55:01,017 - #39 ;
INFO  22:55:01,017 - #6 else
INFO  22:55:01,017 - #13 print
INFO  22:55:01,017 - #42 (
INFO  22:55:01,017 - #24 -
INFO  22:55:01,017 - #20 1
INFO  22:55:01,017 - #43 )
INFO  22:55:01,017 - #39 ;
INFO  22:55:01,017 - #19 niz
INFO  22:55:01,017 - #36 =
INFO  22:55:01,017 - #12 new
INFO  22:55:01,017 - #19 int
INFO  22:55:01,017 - #44 [
INFO  22:55:01,017 - #20 3
INFO  22:55:01,017 - #45 ]
INFO  22:55:01,017 - #39 ;
INFO  22:55:01,017 - #19 niz
INFO  22:55:01,017 - #44 [
INFO  22:55:01,017 - #20 0
INFO  22:55:01,017 - #45 ]
INFO  22:55:01,017 - #36 =
INFO  22:55:01,017 - #20 1
INFO  22:55:01,017 - #39 ;
INFO  22:55:01,017 - #19 niz
INFO  22:55:01,018 - #44 [
INFO  22:55:01,018 - #20 1
INFO  22:55:01,018 - #45 ]
INFO  22:55:01,018 - #36 =
INFO  22:55:01,018 - #20 2
INFO  22:55:01,018 - #39 ;
INFO  22:55:01,018 - #19 niz
INFO  22:55:01,018 - #44 [
INFO  22:55:01,018 - #20 2
INFO  22:55:01,018 - #45 ]
INFO  22:55:01,018 - #36 =
INFO  22:55:01,018 - #19 sum
INFO  22:55:01,018 - #42 (
INFO  22:55:01,018 - #19 niz
INFO  22:55:01,018 - #44 [
INFO  22:55:01,018 - #20 1
INFO  22:55:01,018 - #45 ]
INFO  22:55:01,018 - #40 ,
INFO  22:55:01,018 - #19 niz
INFO  22:55:01,018 - #44 [
INFO  22:55:01,018 - #20 0
INFO  22:55:01,018 - #45 ]
INFO  22:55:01,018 - #43 )
INFO  22:55:01,018 - #23 +
INFO  22:55:01,018 - #20 1
INFO  22:55:01,018 - #39 ;
INFO  22:55:01,018 - #8 if
INFO  22:55:01,018 - #42 (
INFO  22:55:01,018 - #19 verify
INFO  22:55:01,018 - #42 (
INFO  22:55:01,018 - #43 )
INFO  22:55:01,018 - #35 ||
INFO  22:55:01,018 - #19 niz
INFO  22:55:01,018 - #44 [
INFO  22:55:01,018 - #20 2
INFO  22:55:01,018 - #45 ]
INFO  22:55:01,018 - #28 ==
INFO  22:55:01,018 - #20 4
INFO  22:55:01,018 - #43 )
INFO  22:55:01,018 - #13 print
INFO  22:55:01,018 - #42 (
INFO  22:55:01,018 - #19 ord
INFO  22:55:01,018 - #42 (
INFO  22:55:01,018 - #21 A
INFO  22:55:01,018 - #43 )
INFO  22:55:01,018 - #43 )
INFO  22:55:01,019 - #39 ;
INFO  22:55:01,019 - #6 else
INFO  22:55:01,019 - #13 print
INFO  22:55:01,019 - #42 (
INFO  22:55:01,019 - #19 ord
INFO  22:55:01,019 - #42 (
INFO  22:55:01,019 - #21 a
INFO  22:55:01,019 - #43 )
INFO  22:55:01,019 - #43 )
INFO  22:55:01,019 - #39 ;
INFO  22:55:01,019 - #13 print
INFO  22:55:01,019 - #42 (
INFO  22:55:01,019 - #19 eol
INFO  22:55:01,019 - #43 )
INFO  22:55:01,019 - #39 ;
INFO  22:55:01,019 - #19 i
INFO  22:55:01,019 - #36 =
INFO  22:55:01,019 - #20 0
INFO  22:55:01,019 - #39 ;
INFO  22:55:01,019 - #10 do
INFO  22:55:01,019 - #46 {
INFO  22:55:01,019 - #8 if
INFO  22:55:01,019 - #42 (
INFO  22:55:01,019 - #19 i
INFO  22:55:01,019 - #28 ==
INFO  22:55:01,019 - #20 3
INFO  22:55:01,019 - #43 )
INFO  22:55:01,019 - #46 {
INFO  22:55:01,019 - #19 i
INFO  22:55:01,019 - #37 ++
INFO  22:55:01,019 - #39 ;
INFO  22:55:01,019 - #17 continue
INFO  22:55:01,019 - #39 ;
INFO  22:55:01,019 - #47 }
INFO  22:55:01,020 - #8 if
INFO  22:55:01,020 - #42 (
INFO  22:55:01,020 - #19 i
INFO  22:55:01,020 - #28 ==
INFO  22:55:01,020 - #20 4
INFO  22:55:01,020 - #43 )
INFO  22:55:01,020 - #3 break
INFO  22:55:01,020 - #39 ;
INFO  22:55:01,020 - #19 i
INFO  22:55:01,020 - #36 =
INFO  22:55:01,020 - #19 inkrement
INFO  22:55:01,020 - #42 (
INFO  22:55:01,020 - #19 i
INFO  22:55:01,020 - #40 ,
INFO  22:55:01,020 - #20 1
INFO  22:55:01,020 - #43 )
INFO  22:55:01,020 - #39 ;
INFO  22:55:01,020 - #47 }
INFO  22:55:01,020 - #11 while
INFO  22:55:01,020 - #42 (
INFO  22:55:01,020 - #19 i
INFO  22:55:01,020 - #32 <
INFO  22:55:01,020 - #20 10
INFO  22:55:01,020 - #43 )
INFO  22:55:01,020 - #39 ;
INFO  22:55:01,020 - #8 if
INFO  22:55:01,020 - #42 (
INFO  22:55:01,020 - #19 i
INFO  22:55:01,020 - #28 ==
INFO  22:55:01,020 - #20 3
INFO  22:55:01,020 - #34 &&
INFO  22:55:01,020 - #19 verify
INFO  22:55:01,020 - #42 (
INFO  22:55:01,020 - #43 )
INFO  22:55:01,020 - #43 )
INFO  22:55:01,020 - #13 print
INFO  22:55:01,020 - #42 (
INFO  22:55:01,020 - #24 -
INFO  22:55:01,020 - #20 4
INFO  22:55:01,020 - #43 )
INFO  22:55:01,021 - #39 ;
INFO  22:55:01,021 - #6 else
INFO  22:55:01,021 - #13 print
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #20 4
INFO  22:55:01,021 - #43 )
INFO  22:55:01,021 - #39 ;
INFO  22:55:01,021 - #14 read
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 niz
INFO  22:55:01,021 - #44 [
INFO  22:55:01,021 - #20 0
INFO  22:55:01,021 - #45 ]
INFO  22:55:01,021 - #43 )
INFO  22:55:01,021 - #39 ;
INFO  22:55:01,021 - #14 read
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 niz
INFO  22:55:01,021 - #44 [
INFO  22:55:01,021 - #20 1
INFO  22:55:01,021 - #45 ]
INFO  22:55:01,021 - #43 )
INFO  22:55:01,021 - #39 ;
INFO  22:55:01,021 - #14 read
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 niz
INFO  22:55:01,021 - #44 [
INFO  22:55:01,021 - #20 2
INFO  22:55:01,021 - #45 ]
INFO  22:55:01,021 - #43 )
INFO  22:55:01,021 - #39 ;
INFO  22:55:01,021 - #13 print
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 eol
INFO  22:55:01,021 - #43 )
INFO  22:55:01,021 - #39 ;
INFO  22:55:01,021 - #13 print
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 sum
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 sum
INFO  22:55:01,021 - #42 (
INFO  22:55:01,021 - #19 niz
INFO  22:55:01,021 - #44 [
INFO  22:55:01,021 - #20 0
INFO  22:55:01,021 - #45 ]
INFO  22:55:01,021 - #40 ,
INFO  22:55:01,021 - #19 niz
INFO  22:55:01,021 - #44 [
INFO  22:55:01,021 - #20 1
INFO  22:55:01,021 - #45 ]
INFO  22:55:01,021 - #43 )
INFO  22:55:01,021 - #40 ,
INFO  22:55:01,021 - #19 niz
INFO  22:55:01,021 - #44 [
INFO  22:55:01,021 - #20 2
INFO  22:55:01,021 - #45 ]
INFO  22:55:01,022 - #43 )
INFO  22:55:01,022 - #43 )
INFO  22:55:01,022 - #39 ;
INFO  22:55:01,022 - #13 print
INFO  22:55:01,022 - #42 (
INFO  22:55:01,022 - #19 eol
INFO  22:55:01,022 - #43 )
INFO  22:55:01,022 - #39 ;
INFO  22:55:01,022 - #13 print
INFO  22:55:01,022 - #42 (
INFO  22:55:01,022 - #19 inkrement
INFO  22:55:01,022 - #42 (
INFO  22:55:01,022 - #19 niz
INFO  22:55:01,022 - #44 [
INFO  22:55:01,022 - #20 2
INFO  22:55:01,022 - #45 ]
INFO  22:55:01,022 - #40 ,
INFO  22:55:01,022 - #20 2
INFO  22:55:01,022 - #43 )
INFO  22:55:01,022 - #43 )
INFO  22:55:01,022 - #39 ;
INFO  22:55:01,022 - #47 }
INFO  22:55:01,022 - #47 }
INFO  22:55:01,022 - 

================SINTAKSNO STABLO====================


INFO  22:55:01,025 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           z
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         d
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   inc
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   jedan
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 a
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               pom
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     v
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprSingle(
                TermSingle(
                  FactorBoolConst(
                   false
                  ) [FactorBoolConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtIfElse(
                                                    IfKeyword(
                                                    ) [IfKeyword]
                                                    StmtIfBody(
                                                      IfCond(
                                                        CondSingle(
                                                          CondTermSingle(
                                                            CondFactRelop(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                              RelopNE(
                                                              ) [RelopNE]
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [CondFactRelop]
                                                          ) [CondTermSingle]
                                                        ) [CondSingle]
                                                      ) [IfCond]
                                                      StmtPrint(
                                                        ExprNeg(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             6
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprNeg]
                                                      ) [StmtPrint]
                                                    ) [StmtIfBody]
                                                    StmtPrint(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [StmtPrint]
                                                  ) [StmtIfElse]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     ibool
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           false
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   i
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         0
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDoWhile(
                                              DoKeyword(
                                              ) [DoKeyword]
                                              StmtWhileBody(
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        IfKeyword(
                                                        ) [IfKeyword]
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondSingle(
                                                              CondTermSingle(
                                                                CondFactRelop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         i
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       2
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [CondFactRelop]
                                                              ) [CondTermSingle]
                                                            ) [CondSingle]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorBoolConst(
                                                                     true
                                                                    ) [FactorBoolConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                              ) [StmtWhileBody]
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    RelopLT(
                                                    ) [RelopLT]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         5
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [StmtDoWhile]
                                          ) [StatementMulti]
                                          StmtIf(
                                            IfKeyword(
                                            ) [IfKeyword]
                                            StmtIfBody(
                                              IfCond(
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactSingle(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             ibool
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [CondFactSingle]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [IfCond]
                                              StmtIfElse(
                                                IfKeyword(
                                                ) [IfKeyword]
                                                StmtIfBody(
                                                  IfCond(
                                                    CondSingle(
                                                      CondTermSingle(
                                                        CondFactRelop(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 i
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                          RelopEQ(
                                                          ) [RelopEQ]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               5
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [CondFactRelop]
                                                      ) [CondTermSingle]
                                                    ) [CondSingle]
                                                  ) [IfCond]
                                                  StmtPrint(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [StmtPrint]
                                                ) [StmtIfBody]
                                                StmtPrint(
                                                  ExprNeg(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprNeg]
                                                ) [StmtPrint]
                                              ) [StmtIfElse]
                                            ) [StmtIfBody]
                                          ) [StmtIf]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             niz
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNewArray(
                                                    Type(
                                                     int
                                                    ) [Type]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [FactorNewArray]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorArray(
                                       niz
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorArray]
                                      AssignmentExpr(
                                        ExprAddop(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 sum
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActParsSingle]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprAddop]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtIfElse(
                                  IfKeyword(
                                  ) [IfKeyword]
                                  StmtIfBody(
                                    IfCond(
                                      CondOr(
                                        CondSingle(
                                          CondTermSingle(
                                            CondFactSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCall(
                                                    DesignatorSimple(
                                                     verify
                                                    ) [DesignatorSimple]
                                                  ) [FuncCall]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [CondFactSingle]
                                          ) [CondTermSingle]
                                        ) [CondSingle]
                                        CondTermSingle(
                                          CondFactRelop(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            RelopEQ(
                                            ) [RelopEQ]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 4
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [CondFactRelop]
                                        ) [CondTermSingle]
                                      ) [CondOr]
                                    ) [IfCond]
                                    StmtPrint(
                                      ExprSingle(
                                        TermSingle(
                                          FuncCallParams(
                                            DesignatorSimple(
                                             ord
                                            ) [DesignatorSimple]
                                            ActParsSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   A
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ActParsSingle]
                                          ) [FuncCallParams]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [StmtPrint]
                                  ) [StmtIfBody]
                                  StmtPrint(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCallParams(
                                          DesignatorSimple(
                                           ord
                                          ) [DesignatorSimple]
                                          ActParsSingle(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ActParsSingle]
                                        ) [FuncCallParams]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [StmtPrint]
                                ) [StmtIfElse]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       eol
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 i
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       0
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      IfKeyword(
                                      ) [IfKeyword]
                                      StmtIfBody(
                                        IfCond(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactRelop(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [CondFactRelop]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               inkrement
                                              ) [DesignatorSimple]
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsSingle]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActParsMulti]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtIfElse(
                          IfKeyword(
                          ) [IfKeyword]
                          StmtIfBody(
                            IfCond(
                              CondSingle(
                                CondTermAnd(
                                  CondTermSingle(
                                    CondFactRelop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      RelopEQ(
                                      ) [RelopEQ]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [CondFactRelop]
                                  ) [CondTermSingle]
                                  CondFactSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCall(
                                          DesignatorSimple(
                                           verify
                                          ) [DesignatorSimple]
                                        ) [FuncCall]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [CondFactSingle]
                                ) [CondTermAnd]
                              ) [CondSingle]
                            ) [IfCond]
                            StmtPrint(
                              ExprNeg(
                                TermSingle(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprNeg]
                            ) [StmtPrint]
                          ) [StmtIfBody]
                          StmtPrint(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 4
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [StmtPrint]
                        ) [StmtIfElse]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorArray(
                     niz
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorArray]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtPrint(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FuncCallParams(
                                DesignatorSimple(
                                 sum
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActParsSingle]
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActParsMulti]
                              ) [FuncCallParams]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               niz
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     eol
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprSingle(
              TermSingle(
                FuncCallParams(
                  DesignatorSimple(
                   inkrement
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             niz
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ActParsSingle]
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ActParsMulti]
                ) [FuncCallParams]
              ) [TermSingle]
            ) [ExprSingle]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:55:01,029 - 

================SEMANTICKA OBRADA====================


INFO  22:55:01,032 - Deklarisana konstanta 'jedan' na liniji 5
INFO  22:55:01,032 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  22:55:01,032 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  22:55:01,032 - Deklarisan globalni niz 'niz' na liniji 10
INFO  22:55:01,033 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  22:55:01,033 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  22:55:01,033 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  22:55:01,033 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  22:55:01,033 - Deklarisana promenljiva 'pom' na liniji 20
INFO  22:55:01,033 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 50
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 51
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:01,033 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  22:55:01,033 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 53
INFO  22:55:01,033 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  22:55:01,033 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  22:55:01,033 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  22:55:01,033 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 71
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 72
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 73
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:01,033 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:01,033 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:55:01,033 - Pristup elementu niza 'niz' na liniji 79
INFO  22:55:01,034 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  22:55:01,034 - ===================================
INFO  22:55:01,034 - Generisanje MJ bajtkoda: C:\Users\User\src\MicroJavaCompiler\MJCompiler\program.obj
INFO  22:55:01,036 - Parsiranje uspesno zavrseno!
INFO  22:55:29,163 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:55:29,189 - #2 program
INFO  22:55:29,189 - #19 test302
INFO  22:55:29,189 - #7 const
INFO  22:55:29,190 - #19 int
INFO  22:55:29,190 - #19 jedan
INFO  22:55:29,190 - #36 =
INFO  22:55:29,190 - #20 1
INFO  22:55:29,190 - #39 ;
INFO  22:55:29,191 - #19 int
INFO  22:55:29,191 - #19 i
INFO  22:55:29,191 - #39 ;
INFO  22:55:29,191 - #19 bool
INFO  22:55:29,191 - #19 ibool
INFO  22:55:29,191 - #39 ;
INFO  22:55:29,191 - #19 int
INFO  22:55:29,191 - #19 niz
INFO  22:55:29,191 - #44 [
INFO  22:55:29,192 - #45 ]
INFO  22:55:29,192 - #39 ;
INFO  22:55:29,192 - #46 {
INFO  22:55:29,192 - #19 int
INFO  22:55:29,192 - #19 sum
INFO  22:55:29,192 - #42 (
INFO  22:55:29,192 - #19 int
INFO  22:55:29,192 - #19 z
INFO  22:55:29,192 - #40 ,
INFO  22:55:29,192 - #19 int
INFO  22:55:29,192 - #19 d
INFO  22:55:29,192 - #43 )
INFO  22:55:29,192 - #46 {
INFO  22:55:29,192 - #15 return
INFO  22:55:29,193 - #19 z
INFO  22:55:29,193 - #23 +
INFO  22:55:29,193 - #19 d
INFO  22:55:29,193 - #39 ;
INFO  22:55:29,193 - #47 }
INFO  22:55:29,194 - #19 int
INFO  22:55:29,194 - #19 inkrement
INFO  22:55:29,194 - #42 (
INFO  22:55:29,194 - #19 int
INFO  22:55:29,194 - #19 a
INFO  22:55:29,194 - #40 ,
INFO  22:55:29,194 - #19 int
INFO  22:55:29,194 - #19 inc
INFO  22:55:29,194 - #43 )
INFO  22:55:29,194 - #19 int
INFO  22:55:29,194 - #19 pom
INFO  22:55:29,194 - #39 ;
INFO  22:55:29,194 - #46 {
INFO  22:55:29,194 - #8 if
INFO  22:55:29,194 - #42 (
INFO  22:55:29,195 - #19 inc
INFO  22:55:29,195 - #28 ==
INFO  22:55:29,195 - #19 jedan
INFO  22:55:29,195 - #43 )
INFO  22:55:29,196 - #19 pom
INFO  22:55:29,196 - #36 =
INFO  22:55:29,196 - #20 1
INFO  22:55:29,196 - #39 ;
INFO  22:55:29,196 - #6 else
INFO  22:55:29,196 - #8 if
INFO  22:55:29,196 - #42 (
INFO  22:55:29,196 - #19 inc
INFO  22:55:29,196 - #28 ==
INFO  22:55:29,196 - #20 2
INFO  22:55:29,196 - #43 )
INFO  22:55:29,196 - #19 pom
INFO  22:55:29,196 - #36 =
INFO  22:55:29,196 - #19 a
INFO  22:55:29,196 - #39 ;
INFO  22:55:29,196 - #15 return
INFO  22:55:29,197 - #19 sum
INFO  22:55:29,197 - #42 (
INFO  22:55:29,197 - #19 a
INFO  22:55:29,197 - #40 ,
INFO  22:55:29,197 - #19 pom
INFO  22:55:29,197 - #43 )
INFO  22:55:29,197 - #39 ;
INFO  22:55:29,197 - #47 }
INFO  22:55:29,197 - #19 bool
INFO  22:55:29,197 - #19 verify
INFO  22:55:29,197 - #42 (
INFO  22:55:29,197 - #43 )
INFO  22:55:29,197 - #46 {
INFO  22:55:29,197 - #13 print
INFO  22:55:29,197 - #42 (
INFO  22:55:29,197 - #21 v
INFO  22:55:29,198 - #43 )
INFO  22:55:29,198 - #39 ;
INFO  22:55:29,198 - #15 return
INFO  22:55:29,198 - #22 false
INFO  22:55:29,198 - #39 ;
INFO  22:55:29,198 - #47 }
INFO  22:55:29,198 - #16 void
INFO  22:55:29,198 - #19 main
INFO  22:55:29,198 - #42 (
INFO  22:55:29,198 - #43 )
INFO  22:55:29,198 - #46 {
INFO  22:55:29,198 - #8 if
INFO  22:55:29,198 - #42 (
INFO  22:55:29,198 - #20 1
INFO  22:55:29,198 - #29 !=
INFO  22:55:29,198 - #20 1
INFO  22:55:29,199 - #43 )
INFO  22:55:29,199 - #13 print
INFO  22:55:29,199 - #42 (
INFO  22:55:29,199 - #24 -
INFO  22:55:29,199 - #20 6
INFO  22:55:29,199 - #43 )
INFO  22:55:29,199 - #39 ;
INFO  22:55:29,199 - #6 else
INFO  22:55:29,199 - #13 print
INFO  22:55:29,199 - #42 (
INFO  22:55:29,199 - #20 0
INFO  22:55:29,199 - #43 )
INFO  22:55:29,199 - #39 ;
INFO  22:55:29,200 - #19 ibool
INFO  22:55:29,200 - #36 =
INFO  22:55:29,200 - #22 false
INFO  22:55:29,200 - #39 ;
INFO  22:55:29,200 - #19 i
INFO  22:55:29,200 - #36 =
INFO  22:55:29,200 - #20 0
INFO  22:55:29,200 - #39 ;
INFO  22:55:29,200 - #10 do
INFO  22:55:29,200 - #46 {
INFO  22:55:29,200 - #8 if
INFO  22:55:29,200 - #42 (
INFO  22:55:29,200 - #19 i
INFO  22:55:29,200 - #28 ==
INFO  22:55:29,200 - #20 2
INFO  22:55:29,200 - #43 )
INFO  22:55:29,201 - #19 ibool
INFO  22:55:29,201 - #36 =
INFO  22:55:29,201 - #22 true
INFO  22:55:29,201 - #39 ;
INFO  22:55:29,201 - #19 i
INFO  22:55:29,201 - #37 ++
INFO  22:55:29,201 - #39 ;
INFO  22:55:29,201 - #47 }
INFO  22:55:29,201 - #11 while
INFO  22:55:29,201 - #42 (
INFO  22:55:29,201 - #19 i
INFO  22:55:29,201 - #32 <
INFO  22:55:29,201 - #20 5
INFO  22:55:29,201 - #43 )
INFO  22:55:29,201 - #39 ;
INFO  22:55:29,201 - #8 if
INFO  22:55:29,201 - #42 (
INFO  22:55:29,201 - #19 ibool
INFO  22:55:29,202 - #43 )
INFO  22:55:29,202 - #8 if
INFO  22:55:29,202 - #42 (
INFO  22:55:29,202 - #19 i
INFO  22:55:29,202 - #28 ==
INFO  22:55:29,202 - #20 5
INFO  22:55:29,202 - #43 )
INFO  22:55:29,202 - #13 print
INFO  22:55:29,202 - #42 (
INFO  22:55:29,202 - #20 1
INFO  22:55:29,202 - #43 )
INFO  22:55:29,202 - #39 ;
INFO  22:55:29,202 - #6 else
INFO  22:55:29,202 - #13 print
INFO  22:55:29,202 - #42 (
INFO  22:55:29,202 - #24 -
INFO  22:55:29,202 - #20 1
INFO  22:55:29,202 - #43 )
INFO  22:55:29,202 - #39 ;
INFO  22:55:29,202 - #19 niz
INFO  22:55:29,202 - #36 =
INFO  22:55:29,202 - #12 new
INFO  22:55:29,202 - #19 int
INFO  22:55:29,202 - #44 [
INFO  22:55:29,202 - #20 3
INFO  22:55:29,202 - #45 ]
INFO  22:55:29,202 - #39 ;
INFO  22:55:29,202 - #19 niz
INFO  22:55:29,202 - #44 [
INFO  22:55:29,202 - #20 0
INFO  22:55:29,202 - #45 ]
INFO  22:55:29,202 - #36 =
INFO  22:55:29,202 - #20 1
INFO  22:55:29,202 - #39 ;
INFO  22:55:29,202 - #19 niz
INFO  22:55:29,203 - #44 [
INFO  22:55:29,203 - #20 1
INFO  22:55:29,203 - #45 ]
INFO  22:55:29,203 - #36 =
INFO  22:55:29,203 - #20 2
INFO  22:55:29,203 - #39 ;
INFO  22:55:29,203 - #19 niz
INFO  22:55:29,203 - #44 [
INFO  22:55:29,203 - #20 2
INFO  22:55:29,203 - #45 ]
INFO  22:55:29,203 - #36 =
INFO  22:55:29,203 - #19 sum
INFO  22:55:29,203 - #42 (
INFO  22:55:29,203 - #19 niz
INFO  22:55:29,203 - #44 [
INFO  22:55:29,203 - #20 1
INFO  22:55:29,203 - #45 ]
INFO  22:55:29,203 - #40 ,
INFO  22:55:29,203 - #19 niz
INFO  22:55:29,203 - #44 [
INFO  22:55:29,203 - #20 0
INFO  22:55:29,203 - #45 ]
INFO  22:55:29,203 - #43 )
INFO  22:55:29,203 - #23 +
INFO  22:55:29,203 - #20 1
INFO  22:55:29,203 - #39 ;
INFO  22:55:29,203 - #8 if
INFO  22:55:29,203 - #42 (
INFO  22:55:29,203 - #19 verify
INFO  22:55:29,203 - #42 (
INFO  22:55:29,203 - #43 )
INFO  22:55:29,203 - #35 ||
INFO  22:55:29,203 - #19 niz
INFO  22:55:29,203 - #44 [
INFO  22:55:29,203 - #20 2
INFO  22:55:29,203 - #45 ]
INFO  22:55:29,203 - #28 ==
INFO  22:55:29,203 - #20 4
INFO  22:55:29,203 - #43 )
INFO  22:55:29,203 - #13 print
INFO  22:55:29,203 - #42 (
INFO  22:55:29,203 - #19 ord
INFO  22:55:29,203 - #42 (
INFO  22:55:29,203 - #21 A
INFO  22:55:29,203 - #43 )
INFO  22:55:29,203 - #43 )
INFO  22:55:29,203 - #39 ;
INFO  22:55:29,203 - #6 else
INFO  22:55:29,204 - #13 print
INFO  22:55:29,204 - #42 (
INFO  22:55:29,204 - #19 ord
INFO  22:55:29,204 - #42 (
INFO  22:55:29,204 - #21 a
INFO  22:55:29,204 - #43 )
INFO  22:55:29,204 - #43 )
INFO  22:55:29,204 - #39 ;
INFO  22:55:29,204 - #13 print
INFO  22:55:29,204 - #42 (
INFO  22:55:29,204 - #19 eol
INFO  22:55:29,204 - #43 )
INFO  22:55:29,204 - #39 ;
INFO  22:55:29,204 - #19 i
INFO  22:55:29,204 - #36 =
INFO  22:55:29,204 - #20 0
INFO  22:55:29,204 - #39 ;
INFO  22:55:29,204 - #10 do
INFO  22:55:29,204 - #46 {
INFO  22:55:29,204 - #8 if
INFO  22:55:29,204 - #42 (
INFO  22:55:29,204 - #19 i
INFO  22:55:29,204 - #28 ==
INFO  22:55:29,204 - #20 3
INFO  22:55:29,204 - #43 )
INFO  22:55:29,204 - #46 {
INFO  22:55:29,204 - #19 i
INFO  22:55:29,204 - #37 ++
INFO  22:55:29,204 - #39 ;
INFO  22:55:29,204 - #17 continue
INFO  22:55:29,204 - #39 ;
INFO  22:55:29,204 - #47 }
INFO  22:55:29,204 - #8 if
INFO  22:55:29,204 - #42 (
INFO  22:55:29,204 - #19 i
INFO  22:55:29,205 - #28 ==
INFO  22:55:29,205 - #20 4
INFO  22:55:29,205 - #43 )
INFO  22:55:29,205 - #3 break
INFO  22:55:29,205 - #39 ;
INFO  22:55:29,205 - #19 i
INFO  22:55:29,205 - #36 =
INFO  22:55:29,205 - #19 inkrement
INFO  22:55:29,205 - #42 (
INFO  22:55:29,205 - #19 i
INFO  22:55:29,205 - #40 ,
INFO  22:55:29,205 - #20 1
INFO  22:55:29,205 - #43 )
INFO  22:55:29,205 - #39 ;
INFO  22:55:29,205 - #47 }
INFO  22:55:29,205 - #11 while
INFO  22:55:29,205 - #42 (
INFO  22:55:29,205 - #19 i
INFO  22:55:29,205 - #32 <
INFO  22:55:29,205 - #20 10
INFO  22:55:29,205 - #43 )
INFO  22:55:29,205 - #39 ;
INFO  22:55:29,205 - #8 if
INFO  22:55:29,205 - #42 (
INFO  22:55:29,205 - #19 i
INFO  22:55:29,205 - #28 ==
INFO  22:55:29,205 - #20 3
INFO  22:55:29,205 - #34 &&
INFO  22:55:29,205 - #19 verify
INFO  22:55:29,205 - #42 (
INFO  22:55:29,205 - #43 )
INFO  22:55:29,205 - #43 )
INFO  22:55:29,205 - #13 print
INFO  22:55:29,205 - #42 (
INFO  22:55:29,205 - #24 -
INFO  22:55:29,205 - #20 4
INFO  22:55:29,205 - #43 )
INFO  22:55:29,205 - #39 ;
INFO  22:55:29,205 - #6 else
INFO  22:55:29,205 - #13 print
INFO  22:55:29,205 - #42 (
INFO  22:55:29,205 - #20 4
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #39 ;
INFO  22:55:29,206 - #14 read
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 niz
INFO  22:55:29,206 - #44 [
INFO  22:55:29,206 - #20 0
INFO  22:55:29,206 - #45 ]
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #39 ;
INFO  22:55:29,206 - #14 read
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 niz
INFO  22:55:29,206 - #44 [
INFO  22:55:29,206 - #20 1
INFO  22:55:29,206 - #45 ]
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #39 ;
INFO  22:55:29,206 - #14 read
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 niz
INFO  22:55:29,206 - #44 [
INFO  22:55:29,206 - #20 2
INFO  22:55:29,206 - #45 ]
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #39 ;
INFO  22:55:29,206 - #13 print
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 eol
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #39 ;
INFO  22:55:29,206 - #13 print
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 sum
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 sum
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 niz
INFO  22:55:29,206 - #44 [
INFO  22:55:29,206 - #20 0
INFO  22:55:29,206 - #45 ]
INFO  22:55:29,206 - #40 ,
INFO  22:55:29,206 - #19 niz
INFO  22:55:29,206 - #44 [
INFO  22:55:29,206 - #20 1
INFO  22:55:29,206 - #45 ]
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #40 ,
INFO  22:55:29,206 - #19 niz
INFO  22:55:29,206 - #44 [
INFO  22:55:29,206 - #20 2
INFO  22:55:29,206 - #45 ]
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #43 )
INFO  22:55:29,206 - #39 ;
INFO  22:55:29,206 - #13 print
INFO  22:55:29,206 - #42 (
INFO  22:55:29,206 - #19 eol
INFO  22:55:29,207 - #43 )
INFO  22:55:29,207 - #39 ;
INFO  22:55:29,207 - #13 print
INFO  22:55:29,207 - #42 (
INFO  22:55:29,207 - #19 inkrement
INFO  22:55:29,207 - #42 (
INFO  22:55:29,207 - #19 niz
INFO  22:55:29,207 - #44 [
INFO  22:55:29,207 - #20 2
INFO  22:55:29,207 - #45 ]
INFO  22:55:29,207 - #40 ,
INFO  22:55:29,207 - #20 2
INFO  22:55:29,207 - #43 )
INFO  22:55:29,207 - #43 )
INFO  22:55:29,207 - #39 ;
INFO  22:55:29,207 - #47 }
INFO  22:55:29,207 - #47 }
INFO  22:55:29,207 - 

================SINTAKSNO STABLO====================


INFO  22:55:29,210 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           z
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         d
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   inc
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   jedan
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 a
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               pom
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     v
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprSingle(
                TermSingle(
                  FactorBoolConst(
                   false
                  ) [FactorBoolConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtIfElse(
                                                    IfKeyword(
                                                    ) [IfKeyword]
                                                    StmtIfBody(
                                                      IfCond(
                                                        CondSingle(
                                                          CondTermSingle(
                                                            CondFactRelop(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                              RelopNE(
                                                              ) [RelopNE]
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [CondFactRelop]
                                                          ) [CondTermSingle]
                                                        ) [CondSingle]
                                                      ) [IfCond]
                                                      StmtPrint(
                                                        ExprNeg(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             6
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprNeg]
                                                      ) [StmtPrint]
                                                    ) [StmtIfBody]
                                                    StmtPrint(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [StmtPrint]
                                                  ) [StmtIfElse]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     ibool
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           false
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   i
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         0
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDoWhile(
                                              DoKeyword(
                                              ) [DoKeyword]
                                              StmtWhileBody(
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        IfKeyword(
                                                        ) [IfKeyword]
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondSingle(
                                                              CondTermSingle(
                                                                CondFactRelop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         i
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       2
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [CondFactRelop]
                                                              ) [CondTermSingle]
                                                            ) [CondSingle]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorBoolConst(
                                                                     true
                                                                    ) [FactorBoolConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                              ) [StmtWhileBody]
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    RelopLT(
                                                    ) [RelopLT]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         5
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [StmtDoWhile]
                                          ) [StatementMulti]
                                          StmtIf(
                                            IfKeyword(
                                            ) [IfKeyword]
                                            StmtIfBody(
                                              IfCond(
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactSingle(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             ibool
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [CondFactSingle]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [IfCond]
                                              StmtIfElse(
                                                IfKeyword(
                                                ) [IfKeyword]
                                                StmtIfBody(
                                                  IfCond(
                                                    CondSingle(
                                                      CondTermSingle(
                                                        CondFactRelop(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 i
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                          RelopEQ(
                                                          ) [RelopEQ]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               5
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [CondFactRelop]
                                                      ) [CondTermSingle]
                                                    ) [CondSingle]
                                                  ) [IfCond]
                                                  StmtPrint(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [StmtPrint]
                                                ) [StmtIfBody]
                                                StmtPrint(
                                                  ExprNeg(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprNeg]
                                                ) [StmtPrint]
                                              ) [StmtIfElse]
                                            ) [StmtIfBody]
                                          ) [StmtIf]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             niz
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNewArray(
                                                    Type(
                                                     int
                                                    ) [Type]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [FactorNewArray]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorArray(
                                       niz
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorArray]
                                      AssignmentExpr(
                                        ExprAddop(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 sum
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActParsSingle]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprAddop]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtIfElse(
                                  IfKeyword(
                                  ) [IfKeyword]
                                  StmtIfBody(
                                    IfCond(
                                      CondOr(
                                        CondSingle(
                                          CondTermSingle(
                                            CondFactSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCall(
                                                    DesignatorSimple(
                                                     verify
                                                    ) [DesignatorSimple]
                                                  ) [FuncCall]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [CondFactSingle]
                                          ) [CondTermSingle]
                                        ) [CondSingle]
                                        CondTermSingle(
                                          CondFactRelop(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            RelopEQ(
                                            ) [RelopEQ]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 4
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [CondFactRelop]
                                        ) [CondTermSingle]
                                      ) [CondOr]
                                    ) [IfCond]
                                    StmtPrint(
                                      ExprSingle(
                                        TermSingle(
                                          FuncCallParams(
                                            DesignatorSimple(
                                             ord
                                            ) [DesignatorSimple]
                                            ActParsSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   A
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ActParsSingle]
                                          ) [FuncCallParams]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [StmtPrint]
                                  ) [StmtIfBody]
                                  StmtPrint(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCallParams(
                                          DesignatorSimple(
                                           ord
                                          ) [DesignatorSimple]
                                          ActParsSingle(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ActParsSingle]
                                        ) [FuncCallParams]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [StmtPrint]
                                ) [StmtIfElse]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       eol
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 i
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       0
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      IfKeyword(
                                      ) [IfKeyword]
                                      StmtIfBody(
                                        IfCond(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactRelop(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [CondFactRelop]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               inkrement
                                              ) [DesignatorSimple]
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsSingle]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActParsMulti]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtIfElse(
                          IfKeyword(
                          ) [IfKeyword]
                          StmtIfBody(
                            IfCond(
                              CondSingle(
                                CondTermAnd(
                                  CondTermSingle(
                                    CondFactRelop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      RelopEQ(
                                      ) [RelopEQ]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [CondFactRelop]
                                  ) [CondTermSingle]
                                  CondFactSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCall(
                                          DesignatorSimple(
                                           verify
                                          ) [DesignatorSimple]
                                        ) [FuncCall]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [CondFactSingle]
                                ) [CondTermAnd]
                              ) [CondSingle]
                            ) [IfCond]
                            StmtPrint(
                              ExprNeg(
                                TermSingle(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprNeg]
                            ) [StmtPrint]
                          ) [StmtIfBody]
                          StmtPrint(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 4
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [StmtPrint]
                        ) [StmtIfElse]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorArray(
                     niz
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorArray]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtPrint(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FuncCallParams(
                                DesignatorSimple(
                                 sum
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActParsSingle]
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActParsMulti]
                              ) [FuncCallParams]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               niz
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     eol
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprSingle(
              TermSingle(
                FuncCallParams(
                  DesignatorSimple(
                   inkrement
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             niz
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ActParsSingle]
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ActParsMulti]
                ) [FuncCallParams]
              ) [TermSingle]
            ) [ExprSingle]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:55:29,213 - 

================SEMANTICKA OBRADA====================


INFO  22:55:29,217 - Deklarisana konstanta 'jedan' na liniji 5
INFO  22:55:29,217 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  22:55:29,217 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  22:55:29,217 - Deklarisan globalni niz 'niz' na liniji 10
INFO  22:55:29,217 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  22:55:29,217 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  22:55:29,217 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  22:55:29,217 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  22:55:29,217 - Deklarisana promenljiva 'pom' na liniji 20
INFO  22:55:29,217 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 50
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 51
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:29,218 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  22:55:29,218 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 53
INFO  22:55:29,218 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  22:55:29,218 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  22:55:29,218 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  22:55:29,218 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 71
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 72
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 73
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:29,218 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:29,218 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:55:29,218 - Pristup elementu niza 'niz' na liniji 79
INFO  22:55:29,218 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  22:55:29,218 - ===================================
INFO  22:55:29,218 - Generisanje MJ bajtkoda: C:\Users\User\src\MicroJavaCompiler\MJCompiler\program.obj
INFO  22:55:29,220 - Parsiranje uspesno zavrseno!
INFO  22:55:51,980 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:55:52,007 - #2 program
INFO  22:55:52,007 - #19 test302
INFO  22:55:52,007 - #7 const
INFO  22:55:52,007 - #19 int
INFO  22:55:52,007 - #19 jedan
INFO  22:55:52,008 - #36 =
INFO  22:55:52,008 - #20 1
INFO  22:55:52,008 - #39 ;
INFO  22:55:52,008 - #19 int
INFO  22:55:52,008 - #19 i
INFO  22:55:52,008 - #39 ;
INFO  22:55:52,008 - #19 bool
INFO  22:55:52,009 - #19 ibool
INFO  22:55:52,009 - #39 ;
INFO  22:55:52,009 - #19 int
INFO  22:55:52,009 - #19 niz
INFO  22:55:52,009 - #44 [
INFO  22:55:52,009 - #45 ]
INFO  22:55:52,009 - #39 ;
INFO  22:55:52,009 - #46 {
INFO  22:55:52,009 - #19 int
INFO  22:55:52,009 - #19 sum
INFO  22:55:52,009 - #42 (
INFO  22:55:52,009 - #19 int
INFO  22:55:52,009 - #19 z
INFO  22:55:52,009 - #40 ,
INFO  22:55:52,010 - #19 int
INFO  22:55:52,010 - #19 d
INFO  22:55:52,010 - #43 )
INFO  22:55:52,010 - #46 {
INFO  22:55:52,010 - #15 return
INFO  22:55:52,010 - #19 z
INFO  22:55:52,010 - #23 +
INFO  22:55:52,010 - #19 d
INFO  22:55:52,010 - #39 ;
INFO  22:55:52,011 - #47 }
INFO  22:55:52,011 - #19 int
INFO  22:55:52,011 - #19 inkrement
INFO  22:55:52,011 - #42 (
INFO  22:55:52,011 - #19 int
INFO  22:55:52,011 - #19 a
INFO  22:55:52,011 - #40 ,
INFO  22:55:52,011 - #19 int
INFO  22:55:52,011 - #19 inc
INFO  22:55:52,011 - #43 )
INFO  22:55:52,011 - #19 int
INFO  22:55:52,011 - #19 pom
INFO  22:55:52,012 - #39 ;
INFO  22:55:52,012 - #46 {
INFO  22:55:52,012 - #8 if
INFO  22:55:52,012 - #42 (
INFO  22:55:52,012 - #19 inc
INFO  22:55:52,012 - #28 ==
INFO  22:55:52,012 - #19 jedan
INFO  22:55:52,012 - #43 )
INFO  22:55:52,012 - #19 pom
INFO  22:55:52,012 - #36 =
INFO  22:55:52,012 - #20 1
INFO  22:55:52,012 - #39 ;
INFO  22:55:52,012 - #6 else
INFO  22:55:52,012 - #8 if
INFO  22:55:52,012 - #42 (
INFO  22:55:52,012 - #19 inc
INFO  22:55:52,012 - #28 ==
INFO  22:55:52,013 - #20 2
INFO  22:55:52,013 - #43 )
INFO  22:55:52,013 - #19 pom
INFO  22:55:52,013 - #36 =
INFO  22:55:52,013 - #19 a
INFO  22:55:52,013 - #39 ;
INFO  22:55:52,013 - #15 return
INFO  22:55:52,013 - #19 sum
INFO  22:55:52,013 - #42 (
INFO  22:55:52,013 - #19 a
INFO  22:55:52,013 - #40 ,
INFO  22:55:52,013 - #19 pom
INFO  22:55:52,013 - #43 )
INFO  22:55:52,013 - #39 ;
INFO  22:55:52,013 - #47 }
INFO  22:55:52,013 - #19 bool
INFO  22:55:52,014 - #19 verify
INFO  22:55:52,014 - #42 (
INFO  22:55:52,014 - #43 )
INFO  22:55:52,014 - #46 {
INFO  22:55:52,014 - #13 print
INFO  22:55:52,014 - #42 (
INFO  22:55:52,014 - #21 v
INFO  22:55:52,014 - #43 )
INFO  22:55:52,014 - #39 ;
INFO  22:55:52,014 - #15 return
INFO  22:55:52,014 - #22 false
INFO  22:55:52,014 - #39 ;
INFO  22:55:52,014 - #47 }
INFO  22:55:52,014 - #16 void
INFO  22:55:52,014 - #19 main
INFO  22:55:52,014 - #42 (
INFO  22:55:52,014 - #43 )
INFO  22:55:52,015 - #46 {
INFO  22:55:52,015 - #8 if
INFO  22:55:52,015 - #42 (
INFO  22:55:52,015 - #20 1
INFO  22:55:52,015 - #29 !=
INFO  22:55:52,015 - #20 1
INFO  22:55:52,015 - #43 )
INFO  22:55:52,015 - #13 print
INFO  22:55:52,015 - #42 (
INFO  22:55:52,015 - #24 -
INFO  22:55:52,015 - #20 6
INFO  22:55:52,015 - #43 )
INFO  22:55:52,015 - #39 ;
INFO  22:55:52,015 - #6 else
INFO  22:55:52,015 - #13 print
INFO  22:55:52,015 - #42 (
INFO  22:55:52,015 - #20 0
INFO  22:55:52,016 - #43 )
INFO  22:55:52,016 - #39 ;
INFO  22:55:52,016 - #19 ibool
INFO  22:55:52,016 - #36 =
INFO  22:55:52,016 - #22 false
INFO  22:55:52,016 - #39 ;
INFO  22:55:52,016 - #19 i
INFO  22:55:52,016 - #36 =
INFO  22:55:52,016 - #20 0
INFO  22:55:52,016 - #39 ;
INFO  22:55:52,016 - #10 do
INFO  22:55:52,016 - #46 {
INFO  22:55:52,017 - #8 if
INFO  22:55:52,017 - #42 (
INFO  22:55:52,017 - #19 i
INFO  22:55:52,017 - #28 ==
INFO  22:55:52,017 - #20 2
INFO  22:55:52,017 - #43 )
INFO  22:55:52,017 - #19 ibool
INFO  22:55:52,017 - #36 =
INFO  22:55:52,017 - #22 true
INFO  22:55:52,017 - #39 ;
INFO  22:55:52,017 - #19 i
INFO  22:55:52,017 - #37 ++
INFO  22:55:52,017 - #39 ;
INFO  22:55:52,017 - #47 }
INFO  22:55:52,017 - #11 while
INFO  22:55:52,017 - #42 (
INFO  22:55:52,017 - #19 i
INFO  22:55:52,017 - #32 <
INFO  22:55:52,017 - #20 5
INFO  22:55:52,018 - #43 )
INFO  22:55:52,018 - #39 ;
INFO  22:55:52,018 - #8 if
INFO  22:55:52,018 - #42 (
INFO  22:55:52,018 - #19 ibool
INFO  22:55:52,018 - #43 )
INFO  22:55:52,018 - #8 if
INFO  22:55:52,018 - #42 (
INFO  22:55:52,018 - #19 i
INFO  22:55:52,018 - #28 ==
INFO  22:55:52,018 - #20 5
INFO  22:55:52,018 - #43 )
INFO  22:55:52,018 - #13 print
INFO  22:55:52,018 - #42 (
INFO  22:55:52,018 - #20 1
INFO  22:55:52,018 - #43 )
INFO  22:55:52,018 - #39 ;
INFO  22:55:52,018 - #6 else
INFO  22:55:52,018 - #13 print
INFO  22:55:52,018 - #42 (
INFO  22:55:52,018 - #24 -
INFO  22:55:52,018 - #20 1
INFO  22:55:52,018 - #43 )
INFO  22:55:52,018 - #39 ;
INFO  22:55:52,019 - #19 niz
INFO  22:55:52,019 - #36 =
INFO  22:55:52,019 - #12 new
INFO  22:55:52,019 - #19 int
INFO  22:55:52,019 - #44 [
INFO  22:55:52,019 - #20 3
INFO  22:55:52,019 - #45 ]
INFO  22:55:52,019 - #39 ;
INFO  22:55:52,019 - #19 niz
INFO  22:55:52,019 - #44 [
INFO  22:55:52,019 - #20 0
INFO  22:55:52,019 - #45 ]
INFO  22:55:52,019 - #36 =
INFO  22:55:52,019 - #20 1
INFO  22:55:52,019 - #39 ;
INFO  22:55:52,019 - #19 niz
INFO  22:55:52,019 - #44 [
INFO  22:55:52,019 - #20 1
INFO  22:55:52,019 - #45 ]
INFO  22:55:52,019 - #36 =
INFO  22:55:52,019 - #20 2
INFO  22:55:52,019 - #39 ;
INFO  22:55:52,019 - #19 niz
INFO  22:55:52,019 - #44 [
INFO  22:55:52,019 - #20 2
INFO  22:55:52,019 - #45 ]
INFO  22:55:52,019 - #36 =
INFO  22:55:52,019 - #19 sum
INFO  22:55:52,019 - #42 (
INFO  22:55:52,019 - #19 niz
INFO  22:55:52,019 - #44 [
INFO  22:55:52,019 - #20 1
INFO  22:55:52,019 - #45 ]
INFO  22:55:52,019 - #40 ,
INFO  22:55:52,019 - #19 niz
INFO  22:55:52,019 - #44 [
INFO  22:55:52,019 - #20 0
INFO  22:55:52,019 - #45 ]
INFO  22:55:52,019 - #43 )
INFO  22:55:52,019 - #23 +
INFO  22:55:52,020 - #20 1
INFO  22:55:52,020 - #39 ;
INFO  22:55:52,020 - #8 if
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #19 verify
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #35 ||
INFO  22:55:52,020 - #19 niz
INFO  22:55:52,020 - #44 [
INFO  22:55:52,020 - #20 2
INFO  22:55:52,020 - #45 ]
INFO  22:55:52,020 - #28 ==
INFO  22:55:52,020 - #20 4
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #13 print
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #19 ord
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #21 A
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #39 ;
INFO  22:55:52,020 - #6 else
INFO  22:55:52,020 - #13 print
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #19 ord
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #21 a
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #39 ;
INFO  22:55:52,020 - #13 print
INFO  22:55:52,020 - #42 (
INFO  22:55:52,020 - #19 eol
INFO  22:55:52,020 - #43 )
INFO  22:55:52,020 - #39 ;
INFO  22:55:52,020 - #19 i
INFO  22:55:52,020 - #36 =
INFO  22:55:52,020 - #20 0
INFO  22:55:52,020 - #39 ;
INFO  22:55:52,020 - #10 do
INFO  22:55:52,021 - #46 {
INFO  22:55:52,021 - #8 if
INFO  22:55:52,021 - #42 (
INFO  22:55:52,021 - #19 i
INFO  22:55:52,021 - #28 ==
INFO  22:55:52,021 - #20 3
INFO  22:55:52,021 - #43 )
INFO  22:55:52,021 - #46 {
INFO  22:55:52,021 - #19 i
INFO  22:55:52,021 - #37 ++
INFO  22:55:52,021 - #39 ;
INFO  22:55:52,021 - #17 continue
INFO  22:55:52,021 - #39 ;
INFO  22:55:52,021 - #47 }
INFO  22:55:52,021 - #8 if
INFO  22:55:52,021 - #42 (
INFO  22:55:52,021 - #19 i
INFO  22:55:52,021 - #28 ==
INFO  22:55:52,021 - #20 4
INFO  22:55:52,021 - #43 )
INFO  22:55:52,021 - #3 break
INFO  22:55:52,021 - #39 ;
INFO  22:55:52,021 - #19 i
INFO  22:55:52,022 - #36 =
INFO  22:55:52,022 - #19 inkrement
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #19 i
INFO  22:55:52,022 - #40 ,
INFO  22:55:52,022 - #20 1
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #39 ;
INFO  22:55:52,022 - #47 }
INFO  22:55:52,022 - #11 while
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #19 i
INFO  22:55:52,022 - #32 <
INFO  22:55:52,022 - #20 10
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #39 ;
INFO  22:55:52,022 - #8 if
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #19 i
INFO  22:55:52,022 - #28 ==
INFO  22:55:52,022 - #20 3
INFO  22:55:52,022 - #34 &&
INFO  22:55:52,022 - #19 verify
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #13 print
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #24 -
INFO  22:55:52,022 - #20 4
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #39 ;
INFO  22:55:52,022 - #6 else
INFO  22:55:52,022 - #13 print
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #20 4
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #39 ;
INFO  22:55:52,022 - #14 read
INFO  22:55:52,022 - #42 (
INFO  22:55:52,022 - #19 niz
INFO  22:55:52,022 - #44 [
INFO  22:55:52,022 - #20 0
INFO  22:55:52,022 - #45 ]
INFO  22:55:52,022 - #43 )
INFO  22:55:52,022 - #39 ;
INFO  22:55:52,022 - #14 read
INFO  22:55:52,022 - #42 (
INFO  22:55:52,023 - #19 niz
INFO  22:55:52,023 - #44 [
INFO  22:55:52,023 - #20 1
INFO  22:55:52,023 - #45 ]
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #39 ;
INFO  22:55:52,023 - #14 read
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 niz
INFO  22:55:52,023 - #44 [
INFO  22:55:52,023 - #20 2
INFO  22:55:52,023 - #45 ]
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #39 ;
INFO  22:55:52,023 - #13 print
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 eol
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #39 ;
INFO  22:55:52,023 - #13 print
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 sum
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 sum
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 niz
INFO  22:55:52,023 - #44 [
INFO  22:55:52,023 - #20 0
INFO  22:55:52,023 - #45 ]
INFO  22:55:52,023 - #40 ,
INFO  22:55:52,023 - #19 niz
INFO  22:55:52,023 - #44 [
INFO  22:55:52,023 - #20 1
INFO  22:55:52,023 - #45 ]
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #40 ,
INFO  22:55:52,023 - #19 niz
INFO  22:55:52,023 - #44 [
INFO  22:55:52,023 - #20 2
INFO  22:55:52,023 - #45 ]
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #39 ;
INFO  22:55:52,023 - #13 print
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 eol
INFO  22:55:52,023 - #43 )
INFO  22:55:52,023 - #39 ;
INFO  22:55:52,023 - #13 print
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 inkrement
INFO  22:55:52,023 - #42 (
INFO  22:55:52,023 - #19 niz
INFO  22:55:52,023 - #44 [
INFO  22:55:52,023 - #20 2
INFO  22:55:52,023 - #45 ]
INFO  22:55:52,023 - #40 ,
INFO  22:55:52,024 - #20 2
INFO  22:55:52,024 - #43 )
INFO  22:55:52,024 - #43 )
INFO  22:55:52,024 - #39 ;
INFO  22:55:52,024 - #47 }
INFO  22:55:52,024 - #47 }
INFO  22:55:52,024 - 

================SINTAKSNO STABLO====================


INFO  22:55:52,026 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           z
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         d
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   inc
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   jedan
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 a
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               pom
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     v
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprSingle(
                TermSingle(
                  FactorBoolConst(
                   false
                  ) [FactorBoolConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtIfElse(
                                                    IfKeyword(
                                                    ) [IfKeyword]
                                                    StmtIfBody(
                                                      IfCond(
                                                        CondSingle(
                                                          CondTermSingle(
                                                            CondFactRelop(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                              RelopNE(
                                                              ) [RelopNE]
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [CondFactRelop]
                                                          ) [CondTermSingle]
                                                        ) [CondSingle]
                                                      ) [IfCond]
                                                      StmtPrint(
                                                        ExprNeg(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             6
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprNeg]
                                                      ) [StmtPrint]
                                                    ) [StmtIfBody]
                                                    StmtPrint(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [StmtPrint]
                                                  ) [StmtIfElse]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     ibool
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           false
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   i
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         0
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDoWhile(
                                              DoKeyword(
                                              ) [DoKeyword]
                                              StmtWhileBody(
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        IfKeyword(
                                                        ) [IfKeyword]
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondSingle(
                                                              CondTermSingle(
                                                                CondFactRelop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         i
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       2
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [CondFactRelop]
                                                              ) [CondTermSingle]
                                                            ) [CondSingle]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorBoolConst(
                                                                     true
                                                                    ) [FactorBoolConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                              ) [StmtWhileBody]
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    RelopLT(
                                                    ) [RelopLT]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         5
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [StmtDoWhile]
                                          ) [StatementMulti]
                                          StmtIf(
                                            IfKeyword(
                                            ) [IfKeyword]
                                            StmtIfBody(
                                              IfCond(
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactSingle(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             ibool
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [CondFactSingle]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [IfCond]
                                              StmtIfElse(
                                                IfKeyword(
                                                ) [IfKeyword]
                                                StmtIfBody(
                                                  IfCond(
                                                    CondSingle(
                                                      CondTermSingle(
                                                        CondFactRelop(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 i
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                          RelopEQ(
                                                          ) [RelopEQ]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               5
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [CondFactRelop]
                                                      ) [CondTermSingle]
                                                    ) [CondSingle]
                                                  ) [IfCond]
                                                  StmtPrint(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [StmtPrint]
                                                ) [StmtIfBody]
                                                StmtPrint(
                                                  ExprNeg(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprNeg]
                                                ) [StmtPrint]
                                              ) [StmtIfElse]
                                            ) [StmtIfBody]
                                          ) [StmtIf]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             niz
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNewArray(
                                                    Type(
                                                     int
                                                    ) [Type]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [FactorNewArray]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorArray(
                                       niz
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorArray]
                                      AssignmentExpr(
                                        ExprAddop(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 sum
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActParsSingle]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprAddop]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtIfElse(
                                  IfKeyword(
                                  ) [IfKeyword]
                                  StmtIfBody(
                                    IfCond(
                                      CondOr(
                                        CondSingle(
                                          CondTermSingle(
                                            CondFactSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCall(
                                                    DesignatorSimple(
                                                     verify
                                                    ) [DesignatorSimple]
                                                  ) [FuncCall]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [CondFactSingle]
                                          ) [CondTermSingle]
                                        ) [CondSingle]
                                        CondTermSingle(
                                          CondFactRelop(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            RelopEQ(
                                            ) [RelopEQ]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 4
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [CondFactRelop]
                                        ) [CondTermSingle]
                                      ) [CondOr]
                                    ) [IfCond]
                                    StmtPrint(
                                      ExprSingle(
                                        TermSingle(
                                          FuncCallParams(
                                            DesignatorSimple(
                                             ord
                                            ) [DesignatorSimple]
                                            ActParsSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   A
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ActParsSingle]
                                          ) [FuncCallParams]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [StmtPrint]
                                  ) [StmtIfBody]
                                  StmtPrint(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCallParams(
                                          DesignatorSimple(
                                           ord
                                          ) [DesignatorSimple]
                                          ActParsSingle(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ActParsSingle]
                                        ) [FuncCallParams]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [StmtPrint]
                                ) [StmtIfElse]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       eol
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 i
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       0
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      IfKeyword(
                                      ) [IfKeyword]
                                      StmtIfBody(
                                        IfCond(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactRelop(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [CondFactRelop]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               inkrement
                                              ) [DesignatorSimple]
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsSingle]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActParsMulti]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtIfElse(
                          IfKeyword(
                          ) [IfKeyword]
                          StmtIfBody(
                            IfCond(
                              CondSingle(
                                CondTermAnd(
                                  CondTermSingle(
                                    CondFactRelop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      RelopEQ(
                                      ) [RelopEQ]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [CondFactRelop]
                                  ) [CondTermSingle]
                                  CondFactSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCall(
                                          DesignatorSimple(
                                           verify
                                          ) [DesignatorSimple]
                                        ) [FuncCall]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [CondFactSingle]
                                ) [CondTermAnd]
                              ) [CondSingle]
                            ) [IfCond]
                            StmtPrint(
                              ExprNeg(
                                TermSingle(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprNeg]
                            ) [StmtPrint]
                          ) [StmtIfBody]
                          StmtPrint(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 4
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [StmtPrint]
                        ) [StmtIfElse]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorArray(
                     niz
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorArray]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtPrint(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FuncCallParams(
                                DesignatorSimple(
                                 sum
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActParsSingle]
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActParsMulti]
                              ) [FuncCallParams]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               niz
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     eol
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprSingle(
              TermSingle(
                FuncCallParams(
                  DesignatorSimple(
                   inkrement
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             niz
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ActParsSingle]
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ActParsMulti]
                ) [FuncCallParams]
              ) [TermSingle]
            ) [ExprSingle]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:55:52,030 - 

================SEMANTICKA OBRADA====================


INFO  22:55:52,033 - Deklarisana konstanta 'jedan' na liniji 5
INFO  22:55:52,033 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  22:55:52,034 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  22:55:52,034 - Deklarisan globalni niz 'niz' na liniji 10
INFO  22:55:52,034 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  22:55:52,034 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  22:55:52,034 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  22:55:52,034 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  22:55:52,034 - Deklarisana promenljiva 'pom' na liniji 20
INFO  22:55:52,034 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  22:55:52,034 - Pristup elementu niza 'niz' na liniji 50
INFO  22:55:52,034 - Pristup elementu niza 'niz' na liniji 51
INFO  22:55:52,034 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:52,034 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:52,034 - Pristup elementu niza 'niz' na liniji 52
INFO  22:55:52,034 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  22:55:52,034 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  22:55:52,034 - Pristup elementu niza 'niz' na liniji 53
INFO  22:55:52,034 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  22:55:52,034 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  22:55:52,034 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  22:55:52,034 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 71
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 72
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 73
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:52,035 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 76
INFO  22:55:52,035 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:55:52,035 - Pristup elementu niza 'niz' na liniji 79
INFO  22:55:52,035 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  22:55:52,035 - ===================================
INFO  22:55:52,035 - Generisanje MJ bajtkoda: C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.obj
INFO  22:55:52,037 - Parsiranje uspesno zavrseno!
INFO  22:56:23,054 - Kompajliranje ulaznog fajla C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.mj
INFO  22:56:23,081 - #2 program
INFO  22:56:23,081 - #19 test302
INFO  22:56:23,081 - #7 const
INFO  22:56:23,081 - #19 int
INFO  22:56:23,081 - #19 jedan
INFO  22:56:23,082 - #36 =
INFO  22:56:23,082 - #20 1
INFO  22:56:23,082 - #39 ;
INFO  22:56:23,082 - #19 int
INFO  22:56:23,082 - #19 i
INFO  22:56:23,082 - #39 ;
INFO  22:56:23,083 - #19 bool
INFO  22:56:23,083 - #19 ibool
INFO  22:56:23,083 - #39 ;
INFO  22:56:23,083 - #19 int
INFO  22:56:23,083 - #19 niz
INFO  22:56:23,083 - #44 [
INFO  22:56:23,083 - #45 ]
INFO  22:56:23,083 - #39 ;
INFO  22:56:23,083 - #46 {
INFO  22:56:23,083 - #19 int
INFO  22:56:23,083 - #19 sum
INFO  22:56:23,083 - #42 (
INFO  22:56:23,084 - #19 int
INFO  22:56:23,084 - #19 z
INFO  22:56:23,084 - #40 ,
INFO  22:56:23,084 - #19 int
INFO  22:56:23,084 - #19 d
INFO  22:56:23,084 - #43 )
INFO  22:56:23,084 - #46 {
INFO  22:56:23,084 - #15 return
INFO  22:56:23,084 - #19 z
INFO  22:56:23,084 - #23 +
INFO  22:56:23,084 - #19 d
INFO  22:56:23,085 - #39 ;
INFO  22:56:23,085 - #47 }
INFO  22:56:23,085 - #19 int
INFO  22:56:23,085 - #19 inkrement
INFO  22:56:23,085 - #42 (
INFO  22:56:23,085 - #19 int
INFO  22:56:23,085 - #19 a
INFO  22:56:23,085 - #40 ,
INFO  22:56:23,085 - #19 int
INFO  22:56:23,085 - #19 inc
INFO  22:56:23,086 - #43 )
INFO  22:56:23,086 - #19 int
INFO  22:56:23,086 - #19 pom
INFO  22:56:23,086 - #39 ;
INFO  22:56:23,086 - #46 {
INFO  22:56:23,086 - #8 if
INFO  22:56:23,086 - #42 (
INFO  22:56:23,086 - #19 inc
INFO  22:56:23,086 - #28 ==
INFO  22:56:23,086 - #19 jedan
INFO  22:56:23,087 - #43 )
INFO  22:56:23,087 - #19 pom
INFO  22:56:23,087 - #36 =
INFO  22:56:23,087 - #20 1
INFO  22:56:23,087 - #39 ;
INFO  22:56:23,087 - #6 else
INFO  22:56:23,087 - #8 if
INFO  22:56:23,087 - #42 (
INFO  22:56:23,088 - #19 inc
INFO  22:56:23,088 - #28 ==
INFO  22:56:23,088 - #20 2
INFO  22:56:23,088 - #43 )
INFO  22:56:23,088 - #19 pom
INFO  22:56:23,088 - #36 =
INFO  22:56:23,088 - #19 a
INFO  22:56:23,088 - #39 ;
INFO  22:56:23,088 - #15 return
INFO  22:56:23,088 - #19 sum
INFO  22:56:23,088 - #42 (
INFO  22:56:23,088 - #19 a
INFO  22:56:23,088 - #40 ,
INFO  22:56:23,088 - #19 pom
INFO  22:56:23,088 - #43 )
INFO  22:56:23,088 - #39 ;
INFO  22:56:23,088 - #47 }
INFO  22:56:23,089 - #19 bool
INFO  22:56:23,089 - #19 verify
INFO  22:56:23,089 - #42 (
INFO  22:56:23,089 - #43 )
INFO  22:56:23,089 - #46 {
INFO  22:56:23,089 - #13 print
INFO  22:56:23,089 - #42 (
INFO  22:56:23,089 - #21 v
INFO  22:56:23,089 - #43 )
INFO  22:56:23,089 - #39 ;
INFO  22:56:23,089 - #15 return
INFO  22:56:23,089 - #22 false
INFO  22:56:23,089 - #39 ;
INFO  22:56:23,089 - #47 }
INFO  22:56:23,089 - #16 void
INFO  22:56:23,089 - #19 main
INFO  22:56:23,090 - #42 (
INFO  22:56:23,090 - #43 )
INFO  22:56:23,090 - #46 {
INFO  22:56:23,090 - #8 if
INFO  22:56:23,090 - #42 (
INFO  22:56:23,090 - #20 1
INFO  22:56:23,090 - #29 !=
INFO  22:56:23,090 - #20 1
INFO  22:56:23,090 - #43 )
INFO  22:56:23,090 - #13 print
INFO  22:56:23,090 - #42 (
INFO  22:56:23,090 - #24 -
INFO  22:56:23,090 - #20 6
INFO  22:56:23,090 - #43 )
INFO  22:56:23,090 - #39 ;
INFO  22:56:23,090 - #6 else
INFO  22:56:23,091 - #13 print
INFO  22:56:23,091 - #42 (
INFO  22:56:23,091 - #20 0
INFO  22:56:23,091 - #43 )
INFO  22:56:23,091 - #39 ;
INFO  22:56:23,091 - #19 ibool
INFO  22:56:23,091 - #36 =
INFO  22:56:23,091 - #22 false
INFO  22:56:23,091 - #39 ;
INFO  22:56:23,091 - #19 i
INFO  22:56:23,091 - #36 =
INFO  22:56:23,091 - #20 0
INFO  22:56:23,091 - #39 ;
INFO  22:56:23,091 - #10 do
INFO  22:56:23,091 - #46 {
INFO  22:56:23,092 - #8 if
INFO  22:56:23,092 - #42 (
INFO  22:56:23,092 - #19 i
INFO  22:56:23,092 - #28 ==
INFO  22:56:23,092 - #20 2
INFO  22:56:23,092 - #43 )
INFO  22:56:23,092 - #19 ibool
INFO  22:56:23,092 - #36 =
INFO  22:56:23,092 - #22 true
INFO  22:56:23,092 - #39 ;
INFO  22:56:23,092 - #19 i
INFO  22:56:23,092 - #37 ++
INFO  22:56:23,092 - #39 ;
INFO  22:56:23,092 - #47 }
INFO  22:56:23,092 - #11 while
INFO  22:56:23,092 - #42 (
INFO  22:56:23,092 - #19 i
INFO  22:56:23,092 - #32 <
INFO  22:56:23,092 - #20 5
INFO  22:56:23,093 - #43 )
INFO  22:56:23,093 - #39 ;
INFO  22:56:23,093 - #8 if
INFO  22:56:23,093 - #42 (
INFO  22:56:23,093 - #19 ibool
INFO  22:56:23,093 - #43 )
INFO  22:56:23,093 - #8 if
INFO  22:56:23,093 - #42 (
INFO  22:56:23,093 - #19 i
INFO  22:56:23,093 - #28 ==
INFO  22:56:23,093 - #20 5
INFO  22:56:23,093 - #43 )
INFO  22:56:23,093 - #13 print
INFO  22:56:23,093 - #42 (
INFO  22:56:23,093 - #20 1
INFO  22:56:23,093 - #43 )
INFO  22:56:23,093 - #39 ;
INFO  22:56:23,093 - #6 else
INFO  22:56:23,093 - #13 print
INFO  22:56:23,093 - #42 (
INFO  22:56:23,093 - #24 -
INFO  22:56:23,093 - #20 1
INFO  22:56:23,093 - #43 )
INFO  22:56:23,094 - #39 ;
INFO  22:56:23,094 - #19 niz
INFO  22:56:23,094 - #36 =
INFO  22:56:23,094 - #12 new
INFO  22:56:23,094 - #19 int
INFO  22:56:23,094 - #44 [
INFO  22:56:23,094 - #20 3
INFO  22:56:23,094 - #45 ]
INFO  22:56:23,094 - #39 ;
INFO  22:56:23,094 - #19 niz
INFO  22:56:23,094 - #44 [
INFO  22:56:23,094 - #20 0
INFO  22:56:23,094 - #45 ]
INFO  22:56:23,094 - #36 =
INFO  22:56:23,094 - #20 1
INFO  22:56:23,094 - #39 ;
INFO  22:56:23,094 - #19 niz
INFO  22:56:23,094 - #44 [
INFO  22:56:23,094 - #20 1
INFO  22:56:23,094 - #45 ]
INFO  22:56:23,094 - #36 =
INFO  22:56:23,094 - #20 2
INFO  22:56:23,094 - #39 ;
INFO  22:56:23,094 - #19 niz
INFO  22:56:23,094 - #44 [
INFO  22:56:23,094 - #20 2
INFO  22:56:23,094 - #45 ]
INFO  22:56:23,094 - #36 =
INFO  22:56:23,094 - #19 sum
INFO  22:56:23,094 - #42 (
INFO  22:56:23,094 - #19 niz
INFO  22:56:23,094 - #44 [
INFO  22:56:23,094 - #20 1
INFO  22:56:23,094 - #45 ]
INFO  22:56:23,094 - #40 ,
INFO  22:56:23,094 - #19 niz
INFO  22:56:23,094 - #44 [
INFO  22:56:23,094 - #20 0
INFO  22:56:23,094 - #45 ]
INFO  22:56:23,094 - #43 )
INFO  22:56:23,094 - #23 +
INFO  22:56:23,094 - #20 1
INFO  22:56:23,095 - #39 ;
INFO  22:56:23,095 - #8 if
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #19 verify
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #35 ||
INFO  22:56:23,095 - #19 niz
INFO  22:56:23,095 - #44 [
INFO  22:56:23,095 - #20 2
INFO  22:56:23,095 - #45 ]
INFO  22:56:23,095 - #28 ==
INFO  22:56:23,095 - #20 4
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #13 print
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #19 ord
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #21 A
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #39 ;
INFO  22:56:23,095 - #6 else
INFO  22:56:23,095 - #13 print
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #19 ord
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #21 a
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #39 ;
INFO  22:56:23,095 - #13 print
INFO  22:56:23,095 - #42 (
INFO  22:56:23,095 - #19 eol
INFO  22:56:23,095 - #43 )
INFO  22:56:23,095 - #39 ;
INFO  22:56:23,095 - #19 i
INFO  22:56:23,095 - #36 =
INFO  22:56:23,095 - #20 0
INFO  22:56:23,095 - #39 ;
INFO  22:56:23,095 - #10 do
INFO  22:56:23,095 - #46 {
INFO  22:56:23,095 - #8 if
INFO  22:56:23,095 - #42 (
INFO  22:56:23,096 - #19 i
INFO  22:56:23,096 - #28 ==
INFO  22:56:23,096 - #20 3
INFO  22:56:23,096 - #43 )
INFO  22:56:23,096 - #46 {
INFO  22:56:23,096 - #19 i
INFO  22:56:23,096 - #37 ++
INFO  22:56:23,096 - #39 ;
INFO  22:56:23,096 - #17 continue
INFO  22:56:23,096 - #39 ;
INFO  22:56:23,096 - #47 }
INFO  22:56:23,096 - #8 if
INFO  22:56:23,096 - #42 (
INFO  22:56:23,096 - #19 i
INFO  22:56:23,096 - #28 ==
INFO  22:56:23,096 - #20 4
INFO  22:56:23,096 - #43 )
INFO  22:56:23,096 - #3 break
INFO  22:56:23,096 - #39 ;
INFO  22:56:23,096 - #19 i
INFO  22:56:23,096 - #36 =
INFO  22:56:23,097 - #19 inkrement
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #19 i
INFO  22:56:23,097 - #40 ,
INFO  22:56:23,097 - #20 1
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #39 ;
INFO  22:56:23,097 - #47 }
INFO  22:56:23,097 - #11 while
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #19 i
INFO  22:56:23,097 - #32 <
INFO  22:56:23,097 - #20 10
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #39 ;
INFO  22:56:23,097 - #8 if
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #19 i
INFO  22:56:23,097 - #28 ==
INFO  22:56:23,097 - #20 3
INFO  22:56:23,097 - #34 &&
INFO  22:56:23,097 - #19 verify
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #13 print
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #24 -
INFO  22:56:23,097 - #20 4
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #39 ;
INFO  22:56:23,097 - #6 else
INFO  22:56:23,097 - #13 print
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #20 4
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #39 ;
INFO  22:56:23,097 - #14 read
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #19 niz
INFO  22:56:23,097 - #44 [
INFO  22:56:23,097 - #20 0
INFO  22:56:23,097 - #45 ]
INFO  22:56:23,097 - #43 )
INFO  22:56:23,097 - #39 ;
INFO  22:56:23,097 - #14 read
INFO  22:56:23,097 - #42 (
INFO  22:56:23,097 - #19 niz
INFO  22:56:23,097 - #44 [
INFO  22:56:23,098 - #20 1
INFO  22:56:23,098 - #45 ]
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #39 ;
INFO  22:56:23,098 - #14 read
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 niz
INFO  22:56:23,098 - #44 [
INFO  22:56:23,098 - #20 2
INFO  22:56:23,098 - #45 ]
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #39 ;
INFO  22:56:23,098 - #13 print
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 eol
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #39 ;
INFO  22:56:23,098 - #13 print
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 sum
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 sum
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 niz
INFO  22:56:23,098 - #44 [
INFO  22:56:23,098 - #20 0
INFO  22:56:23,098 - #45 ]
INFO  22:56:23,098 - #40 ,
INFO  22:56:23,098 - #19 niz
INFO  22:56:23,098 - #44 [
INFO  22:56:23,098 - #20 1
INFO  22:56:23,098 - #45 ]
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #40 ,
INFO  22:56:23,098 - #19 niz
INFO  22:56:23,098 - #44 [
INFO  22:56:23,098 - #20 2
INFO  22:56:23,098 - #45 ]
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #39 ;
INFO  22:56:23,098 - #13 print
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 eol
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #39 ;
INFO  22:56:23,098 - #13 print
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 inkrement
INFO  22:56:23,098 - #42 (
INFO  22:56:23,098 - #19 niz
INFO  22:56:23,098 - #44 [
INFO  22:56:23,098 - #20 2
INFO  22:56:23,098 - #45 ]
INFO  22:56:23,098 - #40 ,
INFO  22:56:23,098 - #20 2
INFO  22:56:23,098 - #43 )
INFO  22:56:23,098 - #43 )
INFO  22:56:23,099 - #39 ;
INFO  22:56:23,099 - #47 }
INFO  22:56:23,099 - #47 }
INFO  22:56:23,099 - 

================SINTAKSNO STABLO====================


INFO  22:56:23,101 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           z
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         d
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   inc
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   jedan
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 a
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               pom
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     v
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprSingle(
                TermSingle(
                  FactorBoolConst(
                   false
                  ) [FactorBoolConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtIfElse(
                                                    IfKeyword(
                                                    ) [IfKeyword]
                                                    StmtIfBody(
                                                      IfCond(
                                                        CondSingle(
                                                          CondTermSingle(
                                                            CondFactRelop(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                              RelopNE(
                                                              ) [RelopNE]
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [CondFactRelop]
                                                          ) [CondTermSingle]
                                                        ) [CondSingle]
                                                      ) [IfCond]
                                                      StmtPrint(
                                                        ExprNeg(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             6
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprNeg]
                                                      ) [StmtPrint]
                                                    ) [StmtIfBody]
                                                    StmtPrint(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [StmtPrint]
                                                  ) [StmtIfElse]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     ibool
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           false
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   i
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         0
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDoWhile(
                                              DoKeyword(
                                              ) [DoKeyword]
                                              StmtWhileBody(
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        IfKeyword(
                                                        ) [IfKeyword]
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondSingle(
                                                              CondTermSingle(
                                                                CondFactRelop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         i
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       2
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [CondFactRelop]
                                                              ) [CondTermSingle]
                                                            ) [CondSingle]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorBoolConst(
                                                                     true
                                                                    ) [FactorBoolConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                              ) [StmtWhileBody]
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    RelopLT(
                                                    ) [RelopLT]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         5
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [StmtDoWhile]
                                          ) [StatementMulti]
                                          StmtIf(
                                            IfKeyword(
                                            ) [IfKeyword]
                                            StmtIfBody(
                                              IfCond(
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactSingle(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             ibool
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [CondFactSingle]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [IfCond]
                                              StmtIfElse(
                                                IfKeyword(
                                                ) [IfKeyword]
                                                StmtIfBody(
                                                  IfCond(
                                                    CondSingle(
                                                      CondTermSingle(
                                                        CondFactRelop(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 i
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                          RelopEQ(
                                                          ) [RelopEQ]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               5
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [CondFactRelop]
                                                      ) [CondTermSingle]
                                                    ) [CondSingle]
                                                  ) [IfCond]
                                                  StmtPrint(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [StmtPrint]
                                                ) [StmtIfBody]
                                                StmtPrint(
                                                  ExprNeg(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprNeg]
                                                ) [StmtPrint]
                                              ) [StmtIfElse]
                                            ) [StmtIfBody]
                                          ) [StmtIf]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             niz
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNewArray(
                                                    Type(
                                                     int
                                                    ) [Type]
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [FactorNewArray]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorArray(
                                       niz
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [DesignatorArray]
                                      AssignmentExpr(
                                        ExprAddop(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 sum
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActParsSingle]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprAddop]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtIfElse(
                                  IfKeyword(
                                  ) [IfKeyword]
                                  StmtIfBody(
                                    IfCond(
                                      CondOr(
                                        CondSingle(
                                          CondTermSingle(
                                            CondFactSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCall(
                                                    DesignatorSimple(
                                                     verify
                                                    ) [DesignatorSimple]
                                                  ) [FuncCall]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [CondFactSingle]
                                          ) [CondTermSingle]
                                        ) [CondSingle]
                                        CondTermSingle(
                                          CondFactRelop(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            RelopEQ(
                                            ) [RelopEQ]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 4
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [CondFactRelop]
                                        ) [CondTermSingle]
                                      ) [CondOr]
                                    ) [IfCond]
                                    StmtPrint(
                                      ExprSingle(
                                        TermSingle(
                                          FuncCallParams(
                                            DesignatorSimple(
                                             ord
                                            ) [DesignatorSimple]
                                            ActParsSingle(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   A
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ActParsSingle]
                                          ) [FuncCallParams]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [StmtPrint]
                                  ) [StmtIfBody]
                                  StmtPrint(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCallParams(
                                          DesignatorSimple(
                                           ord
                                          ) [DesignatorSimple]
                                          ActParsSingle(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ActParsSingle]
                                        ) [FuncCallParams]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [StmtPrint]
                                ) [StmtIfElse]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       eol
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 i
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       0
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      IfKeyword(
                                      ) [IfKeyword]
                                      StmtIfBody(
                                        IfCond(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactRelop(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [CondFactRelop]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               inkrement
                                              ) [DesignatorSimple]
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActParsSingle]
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActParsMulti]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtIfElse(
                          IfKeyword(
                          ) [IfKeyword]
                          StmtIfBody(
                            IfCond(
                              CondSingle(
                                CondTermAnd(
                                  CondTermSingle(
                                    CondFactRelop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      RelopEQ(
                                      ) [RelopEQ]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [CondFactRelop]
                                  ) [CondTermSingle]
                                  CondFactSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FuncCall(
                                          DesignatorSimple(
                                           verify
                                          ) [DesignatorSimple]
                                        ) [FuncCall]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [CondFactSingle]
                                ) [CondTermAnd]
                              ) [CondSingle]
                            ) [IfCond]
                            StmtPrint(
                              ExprNeg(
                                TermSingle(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprNeg]
                            ) [StmtPrint]
                          ) [StmtIfBody]
                          StmtPrint(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 4
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [StmtPrint]
                        ) [StmtIfElse]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorArray(
                     niz
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorArray]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtPrint(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       sum
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprSingle(
                            TermSingle(
                              FuncCallParams(
                                DesignatorSimple(
                                 sum
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorArray(
                                           niz
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 0
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [DesignatorArray]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActParsSingle]
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorArray(
                                         niz
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [DesignatorArray]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActParsMulti]
                              ) [FuncCallParams]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ActParsSingle]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               niz
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     eol
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprSingle(
              TermSingle(
                FuncCallParams(
                  DesignatorSimple(
                   inkrement
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             niz
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ActParsSingle]
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ActParsMulti]
                ) [FuncCallParams]
              ) [TermSingle]
            ) [ExprSingle]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:56:23,105 - 

================SEMANTICKA OBRADA====================


INFO  22:56:23,109 - Deklarisana konstanta 'jedan' na liniji 5
INFO  22:56:23,109 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  22:56:23,109 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  22:56:23,109 - Deklarisan globalni niz 'niz' na liniji 10
INFO  22:56:23,109 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  22:56:23,109 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  22:56:23,109 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  22:56:23,109 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  22:56:23,109 - Deklarisana promenljiva 'pom' na liniji 20
INFO  22:56:23,110 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 50
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 51
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 52
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 52
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 52
INFO  22:56:23,110 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  22:56:23,110 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 53
INFO  22:56:23,110 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  22:56:23,110 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  22:56:23,110 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  22:56:23,110 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 71
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 72
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 73
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 76
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 76
INFO  22:56:23,110 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 76
INFO  22:56:23,110 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  22:56:23,110 - Pristup elementu niza 'niz' na liniji 79
INFO  22:56:23,110 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  22:56:23,110 - ===================================
INFO  22:56:23,111 - Generisanje MJ bajtkoda: C:\Users\User\src\MicroJavaCompiler\MJCompiler\test\program.obj
INFO  22:56:23,113 - Parsiranje uspesno zavrseno!
