INFO  10:36:17,916 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:17,975 - #2 program
INFO  10:36:17,976 - #20 test302
INFO  10:36:17,976 - #20 int
INFO  10:36:17,977 - #20 niz
INFO  10:36:17,977 - #45 [
INFO  10:36:17,978 - #46 ]
INFO  10:36:17,978 - #40 ;
INFO  10:36:17,978 - #47 {
INFO  10:36:17,979 - #16 void
INFO  10:36:17,979 - #20 main
INFO  10:36:17,979 - #43 (
INFO  10:36:17,979 - #44 )
INFO  10:36:17,979 - #47 {
INFO  10:36:17,979 - #20 niz
INFO  10:36:17,979 - #37 =
INFO  10:36:17,979 - #12 new
INFO  10:36:17,980 - #20 int
INFO  10:36:17,980 - #45 [
INFO  10:36:17,980 - #21 3
INFO  10:36:17,980 - #46 ]
INFO  10:36:17,982 - #40 ;
INFO  10:36:17,983 - #13 print
INFO  10:36:17,983 - #43 (
INFO  10:36:17,984 - #20 len
INFO  10:36:17,984 - #43 (
INFO  10:36:17,984 - #20 niz
INFO  10:36:17,984 - #44 )
INFO  10:36:17,984 - #44 )
INFO  10:36:17,985 - #40 ;
INFO  10:36:17,985 - #48 }
INFO  10:36:17,985 - #48 }
INFO  10:36:17,986 - 

================SINTAKSNO STABLO====================


INFO  10:36:17,986 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FuncCallParams(
                    DesignatorSimple(
                     len
                    ) [DesignatorSimple]
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                  ) [FuncCallParams]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:36:18,011 - 

================SEMANTICKA OBRADA====================


INFO  10:36:18,024 - Deklarisan globalni niz 'niz' na liniji 3
INFO  10:36:18,025 - Pronadjen poziv funkcije 'len' na liniji 10
INFO  10:36:18,025 - ===================================
INFO  10:36:18,025 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:18,032 - Parsiranje uspesno zavrseno!
INFO  10:37:29,050 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:37:29,128 - #2 program
INFO  10:37:29,128 - #20 test302
INFO  10:37:29,128 - #20 int
INFO  10:37:29,129 - #20 niz
INFO  10:37:29,130 - #41 ,
INFO  10:37:29,130 - #20 niz
INFO  10:37:29,130 - #40 ;
INFO  10:37:29,130 - #47 {
INFO  10:37:29,131 - #16 void
INFO  10:37:29,131 - #20 main
INFO  10:37:29,131 - #43 (
INFO  10:37:29,131 - #44 )
INFO  10:37:29,131 - #47 {
INFO  10:37:29,131 - #20 niz
INFO  10:37:29,131 - #37 =
INFO  10:37:29,132 - #12 new
INFO  10:37:29,132 - #20 int
INFO  10:37:29,132 - #45 [
INFO  10:37:29,132 - #21 3
INFO  10:37:29,132 - #46 ]
INFO  10:37:29,133 - #40 ;
INFO  10:37:29,134 - #48 }
INFO  10:37:29,134 - #48 }
INFO  10:37:29,135 - 

================SINTAKSNO STABLO====================


INFO  10:37:29,136 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               niz
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarNormal(
             niz
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               3
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:37:29,136 - 

================SEMANTICKA OBRADA====================


ERROR 10:37:29,149 - Semanticka greska - 'niz' je vec deklarisano na liniji 3
INFO  10:37:29,149 - Deklarisana globalna promenljiva 'niz' na liniji 3
ERROR 10:37:29,150 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
INFO  10:37:29,152 - ===================================
ERROR 10:37:29,152 - Parsiranje nije uspesno zavrseno!
INFO  10:38:16,798 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:38:16,847 - #2 program
INFO  10:38:16,847 - #20 test302
INFO  10:38:16,847 - #20 int
INFO  10:38:16,848 - #20 niz
INFO  10:38:16,848 - #41 ,
INFO  10:38:16,849 - #20 niz
INFO  10:38:16,849 - #40 ;
INFO  10:38:16,849 - #47 {
INFO  10:38:16,849 - #16 void
INFO  10:38:16,849 - #20 main
INFO  10:38:16,849 - #43 (
INFO  10:38:16,850 - #44 )
INFO  10:38:16,850 - #47 {
INFO  10:38:16,850 - #20 niz
INFO  10:38:16,850 - #37 =
INFO  10:38:16,850 - #12 new
INFO  10:38:16,850 - #20 int
INFO  10:38:16,850 - #45 [
INFO  10:38:16,851 - #21 3
INFO  10:38:16,851 - #46 ]
INFO  10:38:16,852 - #40 ;
INFO  10:38:16,852 - #48 }
INFO  10:38:16,853 - #48 }
INFO  10:38:16,854 - 

================SINTAKSNO STABLO====================


INFO  10:38:16,854 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               niz
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarNormal(
             niz
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               3
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:38:16,855 - 

================SEMANTICKA OBRADA====================


ERROR 10:38:16,866 - Semanticka greska - 'niz' je vec deklarisano na liniji 3
INFO  10:38:16,866 - Deklarisana globalna promenljiva 'niz' na liniji 3
ERROR 10:38:16,866 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
INFO  10:38:16,868 - ===================================
ERROR 10:38:16,868 - Parsiranje nije uspesno zavrseno!
INFO  10:38:53,647 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:38:53,695 - #2 program
INFO  10:38:53,695 - #20 test302
INFO  10:38:53,695 - #20 int
INFO  10:38:53,696 - #20 niz
INFO  10:38:53,696 - #41 ,
INFO  10:38:53,697 - #20 niz
INFO  10:38:53,697 - #40 ;
INFO  10:38:53,697 - #47 {
INFO  10:38:53,697 - #16 void
INFO  10:38:53,697 - #20 main
INFO  10:38:53,697 - #43 (
INFO  10:38:53,698 - #44 )
INFO  10:38:53,698 - #47 {
INFO  10:38:53,698 - #20 niz
INFO  10:38:53,698 - #37 =
INFO  10:38:53,698 - #12 new
INFO  10:38:53,698 - #20 int
INFO  10:38:53,698 - #45 [
INFO  10:38:53,700 - #21 3
INFO  10:38:53,700 - #46 ]
INFO  10:38:53,701 - #40 ;
INFO  10:38:53,701 - #48 }
INFO  10:38:53,701 - #48 }
INFO  10:38:53,702 - 

================SINTAKSNO STABLO====================


INFO  10:38:53,703 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               niz
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarNormal(
             niz
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               3
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:38:53,703 - 

================SEMANTICKA OBRADA====================


ERROR 10:38:53,712 - Semanticka greska - 'niz' je vec deklarisano na liniji 3
INFO  10:38:53,713 - Deklarisana globalna promenljiva 'niz' na liniji 3
ERROR 10:38:53,714 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
INFO  10:38:53,715 - ===================================
ERROR 10:38:53,716 - Parsiranje nije uspesno zavrseno!
INFO  10:39:04,817 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:39:04,876 - #2 program
INFO  10:39:04,876 - #20 test302
INFO  10:39:04,876 - #20 int
INFO  10:39:04,877 - #20 niz
INFO  10:39:04,879 - #41 ,
INFO  10:39:04,880 - #20 niz
INFO  10:39:04,880 - #40 ;
INFO  10:39:04,880 - #47 {
INFO  10:39:04,881 - #16 void
INFO  10:39:04,881 - #20 main
INFO  10:39:04,881 - #43 (
INFO  10:39:04,881 - #44 )
INFO  10:39:04,881 - #47 {
INFO  10:39:04,881 - #20 niz
INFO  10:39:04,881 - #37 =
INFO  10:39:04,882 - #12 new
INFO  10:39:04,882 - #20 int
INFO  10:39:04,882 - #45 [
INFO  10:39:04,882 - #21 3
INFO  10:39:04,882 - #46 ]
INFO  10:39:04,883 - #40 ;
INFO  10:39:04,883 - #48 }
INFO  10:39:04,883 - #48 }
INFO  10:39:04,885 - 

================SINTAKSNO STABLO====================


INFO  10:39:04,885 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               niz
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarNormal(
             niz
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               3
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:39:04,885 - 

================SEMANTICKA OBRADA====================


ERROR 10:39:04,896 - Semanticka greska - 'niz' je vec deklarisano na liniji 3
INFO  10:39:04,897 - Deklarisana globalna promenljiva 'niz' na liniji 3
ERROR 10:39:04,897 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
INFO  10:39:04,898 - ===================================
ERROR 10:39:04,899 - Parsiranje nije uspesno zavrseno!
INFO  10:40:00,359 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:40:00,409 - #2 program
INFO  10:40:00,409 - #20 test302
INFO  10:40:00,409 - #7 const
INFO  10:40:00,410 - #20 int
INFO  10:40:00,410 - #20 jedan
INFO  10:40:00,410 - #37 =
INFO  10:40:00,410 - #21 1
INFO  10:40:00,410 - #40 ;
INFO  10:40:00,411 - #20 int
INFO  10:40:00,411 - #20 i
INFO  10:40:00,411 - #40 ;
INFO  10:40:00,412 - #20 bool
INFO  10:40:00,412 - #20 ibool
INFO  10:40:00,412 - #40 ;
INFO  10:40:00,412 - #20 int
INFO  10:40:00,412 - #20 niz
INFO  10:40:00,412 - #45 [
INFO  10:40:00,412 - #46 ]
INFO  10:40:00,412 - #40 ;
INFO  10:40:00,413 - #47 {
INFO  10:40:00,413 - #20 int
INFO  10:40:00,413 - #20 sum
INFO  10:40:00,413 - #43 (
INFO  10:40:00,413 - #20 int
INFO  10:40:00,413 - #20 z
INFO  10:40:00,413 - #41 ,
INFO  10:40:00,413 - #20 int
INFO  10:40:00,414 - #20 d
INFO  10:40:00,414 - #44 )
INFO  10:40:00,414 - #47 {
INFO  10:40:00,414 - #15 return
INFO  10:40:00,414 - #20 z
INFO  10:40:00,414 - #24 +
INFO  10:40:00,414 - #20 d
INFO  10:40:00,415 - #40 ;
INFO  10:40:00,416 - #48 }
INFO  10:40:00,416 - #20 int
INFO  10:40:00,416 - #20 inkrement
INFO  10:40:00,416 - #43 (
INFO  10:40:00,416 - #20 int
INFO  10:40:00,416 - #20 a
INFO  10:40:00,416 - #41 ,
INFO  10:40:00,416 - #20 int
INFO  10:40:00,416 - #20 inc
INFO  10:40:00,416 - #44 )
INFO  10:40:00,416 - #20 int
INFO  10:40:00,417 - #20 pom
INFO  10:40:00,417 - #40 ;
INFO  10:40:00,417 - #47 {
INFO  10:40:00,417 - #8 if
INFO  10:40:00,417 - #43 (
INFO  10:40:00,418 - #20 inc
INFO  10:40:00,418 - #29 ==
INFO  10:40:00,418 - #20 jedan
INFO  10:40:00,419 - #44 )
INFO  10:40:00,419 - #20 pom
INFO  10:40:00,419 - #37 =
INFO  10:40:00,419 - #21 1
INFO  10:40:00,419 - #40 ;
INFO  10:40:00,419 - #6 else
INFO  10:40:00,420 - #8 if
INFO  10:40:00,420 - #43 (
INFO  10:40:00,421 - #20 inc
INFO  10:40:00,421 - #29 ==
INFO  10:40:00,421 - #21 2
INFO  10:40:00,421 - #44 )
INFO  10:40:00,421 - #20 pom
INFO  10:40:00,421 - #37 =
INFO  10:40:00,421 - #20 a
INFO  10:40:00,422 - #40 ;
INFO  10:40:00,422 - #15 return
INFO  10:40:00,423 - #20 sum
INFO  10:40:00,423 - #43 (
INFO  10:40:00,423 - #20 a
INFO  10:40:00,423 - #41 ,
INFO  10:40:00,423 - #20 pom
INFO  10:40:00,423 - #44 )
INFO  10:40:00,423 - #40 ;
INFO  10:40:00,424 - #48 }
INFO  10:40:00,424 - #20 bool
INFO  10:40:00,424 - #20 verify
INFO  10:40:00,424 - #43 (
INFO  10:40:00,424 - #44 )
INFO  10:40:00,424 - #47 {
INFO  10:40:00,424 - #13 print
INFO  10:40:00,425 - #43 (
INFO  10:40:00,425 - #22 v
INFO  10:40:00,425 - #44 )
INFO  10:40:00,426 - #40 ;
INFO  10:40:00,426 - #15 return
INFO  10:40:00,426 - #23 false
INFO  10:40:00,426 - #40 ;
INFO  10:40:00,426 - #48 }
INFO  10:40:00,426 - #16 void
INFO  10:40:00,427 - #20 main
INFO  10:40:00,428 - #43 (
INFO  10:40:00,428 - #44 )
INFO  10:40:00,429 - #47 {
INFO  10:40:00,429 - #8 if
INFO  10:40:00,430 - #43 (
INFO  10:40:00,430 - #21 1
INFO  10:40:00,431 - #30 !=
INFO  10:40:00,431 - #21 1
INFO  10:40:00,431 - #44 )
INFO  10:40:00,431 - #13 print
INFO  10:40:00,431 - #43 (
INFO  10:40:00,432 - #25 -
INFO  10:40:00,432 - #21 6
INFO  10:40:00,432 - #44 )
INFO  10:40:00,432 - #40 ;
INFO  10:40:00,432 - #6 else
INFO  10:40:00,432 - #13 print
INFO  10:40:00,432 - #43 (
INFO  10:40:00,432 - #21 0
INFO  10:40:00,432 - #44 )
INFO  10:40:00,433 - #40 ;
INFO  10:40:00,433 - #20 ibool
INFO  10:40:00,433 - #37 =
INFO  10:40:00,433 - #23 false
INFO  10:40:00,433 - #40 ;
INFO  10:40:00,433 - #20 i
INFO  10:40:00,433 - #37 =
INFO  10:40:00,433 - #21 0
INFO  10:40:00,433 - #40 ;
INFO  10:40:00,433 - #10 do
INFO  10:40:00,433 - #47 {
INFO  10:40:00,434 - #8 if
INFO  10:40:00,434 - #43 (
INFO  10:40:00,434 - #20 i
INFO  10:40:00,434 - #29 ==
INFO  10:40:00,435 - #21 2
INFO  10:40:00,435 - #44 )
INFO  10:40:00,435 - #20 ibool
INFO  10:40:00,435 - #37 =
INFO  10:40:00,435 - #23 true
INFO  10:40:00,435 - #40 ;
INFO  10:40:00,435 - #20 i
INFO  10:40:00,435 - #38 ++
INFO  10:40:00,435 - #40 ;
INFO  10:40:00,435 - #48 }
INFO  10:40:00,435 - #11 while
INFO  10:40:00,435 - #43 (
INFO  10:40:00,435 - #20 i
INFO  10:40:00,435 - #33 <
INFO  10:40:00,436 - #21 5
INFO  10:40:00,436 - #44 )
INFO  10:40:00,436 - #40 ;
INFO  10:40:00,436 - #8 if
INFO  10:40:00,440 - #43 (
INFO  10:40:00,440 - #20 ibool
INFO  10:40:00,440 - #44 )
INFO  10:40:00,441 - #8 if
INFO  10:40:00,441 - #43 (
INFO  10:40:00,441 - #20 i
INFO  10:40:00,441 - #29 ==
INFO  10:40:00,441 - #21 5
INFO  10:40:00,441 - #44 )
INFO  10:40:00,441 - #13 print
INFO  10:40:00,441 - #43 (
INFO  10:40:00,441 - #21 1
INFO  10:40:00,441 - #44 )
INFO  10:40:00,441 - #40 ;
INFO  10:40:00,441 - #6 else
INFO  10:40:00,441 - #13 print
INFO  10:40:00,441 - #43 (
INFO  10:40:00,441 - #25 -
INFO  10:40:00,442 - #21 1
INFO  10:40:00,442 - #44 )
INFO  10:40:00,442 - #40 ;
INFO  10:40:00,442 - #20 niz
INFO  10:40:00,442 - #37 =
INFO  10:40:00,442 - #12 new
INFO  10:40:00,442 - #20 int
INFO  10:40:00,442 - #45 [
INFO  10:40:00,442 - #21 3
INFO  10:40:00,442 - #46 ]
INFO  10:40:00,442 - #40 ;
INFO  10:40:00,442 - #20 niz
INFO  10:40:00,442 - #45 [
INFO  10:40:00,442 - #21 0
INFO  10:40:00,442 - #46 ]
INFO  10:40:00,442 - #37 =
INFO  10:40:00,443 - #21 1
INFO  10:40:00,443 - #40 ;
INFO  10:40:00,443 - #20 niz
INFO  10:40:00,443 - #45 [
INFO  10:40:00,443 - #21 1
INFO  10:40:00,443 - #46 ]
INFO  10:40:00,446 - #37 =
INFO  10:40:00,446 - #21 2
INFO  10:40:00,446 - #40 ;
INFO  10:40:00,447 - #20 niz
INFO  10:40:00,447 - #45 [
INFO  10:40:00,447 - #21 2
INFO  10:40:00,447 - #46 ]
INFO  10:40:00,447 - #37 =
INFO  10:40:00,447 - #20 sum
INFO  10:40:00,447 - #43 (
INFO  10:40:00,447 - #20 niz
INFO  10:40:00,447 - #45 [
INFO  10:40:00,448 - #21 1
INFO  10:40:00,448 - #46 ]
INFO  10:40:00,448 - #41 ,
INFO  10:40:00,448 - #20 niz
INFO  10:40:00,448 - #45 [
INFO  10:40:00,448 - #21 0
INFO  10:40:00,448 - #46 ]
INFO  10:40:00,448 - #44 )
INFO  10:40:00,448 - #24 +
INFO  10:40:00,448 - #21 1
INFO  10:40:00,448 - #40 ;
INFO  10:40:00,448 - #8 if
INFO  10:40:00,448 - #43 (
INFO  10:40:00,448 - #20 verify
INFO  10:40:00,448 - #43 (
INFO  10:40:00,448 - #44 )
INFO  10:40:00,448 - #36 ||
INFO  10:40:00,449 - #20 niz
INFO  10:40:00,449 - #45 [
INFO  10:40:00,449 - #21 2
INFO  10:40:00,449 - #46 ]
INFO  10:40:00,449 - #29 ==
INFO  10:40:00,449 - #21 4
INFO  10:40:00,449 - #44 )
INFO  10:40:00,449 - #13 print
INFO  10:40:00,449 - #43 (
INFO  10:40:00,449 - #20 ord
INFO  10:40:00,449 - #43 (
INFO  10:40:00,449 - #22 A
INFO  10:40:00,449 - #44 )
INFO  10:40:00,449 - #44 )
INFO  10:40:00,449 - #40 ;
INFO  10:40:00,449 - #6 else
INFO  10:40:00,450 - #13 print
INFO  10:40:00,450 - #43 (
INFO  10:40:00,450 - #20 ord
INFO  10:40:00,450 - #43 (
INFO  10:40:00,450 - #22 a
INFO  10:40:00,450 - #44 )
INFO  10:40:00,450 - #44 )
INFO  10:40:00,450 - #40 ;
INFO  10:40:00,450 - #13 print
INFO  10:40:00,450 - #43 (
INFO  10:40:00,450 - #20 eol
INFO  10:40:00,450 - #44 )
INFO  10:40:00,450 - #40 ;
INFO  10:40:00,450 - #20 i
INFO  10:40:00,450 - #37 =
INFO  10:40:00,450 - #21 0
INFO  10:40:00,450 - #40 ;
INFO  10:40:00,450 - #10 do
INFO  10:40:00,450 - #47 {
INFO  10:40:00,450 - #8 if
INFO  10:40:00,450 - #43 (
INFO  10:40:00,451 - #20 i
INFO  10:40:00,451 - #29 ==
INFO  10:40:00,451 - #21 3
INFO  10:40:00,451 - #44 )
INFO  10:40:00,451 - #47 {
INFO  10:40:00,451 - #20 i
INFO  10:40:00,451 - #38 ++
INFO  10:40:00,451 - #40 ;
INFO  10:40:00,451 - #18 continue
INFO  10:40:00,451 - #40 ;
INFO  10:40:00,451 - #48 }
INFO  10:40:00,452 - #8 if
INFO  10:40:00,452 - #43 (
INFO  10:40:00,452 - #20 i
INFO  10:40:00,452 - #29 ==
INFO  10:40:00,452 - #21 4
INFO  10:40:00,452 - #44 )
INFO  10:40:00,452 - #3 break
INFO  10:40:00,452 - #40 ;
INFO  10:40:00,452 - #20 i
INFO  10:40:00,456 - #37 =
INFO  10:40:00,456 - #20 inkrement
INFO  10:40:00,456 - #43 (
INFO  10:40:00,456 - #20 i
INFO  10:40:00,456 - #41 ,
INFO  10:40:00,456 - #21 1
INFO  10:40:00,456 - #44 )
INFO  10:40:00,456 - #40 ;
INFO  10:40:00,456 - #48 }
INFO  10:40:00,456 - #11 while
INFO  10:40:00,456 - #43 (
INFO  10:40:00,456 - #20 i
INFO  10:40:00,456 - #33 <
INFO  10:40:00,456 - #21 10
INFO  10:40:00,457 - #44 )
INFO  10:40:00,457 - #40 ;
INFO  10:40:00,457 - #8 if
INFO  10:40:00,457 - #43 (
INFO  10:40:00,457 - #20 i
INFO  10:40:00,457 - #29 ==
INFO  10:40:00,457 - #21 3
INFO  10:40:00,457 - #35 &&
INFO  10:40:00,457 - #20 verify
INFO  10:40:00,457 - #43 (
INFO  10:40:00,457 - #44 )
INFO  10:40:00,457 - #44 )
INFO  10:40:00,457 - #13 print
INFO  10:40:00,457 - #43 (
INFO  10:40:00,458 - #25 -
INFO  10:40:00,458 - #21 4
INFO  10:40:00,458 - #44 )
INFO  10:40:00,458 - #40 ;
INFO  10:40:00,458 - #6 else
INFO  10:40:00,458 - #13 print
INFO  10:40:00,458 - #43 (
INFO  10:40:00,458 - #21 4
INFO  10:40:00,458 - #44 )
INFO  10:40:00,458 - #40 ;
INFO  10:40:00,458 - #14 read
INFO  10:40:00,458 - #43 (
INFO  10:40:00,458 - #20 niz
INFO  10:40:00,458 - #45 [
INFO  10:40:00,458 - #21 0
INFO  10:40:00,458 - #46 ]
INFO  10:40:00,458 - #44 )
INFO  10:40:00,459 - #40 ;
INFO  10:40:00,459 - #14 read
INFO  10:40:00,459 - #43 (
INFO  10:40:00,459 - #20 niz
INFO  10:40:00,459 - #45 [
INFO  10:40:00,459 - #21 1
INFO  10:40:00,459 - #46 ]
INFO  10:40:00,459 - #44 )
INFO  10:40:00,459 - #40 ;
INFO  10:40:00,459 - #14 read
INFO  10:40:00,459 - #43 (
INFO  10:40:00,459 - #20 niz
INFO  10:40:00,459 - #45 [
INFO  10:40:00,459 - #21 2
INFO  10:40:00,459 - #46 ]
INFO  10:40:00,459 - #44 )
INFO  10:40:00,459 - #40 ;
INFO  10:40:00,459 - #13 print
INFO  10:40:00,459 - #43 (
INFO  10:40:00,459 - #20 eol
INFO  10:40:00,459 - #44 )
INFO  10:40:00,459 - #40 ;
INFO  10:40:00,459 - #13 print
INFO  10:40:00,460 - #43 (
INFO  10:40:00,460 - #20 sum
INFO  10:40:00,460 - #43 (
INFO  10:40:00,460 - #20 sum
INFO  10:40:00,460 - #43 (
INFO  10:40:00,460 - #20 niz
INFO  10:40:00,460 - #45 [
INFO  10:40:00,460 - #21 0
INFO  10:40:00,460 - #46 ]
INFO  10:40:00,460 - #41 ,
INFO  10:40:00,460 - #20 niz
INFO  10:40:00,460 - #45 [
INFO  10:40:00,460 - #21 1
INFO  10:40:00,460 - #46 ]
INFO  10:40:00,461 - #44 )
INFO  10:40:00,461 - #41 ,
INFO  10:40:00,461 - #20 niz
INFO  10:40:00,461 - #45 [
INFO  10:40:00,461 - #21 2
INFO  10:40:00,461 - #46 ]
INFO  10:40:00,461 - #44 )
INFO  10:40:00,461 - #44 )
INFO  10:40:00,461 - #40 ;
INFO  10:40:00,461 - #13 print
INFO  10:40:00,461 - #43 (
INFO  10:40:00,462 - #20 eol
INFO  10:40:00,462 - #44 )
INFO  10:40:00,462 - #40 ;
INFO  10:40:00,462 - #13 print
INFO  10:40:00,462 - #43 (
INFO  10:40:00,462 - #20 inkrement
INFO  10:40:00,462 - #43 (
INFO  10:40:00,462 - #20 niz
INFO  10:40:00,462 - #45 [
INFO  10:40:00,462 - #21 2
INFO  10:40:00,462 - #46 ]
INFO  10:40:00,462 - #41 ,
INFO  10:40:00,462 - #21 2
INFO  10:40:00,463 - #44 )
INFO  10:40:00,463 - #44 )
INFO  10:40:00,463 - #40 ;
INFO  10:40:00,463 - #13 print
INFO  10:40:00,463 - #43 (
INFO  10:40:00,463 - #20 verify
INFO  10:40:00,463 - #43 (
INFO  10:40:00,463 - #44 )
INFO  10:40:00,463 - #49 ?
INFO  10:40:00,463 - #22 t
INFO  10:40:00,463 - #50 :
INFO  10:40:00,463 - #22 f
INFO  10:40:00,463 - #44 )
INFO  10:40:00,464 - #40 ;
INFO  10:40:00,464 - #48 }
INFO  10:40:00,464 - #48 }
INFO  10:40:00,465 - 

================SINTAKSNO STABLO====================


INFO  10:40:00,479 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      IfKeyword(
                                                      ) [IfKeyword]
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondSingle(
                                                            CondTermSingle(
                                                              CondFactRelop(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactRelop]
                                                            ) [CondTermSingle]
                                                          ) [CondSingle]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoKeyword(
                                                ) [DoKeyword]
                                                StmtWhileBody(
                                                  Stmt(
                                                    StatementMulti(
                                                      StatementSingle(
                                                        StmtIf(
                                                          IfKeyword(
                                                          ) [IfKeyword]
                                                          StmtIfBody(
                                                            IfCond(
                                                              CondSingle(
                                                                CondTermSingle(
                                                                  CondFactRelop(
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorDesignator(
                                                                            DesignatorSimple(
                                                                             i
                                                                            ) [DesignatorSimple]
                                                                          ) [FactorDesignator]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                    RelopEQ(
                                                                    ) [RelopEQ]
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorNumConst(
                                                                           2
                                                                          ) [FactorNumConst]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                  ) [CondFactRelop]
                                                                ) [CondTermSingle]
                                                              ) [CondSingle]
                                                            ) [IfCond]
                                                            StmtDesign(
                                                              DesignatorAssignment(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                                AssignmentExpr(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorBoolConst(
                                                                         true
                                                                        ) [FactorBoolConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [AssignmentExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StmtDesign]
                                                          ) [StmtIfBody]
                                                        ) [StmtIf]
                                                      ) [StatementSingle]
                                                      StmtDesign(
                                                        DesignatorIncrement(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [DesignatorIncrement]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                  ) [Stmt]
                                                ) [StmtWhileBody]
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactRelop(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactRelop]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              IfKeyword(
                                              ) [IfKeyword]
                                              StmtIfBody(
                                                IfCond(
                                                  CondSingle(
                                                    CondTermSingle(
                                                      CondFactSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactSingle]
                                                    ) [CondTermSingle]
                                                  ) [CondSingle]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  IfKeyword(
                                                  ) [IfKeyword]
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondSingle(
                                                        CondTermSingle(
                                                          CondFactRelop(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactRelop]
                                                        ) [CondTermSingle]
                                                      ) [CondSingle]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    IfKeyword(
                                    ) [IfKeyword]
                                    StmtIfBody(
                                      IfCond(
                                        CondOr(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactSingle]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                          CondTermSingle(
                                            CondFactRelop(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactRelop]
                                          ) [CondTermSingle]
                                        ) [CondOr]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoKeyword(
                              ) [DoKeyword]
                              StmtWhileBody(
                                Stmt(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementSingle(
                                        StmtIf(
                                          IfKeyword(
                                          ) [IfKeyword]
                                          StmtIfBody(
                                            IfCond(
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                    RelopEQ(
                                                    ) [RelopEQ]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           3
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [IfCond]
                                            Stmt(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorIncrement(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [DesignatorIncrement]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtContinue(
                                                ) [StmtContinue]
                                              ) [StatementMulti]
                                            ) [Stmt]
                                          ) [StmtIfBody]
                                        ) [StmtIf]
                                      ) [StatementSingle]
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         4
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          StmtBreak(
                                          ) [StmtBreak]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FuncCallParams(
                                                  DesignatorSimple(
                                                   inkrement
                                                  ) [DesignatorSimple]
                                                  ActParsMulti(
                                                    ActParsSingle(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsSingle]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsMulti]
                                                ) [FuncCallParams]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                ) [Stmt]
                              ) [StmtWhileBody]
                              CondSingle(
                                CondTermSingle(
                                  CondFactRelop(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactRelop]
                                ) [CondTermSingle]
                              ) [CondSingle]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            IfKeyword(
                            ) [IfKeyword]
                            StmtIfBody(
                              IfCond(
                                CondSingle(
                                  CondTermAnd(
                                    CondTermSingle(
                                      CondFactRelop(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactRelop]
                                    ) [CondTermSingle]
                                    CondFactSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactSingle]
                                  ) [CondTermAnd]
                                ) [CondSingle]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FuncCall(
                      DesignatorSimple(
                       verify
                      ) [DesignatorSimple]
                    ) [FuncCall]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     t
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     f
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:40:00,489 - 

================SEMANTICKA OBRADA====================


INFO  10:40:00,508 - Deklarisana konstanta 'jedan' na liniji 5
INFO  10:40:00,508 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  10:40:00,508 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  10:40:00,508 - Deklarisan globalni niz 'niz' na liniji 10
INFO  10:40:00,509 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  10:40:00,509 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  10:40:00,509 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  10:40:00,509 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  10:40:00,510 - Deklarisana promenljiva 'pom' na liniji 20
INFO  10:40:00,510 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  10:40:00,510 - Pristup elementu niza 'niz' na liniji 50
INFO  10:40:00,510 - Pristup elementu niza 'niz' na liniji 51
INFO  10:40:00,510 - Pristup elementu niza 'niz' na liniji 52
INFO  10:40:00,510 - Pristup elementu niza 'niz' na liniji 52
INFO  10:40:00,510 - Pristup elementu niza 'niz' na liniji 52
INFO  10:40:00,510 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  10:40:00,511 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 53
INFO  10:40:00,511 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  10:40:00,511 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  10:40:00,511 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  10:40:00,511 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 71
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 72
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 73
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 76
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 76
INFO  10:40:00,511 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 76
INFO  10:40:00,511 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  10:40:00,511 - Pristup elementu niza 'niz' na liniji 79
INFO  10:40:00,511 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  10:40:00,511 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  10:40:00,512 - ===================================
INFO  10:40:00,512 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:40:00,522 - Parsiranje uspesno zavrseno!
INFO  10:43:12,695 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:43:12,769 - #2 program
INFO  10:43:12,769 - #20 MJProgram
INFO  10:43:12,769 - #20 int
INFO  10:43:12,770 - #40 ;
ERROR 10:43:12,771 - 
Sintaksna greska na liniji 2, koloni 5 za simbol ";"!
INFO  10:43:12,771 - #47 {
INFO  10:43:12,771 - #16 void
INFO  10:43:12,771 - #20 main
ERROR 10:43:12,772 - Oporavak od greske u deklaraciji globalne promenljive na liniji 2, koloni 5 za simbol ";"!
INFO  10:43:12,773 - #43 (
INFO  10:43:12,773 - #44 )
INFO  10:43:12,774 - #20 int
INFO  10:43:12,774 - #20 a
INFO  10:43:12,774 - #24 +
ERROR 10:43:12,774 - 
Sintaksna greska na liniji 7, koloni 7 za simbol "+"!
INFO  10:43:12,774 - #40 ;
INFO  10:43:12,774 - #47 {
INFO  10:43:12,774 - #20 a
INFO  10:43:12,774 - #37 =
INFO  10:43:12,775 - #21 1
INFO  10:43:12,775 - #24 +
INFO  10:43:12,775 - #40 ;
INFO  10:43:12,775 - #8 if
INFO  10:43:12,775 - #43 (
INFO  10:43:12,775 - #20 a
INFO  10:43:12,776 - #33 <
INFO  10:43:12,776 - #20 b
INFO  10:43:12,776 - #24 +
INFO  10:43:12,776 - #44 )
INFO  10:43:12,776 - #47 {
INFO  10:43:12,776 - #20 a
INFO  10:43:12,777 - #37 =
ERROR 10:43:12,777 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 7, koloni 7 za simbol "+"!
INFO  10:43:12,778 - #21 1
INFO  10:43:12,778 - #40 ;
INFO  10:43:12,779 - #48 }
INFO  10:43:12,779 - #8 if
ERROR 10:43:12,779 - 
Sintaksna greska na liniji 15, koloni 2 za simbol "if"!
INFO  10:43:12,779 - #43 (
INFO  10:43:12,779 - #20 a
INFO  10:43:12,779 - #33 <
INFO  10:43:12,780 - #20 b
INFO  10:43:12,780 - #24 +
INFO  10:43:12,780 - #40 ;
INFO  10:43:12,780 - #44 )
INFO  10:43:12,780 - #20 a
INFO  10:43:12,780 - #37 =
INFO  10:43:12,780 - #21 1
INFO  10:43:12,780 - #40 ;
INFO  10:43:12,780 - #6 else
INFO  10:43:12,780 - #20 a
INFO  10:43:12,780 - #37 =
INFO  10:43:12,780 - #21 2
INFO  10:43:12,781 - #40 ;
INFO  10:43:12,781 - #10 do
INFO  10:43:12,781 - #47 {
INFO  10:43:12,781 - #20 a
INFO  10:43:12,781 - #38 ++
INFO  10:43:12,781 - #40 ;
INFO  10:43:12,781 - #48 }
INFO  10:43:12,781 - #11 while
INFO  10:43:12,781 - #43 (
INFO  10:43:12,781 - #20 a
INFO  10:43:12,782 - #33 <
INFO  10:43:12,782 - #20 b
INFO  10:43:12,782 - #44 )
INFO  10:43:12,782 - #40 ;
INFO  10:43:12,782 - #48 }
INFO  10:43:12,782 - #48 }
ERROR 10:43:12,782 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 25, koloni 1!
INFO  10:43:32,640 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:43:32,734 - #2 program
INFO  10:43:32,734 - #20 MJProgram
INFO  10:43:32,735 - #20 int
INFO  10:43:32,736 - #40 ;
ERROR 10:43:32,737 - 
Sintaksna greska na liniji 2, koloni 5 za simbol ";"!
INFO  10:43:32,737 - #47 {
INFO  10:43:32,737 - #16 void
INFO  10:43:32,737 - #20 main
ERROR 10:43:32,738 - Oporavak od greske u deklaraciji globalne promenljive na liniji 2, koloni 5 za simbol ";"!
INFO  10:43:32,739 - #43 (
INFO  10:43:32,739 - #44 )
INFO  10:43:32,739 - #47 {
INFO  10:43:32,739 - #20 a
INFO  10:43:32,739 - #37 =
INFO  10:43:32,739 - #21 1
INFO  10:43:32,740 - #24 +
INFO  10:43:32,740 - #40 ;
ERROR 10:43:32,740 - 
Sintaksna greska na liniji 9, koloni 10 za simbol ";"!
INFO  10:43:32,740 - #8 if
INFO  10:43:32,740 - #43 (
INFO  10:43:32,740 - #20 a
ERROR 10:43:32,740 - Oporavak od greske u konstrukciji iskaza dodele na liniji 9, koloni 10 za simbol ";"!
INFO  10:43:32,743 - #33 <
INFO  10:43:32,744 - #20 b
INFO  10:43:32,745 - #24 +
INFO  10:43:32,745 - #44 )
ERROR 10:43:32,745 - 
Sintaksna greska na liniji 11, koloni 14 za simbol ")"!
INFO  10:43:32,745 - #47 {
INFO  10:43:32,745 - #20 a
INFO  10:43:32,745 - #37 =
ERROR 10:43:32,745 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 11, koloni 14 za simbol ")"!
INFO  10:43:32,746 - #21 1
INFO  10:43:32,746 - #40 ;
INFO  10:43:32,746 - #48 }
INFO  10:43:32,746 - #8 if
INFO  10:43:32,746 - #43 (
INFO  10:43:32,747 - #20 a
INFO  10:43:32,747 - #33 <
INFO  10:43:32,747 - #20 b
INFO  10:43:32,747 - #24 +
INFO  10:43:32,747 - #40 ;
ERROR 10:43:32,747 - 
Sintaksna greska na liniji 15, koloni 13 za simbol ";"!
INFO  10:43:32,747 - #44 )
INFO  10:43:32,747 - #20 a
INFO  10:43:32,747 - #37 =
INFO  10:43:32,747 - #21 1
ERROR 10:43:32,747 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 15, koloni 13 za simbol ";"!
INFO  10:43:32,747 - #40 ;
INFO  10:43:32,747 - #6 else
INFO  10:43:32,747 - #20 a
INFO  10:43:32,747 - #37 =
INFO  10:43:32,747 - #21 2
INFO  10:43:32,747 - #40 ;
INFO  10:43:32,747 - #10 do
INFO  10:43:32,747 - #47 {
INFO  10:43:32,749 - #20 a
INFO  10:43:32,749 - #38 ++
INFO  10:43:32,749 - #40 ;
INFO  10:43:32,749 - #48 }
INFO  10:43:32,749 - #11 while
INFO  10:43:32,749 - #43 (
INFO  10:43:32,750 - #20 a
INFO  10:43:32,750 - #33 <
INFO  10:43:32,750 - #20 b
INFO  10:43:32,750 - #44 )
INFO  10:43:32,751 - #40 ;
INFO  10:43:32,751 - #48 }
INFO  10:43:32,751 - #48 }
INFO  10:43:32,752 - 

================SINTAKSNO STABLO====================


INFO  10:43:32,754 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          VarError(
          ) [VarError]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                    AssignmentError(
                    ) [AssignmentError]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtIf(
                IfKeyword(
                ) [IfKeyword]
                StmtIfBody(
                  IfCondError(
                  ) [IfCondError]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIfElse(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCondError(
                ) [IfCondError]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   a
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StmtIfElse]
          ) [StatementMulti]
          StmtDoWhile(
            DoKeyword(
            ) [DoKeyword]
            StmtWhileBody(
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       a
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtWhileBody]
            CondSingle(
              CondTermSingle(
                CondFactRelop(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                  RelopLT(
                  ) [RelopLT]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           b
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactRelop]
              ) [CondTermSingle]
            ) [CondSingle]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:43:32,754 - 

================SEMANTICKA OBRADA====================


ERROR 10:43:32,769 - Semanticka greska - 'a' nije deklarisano na liniji 9
ERROR 10:43:32,769 - Semanticka greska - 'a' nije deklarisano na liniji 12
ERROR 10:43:32,769 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 12
ERROR 10:43:32,770 - Semanticka greska - 'a' nije deklarisano na liniji 16
ERROR 10:43:32,770 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 10:43:32,770 - Semanticka greska - 'a' nije deklarisano na liniji 18
ERROR 10:43:32,770 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 10:43:32,770 - Semanticka greska - 'a' nije deklarisano na liniji 21
ERROR 10:43:32,770 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 21
ERROR 10:43:32,770 - Semanticka greska - 'a' nije deklarisano na liniji 23
ERROR 10:43:32,770 - Semanticka greska - 'b' nije deklarisano na liniji 23
INFO  10:43:32,771 - ===================================
ERROR 10:43:32,772 - Parsiranje nije uspesno zavrseno!
INFO  10:43:47,410 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:43:47,488 - #2 program
INFO  10:43:47,488 - #20 MJProgram
INFO  10:43:47,489 - #20 int
INFO  10:43:47,490 - #40 ;
ERROR 10:43:47,491 - 
Sintaksna greska na liniji 2, koloni 5 za simbol ";"!
INFO  10:43:47,491 - #47 {
INFO  10:43:47,491 - #16 void
INFO  10:43:47,491 - #20 main
ERROR 10:43:47,492 - Oporavak od greske u deklaraciji globalne promenljive na liniji 2, koloni 5 za simbol ";"!
INFO  10:43:47,493 - #43 (
INFO  10:43:47,493 - #44 )
INFO  10:43:47,493 - #20 int
INFO  10:43:47,493 - #20 a
INFO  10:43:47,493 - #40 ;
INFO  10:43:47,493 - #47 {
INFO  10:43:47,494 - #20 a
INFO  10:43:47,494 - #37 =
INFO  10:43:47,494 - #21 1
INFO  10:43:47,494 - #24 +
INFO  10:43:47,495 - #40 ;
ERROR 10:43:47,495 - 
Sintaksna greska na liniji 9, koloni 10 za simbol ";"!
INFO  10:43:47,495 - #8 if
INFO  10:43:47,495 - #43 (
INFO  10:43:47,495 - #20 a
ERROR 10:43:47,495 - Oporavak od greske u konstrukciji iskaza dodele na liniji 9, koloni 10 za simbol ";"!
INFO  10:43:47,498 - #33 <
INFO  10:43:47,498 - #20 b
INFO  10:43:47,499 - #24 +
INFO  10:43:47,499 - #44 )
ERROR 10:43:47,499 - 
Sintaksna greska na liniji 11, koloni 14 za simbol ")"!
INFO  10:43:47,499 - #47 {
INFO  10:43:47,499 - #20 a
INFO  10:43:47,499 - #37 =
ERROR 10:43:47,499 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 11, koloni 14 za simbol ")"!
INFO  10:43:47,500 - #21 1
INFO  10:43:47,500 - #40 ;
INFO  10:43:47,500 - #48 }
INFO  10:43:47,500 - #8 if
INFO  10:43:47,500 - #43 (
INFO  10:43:47,500 - #20 a
INFO  10:43:47,500 - #33 <
INFO  10:43:47,500 - #20 b
INFO  10:43:47,501 - #24 +
INFO  10:43:47,501 - #40 ;
ERROR 10:43:47,501 - 
Sintaksna greska na liniji 15, koloni 13 za simbol ";"!
INFO  10:43:47,501 - #44 )
INFO  10:43:47,501 - #20 a
INFO  10:43:47,501 - #37 =
INFO  10:43:47,501 - #21 1
ERROR 10:43:47,501 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 15, koloni 13 za simbol ";"!
INFO  10:43:47,501 - #40 ;
INFO  10:43:47,501 - #6 else
INFO  10:43:47,502 - #20 a
INFO  10:43:47,502 - #37 =
INFO  10:43:47,502 - #21 2
INFO  10:43:47,502 - #40 ;
INFO  10:43:47,502 - #10 do
INFO  10:43:47,502 - #47 {
INFO  10:43:47,503 - #20 a
INFO  10:43:47,503 - #38 ++
INFO  10:43:47,503 - #40 ;
INFO  10:43:47,503 - #48 }
INFO  10:43:47,503 - #11 while
INFO  10:43:47,504 - #43 (
INFO  10:43:47,504 - #20 a
INFO  10:43:47,504 - #33 <
INFO  10:43:47,504 - #20 b
INFO  10:43:47,504 - #44 )
INFO  10:43:47,504 - #40 ;
INFO  10:43:47,504 - #48 }
INFO  10:43:47,505 - #48 }
INFO  10:43:47,507 - 

================SINTAKSNO STABLO====================


INFO  10:43:47,508 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          VarError(
          ) [VarError]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                    AssignmentError(
                    ) [AssignmentError]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtIf(
                IfKeyword(
                ) [IfKeyword]
                StmtIfBody(
                  IfCondError(
                  ) [IfCondError]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIfElse(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCondError(
                ) [IfCondError]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   a
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StmtIfElse]
          ) [StatementMulti]
          StmtDoWhile(
            DoKeyword(
            ) [DoKeyword]
            StmtWhileBody(
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       a
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtWhileBody]
            CondSingle(
              CondTermSingle(
                CondFactRelop(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                  RelopLT(
                  ) [RelopLT]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           b
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactRelop]
              ) [CondTermSingle]
            ) [CondSingle]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:43:47,509 - 

================SEMANTICKA OBRADA====================


INFO  10:43:47,524 - Deklarisana promenljiva 'a' na liniji 7
ERROR 10:43:47,524 - Semanticka greska - 'b' nije deklarisano na liniji 23
ERROR 10:43:47,525 - Semanticka greska - tipovi relacionog izraza nisu kompatibilni na liniji 23
INFO  10:43:47,526 - ===================================
ERROR 10:43:47,526 - Parsiranje nije uspesno zavrseno!
INFO  10:46:14,912 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:46:15,021 - #2 program
INFO  10:46:15,021 - #20 MJProgram
INFO  10:46:15,022 - #20 int
INFO  10:46:15,024 - #40 ;
ERROR 10:46:15,025 - 
Sintaksna greska na liniji 2, koloni 5 za simbol ";"!
INFO  10:46:15,025 - #47 {
INFO  10:46:15,025 - #16 void
INFO  10:46:15,025 - #20 main
ERROR 10:46:15,026 - Oporavak od greske u deklaraciji globalne promenljive na liniji 2, koloni 5 za simbol ";"!
INFO  10:46:15,027 - #43 (
INFO  10:46:15,027 - #44 )
INFO  10:46:15,027 - #20 int
INFO  10:46:15,027 - #20 a
INFO  10:46:15,027 - #40 ;
INFO  10:46:15,027 - #47 {
INFO  10:46:15,028 - #20 a
INFO  10:46:15,028 - #37 =
INFO  10:46:15,028 - #21 1
INFO  10:46:15,028 - #24 +
INFO  10:46:15,030 - #40 ;
ERROR 10:46:15,030 - 
Sintaksna greska na liniji 9, koloni 10 za simbol ";"!
INFO  10:46:15,030 - #8 if
INFO  10:46:15,030 - #43 (
INFO  10:46:15,030 - #20 a
ERROR 10:46:15,030 - Oporavak od greske u konstrukciji iskaza dodele na liniji 9, koloni 10 za simbol ";"!
INFO  10:46:15,032 - #33 <
INFO  10:46:15,032 - #20 b
INFO  10:46:15,034 - #24 +
INFO  10:46:15,034 - #44 )
ERROR 10:46:15,034 - 
Sintaksna greska na liniji 11, koloni 14 za simbol ")"!
INFO  10:46:15,034 - #47 {
INFO  10:46:15,034 - #20 a
INFO  10:46:15,034 - #37 =
ERROR 10:46:15,034 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 11, koloni 14 za simbol ")"!
INFO  10:46:15,035 - #21 1
INFO  10:46:15,035 - #40 ;
INFO  10:46:15,036 - #48 }
INFO  10:46:15,036 - #8 if
INFO  10:46:15,036 - #43 (
INFO  10:46:15,036 - #20 a
INFO  10:46:15,036 - #33 <
INFO  10:46:15,036 - #20 b
INFO  10:46:15,037 - #24 +
INFO  10:46:15,037 - #40 ;
ERROR 10:46:15,037 - 
Sintaksna greska na liniji 15, koloni 13 za simbol ";"!
INFO  10:46:15,037 - #44 )
INFO  10:46:15,037 - #20 a
INFO  10:46:15,037 - #37 =
INFO  10:46:15,038 - #21 1
ERROR 10:46:15,039 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 15, koloni 13 za simbol ";"!
INFO  10:46:15,039 - #40 ;
INFO  10:46:15,039 - #6 else
INFO  10:46:15,039 - #20 a
INFO  10:46:15,040 - #37 =
INFO  10:46:15,040 - #21 2
INFO  10:46:15,040 - #40 ;
INFO  10:46:15,040 - #10 do
INFO  10:46:15,040 - #47 {
INFO  10:46:15,042 - #20 a
INFO  10:46:15,042 - #38 ++
INFO  10:46:15,044 - #40 ;
INFO  10:46:15,044 - #48 }
INFO  10:46:15,044 - #11 while
INFO  10:46:15,045 - #43 (
INFO  10:46:15,045 - #20 a
INFO  10:46:15,045 - #33 <
INFO  10:46:15,045 - #20 b
INFO  10:46:15,045 - #24 +
INFO  10:46:15,045 - #44 )
ERROR 10:46:15,046 - 
Sintaksna greska na liniji 23, koloni 15 za simbol ")"!
INFO  10:46:15,046 - #40 ;
INFO  10:46:15,046 - #48 }
INFO  10:46:15,046 - #48 }
ERROR 10:46:15,046 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 25, koloni 1!
INFO  10:48:39,205 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:48:39,277 - #2 program
INFO  10:48:39,277 - #20 MJProgram
INFO  10:48:39,277 - #20 int
INFO  10:48:39,278 - #40 ;
ERROR 10:48:39,279 - 
Sintaksna greska na liniji 2, koloni 5 za simbol ";"!
INFO  10:48:39,279 - #20 int
INFO  10:48:39,279 - #20 a
INFO  10:48:39,279 - #40 ;
ERROR 10:48:39,280 - Oporavak od greske u deklaraciji globalne promenljive na liniji 2, koloni 5 za simbol ";"!
INFO  10:48:39,281 - #20 int
INFO  10:48:39,281 - #40 ;
ERROR 10:48:39,281 - 
Sintaksna greska na liniji 4, koloni 5 za simbol ";"!
INFO  10:48:39,281 - #20 int
INFO  10:48:39,281 - #20 a
INFO  10:48:39,281 - #45 [
ERROR 10:48:39,281 - Oporavak od greske u deklaraciji globalne promenljive na liniji 4, koloni 5 za simbol ";"!
INFO  10:48:39,281 - #46 ]
INFO  10:48:39,281 - #40 ;
INFO  10:48:39,281 - #20 char
INFO  10:48:39,282 - #20 b1
INFO  10:48:39,282 - #40 ;
INFO  10:48:39,282 - #20 int
INFO  10:48:39,282 - #20 a
INFO  10:48:39,282 - #24 +
ERROR 10:48:39,282 - 
Sintaksna greska na liniji 8, koloni 7 za simbol "+"!
INFO  10:48:39,282 - #40 ;
INFO  10:48:39,282 - #20 int
INFO  10:48:39,282 - #20 a
INFO  10:48:39,282 - #41 ,
ERROR 10:48:39,282 - Oporavak od greske u deklaraciji globalne promenljive na liniji 8, koloni 7 za simbol "+"!
INFO  10:48:39,282 - #20 b
INFO  10:48:39,283 - #40 ;
INFO  10:48:39,283 - #20 abc
INFO  10:48:39,283 - #20 b
INFO  10:48:39,283 - #40 ;
INFO  10:48:39,283 - #20 bool
INFO  10:48:39,283 - #20 b
INFO  10:48:39,283 - #37 =
ERROR 10:48:39,283 - 
Sintaksna greska na liniji 12, koloni 8 za simbol "="!
INFO  10:48:39,283 - #23 true
INFO  10:48:39,283 - #40 ;
INFO  10:48:39,284 - #20 abc
INFO  10:48:39,284 - #21 22
INFO  10:48:39,284 - #40 ;
INFO  10:48:39,284 - #47 {
INFO  10:48:39,284 - #20 int
INFO  10:48:39,284 - #20 sum
ERROR 10:48:39,284 - Oporavak od greske u deklaraciji globalne promenljive na liniji 12, koloni 8 za simbol "="!
INFO  10:48:39,284 - #43 (
INFO  10:48:39,284 - #20 int
INFO  10:48:39,284 - #20 z
INFO  10:48:39,284 - #41 ,
INFO  10:48:39,285 - #20 int
INFO  10:48:39,285 - #20 d
INFO  10:48:39,285 - #24 +
ERROR 10:48:39,285 - 
Sintaksna greska na liniji 16, koloni 22 za simbol "+"!
INFO  10:48:39,285 - #44 )
INFO  10:48:39,285 - #47 {
INFO  10:48:39,285 - #15 return
INFO  10:48:39,285 - #20 z
ERROR 10:48:39,285 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 16, koloni 22 za simbol "+"!
INFO  10:48:39,286 - #24 +
INFO  10:48:39,286 - #20 d
INFO  10:48:39,289 - #40 ;
INFO  10:48:39,289 - #48 }
INFO  10:48:39,289 - #16 void
INFO  10:48:39,289 - #20 main
INFO  10:48:39,289 - #43 (
INFO  10:48:39,289 - #44 )
INFO  10:48:39,289 - #20 int
INFO  10:48:39,290 - #20 a
INFO  10:48:39,290 - #40 ;
INFO  10:48:39,290 - #47 {
INFO  10:48:39,290 - #20 a
INFO  10:48:39,290 - #37 =
INFO  10:48:39,290 - #21 1
INFO  10:48:39,290 - #24 +
INFO  10:48:39,290 - #40 ;
ERROR 10:48:39,290 - 
Sintaksna greska na liniji 24, koloni 10 za simbol ";"!
INFO  10:48:39,290 - #8 if
INFO  10:48:39,290 - #43 (
INFO  10:48:39,290 - #20 a
ERROR 10:48:39,291 - Oporavak od greske u konstrukciji iskaza dodele na liniji 24, koloni 10 za simbol ";"!
INFO  10:48:39,292 - #33 <
INFO  10:48:39,295 - #20 b
INFO  10:48:39,296 - #24 +
INFO  10:48:39,296 - #44 )
ERROR 10:48:39,296 - 
Sintaksna greska na liniji 26, koloni 14 za simbol ")"!
INFO  10:48:39,296 - #47 {
INFO  10:48:39,296 - #20 a
INFO  10:48:39,296 - #37 =
ERROR 10:48:39,296 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 26, koloni 14 za simbol ")"!
INFO  10:48:39,297 - #21 1
INFO  10:48:39,297 - #40 ;
INFO  10:48:39,297 - #48 }
INFO  10:48:39,297 - #8 if
INFO  10:48:39,297 - #43 (
INFO  10:48:39,298 - #20 a
INFO  10:48:39,298 - #33 <
INFO  10:48:39,298 - #20 b
INFO  10:48:39,298 - #24 +
INFO  10:48:39,298 - #40 ;
ERROR 10:48:39,298 - 
Sintaksna greska na liniji 30, koloni 13 za simbol ";"!
INFO  10:48:39,298 - #44 )
INFO  10:48:39,298 - #20 a
INFO  10:48:39,298 - #37 =
INFO  10:48:39,298 - #21 1
ERROR 10:48:39,298 - Oporavak od greske u logickom izrazu if konstrukcije na liniji 30, koloni 13 za simbol ";"!
INFO  10:48:39,298 - #40 ;
INFO  10:48:39,298 - #6 else
INFO  10:48:39,298 - #20 a
INFO  10:48:39,298 - #37 =
INFO  10:48:39,299 - #21 2
INFO  10:48:39,299 - #40 ;
INFO  10:48:39,299 - #48 }
INFO  10:48:39,299 - #48 }
INFO  10:48:39,300 - 

================SINTAKSNO STABLO====================


INFO  10:48:39,301 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclMulti(
              ProgramDeclMulti(
                ProgramDeclMulti(
                  ProgramDeclMulti(
                    ProgramDeclEps(
                    ) [ProgramDeclEps]
                    PartVarDeclaration(
                      GlobalVarDeclaration(
                        Type(
                         int
                        ) [Type]
                        GlobalVarSingle(
                          VarError(
                          ) [VarError]
                        ) [GlobalVarSingle]
                      ) [GlobalVarDeclaration]
                    ) [PartVarDeclaration]
                  ) [ProgramDeclMulti]
                  PartVarDeclaration(
                    GlobalVarDeclaration(
                      Type(
                       int
                      ) [Type]
                      GlobalVarSingle(
                        GlobalVar(
                          VarNormal(
                           a
                          ) [VarNormal]
                        ) [GlobalVar]
                      ) [GlobalVarSingle]
                    ) [GlobalVarDeclaration]
                  ) [PartVarDeclaration]
                ) [ProgramDeclMulti]
                PartVarDeclaration(
                  GlobalVarDeclaration(
                    Type(
                     int
                    ) [Type]
                    GlobalVarSingle(
                      VarError(
                      ) [VarError]
                    ) [GlobalVarSingle]
                  ) [GlobalVarDeclaration]
                ) [PartVarDeclaration]
              ) [ProgramDeclMulti]
              PartVarDeclaration(
                GlobalVarDeclaration(
                  Type(
                   int
                  ) [Type]
                  GlobalVarSingle(
                    GlobalVar(
                      VarArray(
                       a
                      ) [VarArray]
                    ) [GlobalVar]
                  ) [GlobalVarSingle]
                ) [GlobalVarDeclaration]
              ) [PartVarDeclaration]
            ) [ProgramDeclMulti]
            PartVarDeclaration(
              GlobalVarDeclaration(
                Type(
                 char
                ) [Type]
                GlobalVarSingle(
                  GlobalVar(
                    VarNormal(
                     b1
                    ) [VarNormal]
                  ) [GlobalVar]
                ) [GlobalVarSingle]
              ) [GlobalVarDeclaration]
            ) [PartVarDeclaration]
          ) [ProgramDeclMulti]
          PartVarDeclaration(
            GlobalVarDeclaration(
              Type(
               int
              ) [Type]
              GlobalVarSingle(
                VarError(
                ) [VarError]
              ) [GlobalVarSingle]
            ) [GlobalVarDeclaration]
          ) [PartVarDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarMulti(
              GlobalVarSingle(
                GlobalVar(
                  VarNormal(
                   a
                  ) [VarNormal]
                ) [GlobalVar]
              ) [GlobalVarSingle]
              GlobalVar(
                VarNormal(
                 b
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarMulti]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               b
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         bool
        ) [Type]
        GlobalVarSingle(
          VarError(
          ) [VarError]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           sum
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               z
              ) [ParamNormal]
            ) [ParamSingle]
            ParamError(
            ) [ParamError]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         z
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       d
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   a
                  ) [DesignatorSimple]
                  AssignmentError(
                  ) [AssignmentError]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCondError(
                ) [IfCondError]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         a
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIfElse(
            IfKeyword(
            ) [IfKeyword]
            StmtIfBody(
              IfCondError(
              ) [IfCondError]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   a
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StmtIfBody]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StmtIfElse]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:48:39,301 - 

================SEMANTICKA OBRADA====================


INFO  10:48:39,315 - Deklarisana globalna promenljiva 'a' na liniji 3
ERROR 10:48:39,315 - Semanticka greska - 'a' je vec deklarisano na liniji 5
INFO  10:48:39,315 - Deklarisana globalna promenljiva 'b1' na liniji 7
ERROR 10:48:39,315 - Semanticka greska - 'a' je vec deklarisano na liniji 9
INFO  10:48:39,315 - Deklarisana globalna promenljiva 'b' na liniji 9
ERROR 10:48:39,315 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
ERROR 10:48:39,315 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  10:48:39,316 - Formalni parametar funkcije sum: 'z' na liniji 16
ERROR 10:48:39,316 - Semanticka greska - 'd' nije deklarisano na liniji 18
ERROR 10:48:39,316 - Semanticka greska - clanovi izraza nisu tipa int na liniji 18
ERROR 10:48:39,316 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 18
ERROR 10:48:39,316 - Semanticka greska - 'a' je vec deklarisano na liniji 22
INFO  10:48:39,317 - ===================================
ERROR 10:48:39,317 - Parsiranje nije uspesno zavrseno!
INFO  10:55:17,040 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:55:17,110 - #2 program
INFO  10:55:17,110 - #20 MJProgram
INFO  10:55:17,111 - #20 abc
INFO  10:55:17,112 - #20 a
INFO  10:55:17,112 - #40 ;
INFO  10:55:17,113 - #7 const
INFO  10:55:17,113 - #20 int
INFO  10:55:17,113 - #20 cnst
INFO  10:55:17,113 - #37 =
INFO  10:55:17,113 - #21 1
INFO  10:55:17,113 - #40 ;
INFO  10:55:17,114 - #47 {
INFO  10:55:17,114 - #20 int
INFO  10:55:17,114 - #20 fun
INFO  10:55:17,114 - #43 (
INFO  10:55:17,114 - #20 int
INFO  10:55:17,115 - #20 x
INFO  10:55:17,115 - #44 )
INFO  10:55:17,115 - #47 {
INFO  10:55:17,115 - #48 }
INFO  10:55:17,115 - #16 void
INFO  10:55:17,116 - #20 main
INFO  10:55:17,116 - #43 (
INFO  10:55:17,116 - #44 )
INFO  10:55:17,116 - #20 int
INFO  10:55:17,116 - #20 b
INFO  10:55:17,116 - #40 ;
INFO  10:55:17,116 - #20 char
INFO  10:55:17,116 - #20 b
INFO  10:55:17,117 - #40 ;
INFO  10:55:17,117 - #20 int
INFO  10:55:17,117 - #20 num
INFO  10:55:17,117 - #40 ;
INFO  10:55:17,117 - #20 char
INFO  10:55:17,117 - #20 character
INFO  10:55:17,117 - #40 ;
INFO  10:55:17,117 - #20 bool
INFO  10:55:17,117 - #20 boolean
INFO  10:55:17,117 - #40 ;
INFO  10:55:17,117 - #20 int
INFO  10:55:17,117 - #20 niz
INFO  10:55:17,117 - #45 [
INFO  10:55:17,117 - #46 ]
INFO  10:55:17,117 - #41 ,
INFO  10:55:17,117 - #20 niz1
INFO  10:55:17,118 - #45 [
INFO  10:55:17,118 - #46 ]
INFO  10:55:17,118 - #40 ;
INFO  10:55:17,118 - #47 {
INFO  10:55:17,118 - #20 a
INFO  10:55:17,118 - #37 =
INFO  10:55:17,118 - #21 1
INFO  10:55:17,118 - #40 ;
INFO  10:55:17,119 - #20 num
INFO  10:55:17,119 - #37 =
INFO  10:55:17,119 - #22 a
INFO  10:55:17,119 - #40 ;
INFO  10:55:17,120 - #20 num
INFO  10:55:17,120 - #37 =
INFO  10:55:17,120 - #23 true
INFO  10:55:17,120 - #40 ;
INFO  10:55:17,120 - #20 character
INFO  10:55:17,120 - #37 =
INFO  10:55:17,121 - #21 1
INFO  10:55:17,121 - #40 ;
INFO  10:55:17,121 - #20 character
INFO  10:55:17,121 - #37 =
INFO  10:55:17,123 - #23 true
INFO  10:55:17,123 - #40 ;
INFO  10:55:17,123 - #20 boolean
INFO  10:55:17,124 - #37 =
INFO  10:55:17,124 - #21 1
INFO  10:55:17,124 - #40 ;
INFO  10:55:17,124 - #20 boolean
INFO  10:55:17,124 - #37 =
INFO  10:55:17,124 - #22 a
INFO  10:55:17,124 - #40 ;
INFO  10:55:17,124 - #20 cnst
INFO  10:55:17,124 - #37 =
INFO  10:55:17,124 - #21 2
INFO  10:55:17,124 - #40 ;
INFO  10:55:17,124 - #20 character
INFO  10:55:17,125 - #38 ++
INFO  10:55:17,125 - #40 ;
INFO  10:55:17,125 - #20 boolean
INFO  10:55:17,125 - #39 --
INFO  10:55:17,125 - #40 ;
INFO  10:55:17,125 - #20 fun
INFO  10:55:17,125 - #43 (
INFO  10:55:17,125 - #21 1
INFO  10:55:17,125 - #41 ,
INFO  10:55:17,126 - #21 2
INFO  10:55:17,126 - #44 )
INFO  10:55:17,126 - #40 ;
INFO  10:55:17,126 - #20 fun
INFO  10:55:17,126 - #43 (
INFO  10:55:17,126 - #23 true
INFO  10:55:17,126 - #44 )
INFO  10:55:17,126 - #40 ;
INFO  10:55:17,126 - #20 character
INFO  10:55:17,126 - #37 =
INFO  10:55:17,126 - #25 -
INFO  10:55:17,126 - #22 a
INFO  10:55:17,127 - #40 ;
INFO  10:55:17,127 - #20 niz
INFO  10:55:17,127 - #37 =
INFO  10:55:17,127 - #12 new
INFO  10:55:17,127 - #20 int
INFO  10:55:17,127 - #45 [
INFO  10:55:17,127 - #22 a
INFO  10:55:17,127 - #46 ]
INFO  10:55:17,127 - #40 ;
INFO  10:55:17,127 - #10 do
INFO  10:55:17,127 - #47 {
INFO  10:55:17,129 - #20 num
INFO  10:55:17,129 - #38 ++
INFO  10:55:17,129 - #40 ;
INFO  10:55:17,129 - #3 break
INFO  10:55:17,129 - #40 ;
INFO  10:55:17,129 - #18 continue
INFO  10:55:17,130 - #40 ;
INFO  10:55:17,130 - #48 }
INFO  10:55:17,130 - #11 while
INFO  10:55:17,131 - #43 (
INFO  10:55:17,131 - #20 num
INFO  10:55:17,131 - #33 <
INFO  10:55:17,131 - #21 10
INFO  10:55:17,132 - #44 )
INFO  10:55:17,133 - #40 ;
INFO  10:55:17,133 - #3 break
INFO  10:55:17,133 - #40 ;
INFO  10:55:17,133 - #18 continue
INFO  10:55:17,133 - #40 ;
INFO  10:55:17,133 - #8 if
INFO  10:55:17,134 - #43 (
INFO  10:55:17,135 - #20 niz
INFO  10:55:17,135 - #33 <
INFO  10:55:17,135 - #20 niz1
INFO  10:55:17,135 - #44 )
INFO  10:55:17,135 - #47 {
INFO  10:55:17,136 - #20 num
INFO  10:55:17,136 - #37 =
INFO  10:55:17,136 - #21 1
INFO  10:55:17,136 - #40 ;
INFO  10:55:17,136 - #48 }
INFO  10:55:17,136 - #8 if
INFO  10:55:17,136 - #43 (
INFO  10:55:17,136 - #20 num
INFO  10:55:17,136 - #44 )
INFO  10:55:17,137 - #47 {
INFO  10:55:17,137 - #20 num
INFO  10:55:17,137 - #37 =
INFO  10:55:17,137 - #21 2
INFO  10:55:17,137 - #40 ;
INFO  10:55:17,137 - #48 }
INFO  10:55:17,137 - #10 do
INFO  10:55:17,137 - #47 {
INFO  10:55:17,137 - #20 niz
INFO  10:55:17,137 - #45 [
INFO  10:55:17,137 - #23 true
INFO  10:55:17,137 - #46 ]
INFO  10:55:17,137 - #37 =
INFO  10:55:17,137 - #21 1
INFO  10:55:17,137 - #40 ;
INFO  10:55:17,137 - #48 }
INFO  10:55:17,138 - #11 while
INFO  10:55:17,138 - #43 (
INFO  10:55:17,138 - #20 num
INFO  10:55:17,138 - #44 )
INFO  10:55:17,138 - #40 ;
INFO  10:55:17,138 - #20 num
INFO  10:55:17,138 - #37 =
INFO  10:55:17,138 - #20 num
INFO  10:55:17,138 - #24 +
INFO  10:55:17,138 - #22 a
INFO  10:55:17,140 - #40 ;
INFO  10:55:17,140 - #20 num
INFO  10:55:17,140 - #37 =
INFO  10:55:17,140 - #20 num
INFO  10:55:17,140 - #26 *
INFO  10:55:17,140 - #22 a
INFO  10:55:17,141 - #40 ;
INFO  10:55:17,142 - #20 num
INFO  10:55:17,142 - #37 =
INFO  10:55:17,142 - #20 boolean
INFO  10:55:17,142 - #49 ?
INFO  10:55:17,142 - #21 1
INFO  10:55:17,142 - #50 :
INFO  10:55:17,142 - #22 a
INFO  10:55:17,142 - #40 ;
INFO  10:55:17,143 - #48 }
INFO  10:55:17,143 - #48 }
INFO  10:55:17,144 - 

================SINTAKSNO STABLO====================


INFO  10:55:17,148 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               a
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           a
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         num
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorCharConst(
                                                                 a
                                                                ) [FactorCharConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               true
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     character
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 boolean
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             cnst
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorDecrement(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                      ) [DesignatorDecrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorMethodCallParams(
                                      DesignatorSimple(
                                       fun
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [DesignatorMethodCallParams]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprNeg(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprNeg]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 niz
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           int
                                          ) [Type]
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementSingle]
                                    StmtBreak(
                                    ) [StmtBreak]
                                  ) [StatementMulti]
                                  StmtContinue(
                                  ) [StmtContinue]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         10
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtBreak(
                        ) [StmtBreak]
                      ) [StatementMulti]
                      StmtContinue(
                      ) [StmtContinue]
                    ) [StatementMulti]
                    StmtIf(
                      IfKeyword(
                      ) [IfKeyword]
                      StmtIfBody(
                        IfCond(
                          CondSingle(
                            CondTermSingle(
                              CondFactRelop(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz1
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactRelop]
                            ) [CondTermSingle]
                          ) [CondSingle]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                    ) [StmtIf]
                  ) [StatementMulti]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactSingle]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtDoWhile(
                  DoKeyword(
                  ) [DoKeyword]
                  StmtWhileBody(
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorArray(
                             niz
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtWhileBody]
                  CondSingle(
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [StmtDoWhile]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprAddop(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprAddop]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:55:17,149 - 

================SEMANTICKA OBRADA====================


ERROR 10:55:17,159 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  10:55:17,160 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  10:55:17,160 - Deklarisana konstanta 'cnst' na liniji 5
INFO  10:55:17,161 - Formalni parametar funkcije fun: 'x' na liniji 7
INFO  10:55:17,161 - Deklarisana promenljiva 'b' na liniji 16
ERROR 10:55:17,161 - Semanticka greska - 'b' je vec deklarisano na liniji 16
INFO  10:55:17,161 - Deklarisana promenljiva 'num' na liniji 17
INFO  10:55:17,161 - Deklarisana promenljiva 'character' na liniji 17
INFO  10:55:17,161 - Deklarisana promenljiva 'boolean' na liniji 17
INFO  10:55:17,161 - Deklarisan niz 'niz' na liniji 18
INFO  10:55:17,162 - Deklarisan niz 'niz1' na liniji 18
ERROR 10:55:17,162 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 10:55:17,162 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 10:55:17,162 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 10:55:17,162 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 10:55:17,162 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 10:55:17,162 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 27
ERROR 10:55:17,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 28
ERROR 10:55:17,165 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 31
ERROR 10:55:17,165 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 34
ERROR 10:55:17,165 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 35
INFO  10:55:17,165 - Pronadjen poziv funkcije 'fun' na liniji 38
ERROR 10:55:17,166 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 38
INFO  10:55:17,166 - Pronadjen poziv funkcije 'fun' na liniji 39
ERROR 10:55:17,166 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 39
ERROR 10:55:17,166 - Semanticka greska - tip mora da bude int na liniji 42
ERROR 10:55:17,166 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 45
ERROR 10:55:17,166 - Semanticka greska - break iskaz van petlje
ERROR 10:55:17,166 - Semanticka greska - continue iskaz van petlje
ERROR 10:55:17,216 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 56
ERROR 10:55:17,216 - Semanticka greska - if uslov nije tipa bool na liniji 60
ERROR 10:55:17,216 - Semanticka greska - nevalidan pristup elementu niza na liniji 65
INFO  10:55:17,216 - Pristup elementu niza 'niz' na liniji 65
ERROR 10:55:17,216 - Semanticka greska - while uslov nije tipa bool na liniji 64
ERROR 10:55:17,216 - Semanticka greska - clanovi izraza nisu tipa int na liniji 68
ERROR 10:55:17,216 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 68
ERROR 10:55:17,217 - Semanticka greska - clanovi izraza nisu tipa int na liniji 69
ERROR 10:55:17,217 - Semanticka greska - drugi i treci izraz moraju biti istog tipa na liniji 71
INFO  10:55:17,218 - ===================================
ERROR 10:55:17,218 - Parsiranje nije uspesno zavrseno!
INFO  10:55:27,482 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:55:27,555 - #2 program
INFO  10:55:27,555 - #20 MJProgram
INFO  10:55:27,555 - #20 abc
INFO  10:55:27,557 - #20 a
INFO  10:55:27,557 - #40 ;
INFO  10:55:27,557 - #7 const
INFO  10:55:27,558 - #20 int
INFO  10:55:27,558 - #20 cnst
INFO  10:55:27,558 - #37 =
INFO  10:55:27,558 - #21 1
INFO  10:55:27,558 - #40 ;
INFO  10:55:27,559 - #47 {
INFO  10:55:27,559 - #20 int
INFO  10:55:27,559 - #20 fun
INFO  10:55:27,559 - #43 (
INFO  10:55:27,559 - #20 int
INFO  10:55:27,559 - #20 x
INFO  10:55:27,559 - #44 )
INFO  10:55:27,560 - #47 {
INFO  10:55:27,560 - #48 }
INFO  10:55:27,560 - #16 void
INFO  10:55:27,560 - #20 main
INFO  10:55:27,560 - #43 (
INFO  10:55:27,560 - #44 )
INFO  10:55:27,560 - #20 int
INFO  10:55:27,560 - #20 b
INFO  10:55:27,561 - #40 ;
INFO  10:55:27,561 - #20 char
INFO  10:55:27,561 - #20 b
INFO  10:55:27,561 - #40 ;
INFO  10:55:27,561 - #20 int
INFO  10:55:27,561 - #20 num
INFO  10:55:27,561 - #40 ;
INFO  10:55:27,562 - #20 char
INFO  10:55:27,562 - #20 character
INFO  10:55:27,562 - #40 ;
INFO  10:55:27,562 - #20 bool
INFO  10:55:27,562 - #20 boolean
INFO  10:55:27,562 - #40 ;
INFO  10:55:27,562 - #20 int
INFO  10:55:27,562 - #20 niz
INFO  10:55:27,562 - #45 [
INFO  10:55:27,562 - #46 ]
INFO  10:55:27,562 - #41 ,
INFO  10:55:27,562 - #20 niz1
INFO  10:55:27,562 - #45 [
INFO  10:55:27,562 - #46 ]
INFO  10:55:27,562 - #40 ;
INFO  10:55:27,563 - #47 {
INFO  10:55:27,563 - #20 a
INFO  10:55:27,563 - #37 =
INFO  10:55:27,563 - #21 1
INFO  10:55:27,563 - #40 ;
INFO  10:55:27,563 - #20 num
INFO  10:55:27,564 - #37 =
INFO  10:55:27,564 - #22 a
INFO  10:55:27,564 - #40 ;
INFO  10:55:27,564 - #20 num
INFO  10:55:27,564 - #37 =
INFO  10:55:27,564 - #23 true
INFO  10:55:27,564 - #40 ;
INFO  10:55:27,564 - #20 character
INFO  10:55:27,564 - #37 =
INFO  10:55:27,565 - #21 1
INFO  10:55:27,565 - #40 ;
INFO  10:55:27,565 - #20 character
INFO  10:55:27,565 - #37 =
INFO  10:55:27,565 - #23 true
INFO  10:55:27,565 - #40 ;
INFO  10:55:27,565 - #20 boolean
INFO  10:55:27,565 - #37 =
INFO  10:55:27,565 - #21 1
INFO  10:55:27,565 - #40 ;
INFO  10:55:27,565 - #20 boolean
INFO  10:55:27,565 - #37 =
INFO  10:55:27,565 - #22 a
INFO  10:55:27,566 - #40 ;
INFO  10:55:27,566 - #20 cnst
INFO  10:55:27,566 - #37 =
INFO  10:55:27,566 - #21 2
INFO  10:55:27,566 - #40 ;
INFO  10:55:27,566 - #20 character
INFO  10:55:27,566 - #38 ++
INFO  10:55:27,566 - #40 ;
INFO  10:55:27,566 - #20 boolean
INFO  10:55:27,566 - #39 --
INFO  10:55:27,566 - #40 ;
INFO  10:55:27,567 - #20 fun
INFO  10:55:27,567 - #43 (
INFO  10:55:27,567 - #21 1
INFO  10:55:27,567 - #41 ,
INFO  10:55:27,567 - #21 2
INFO  10:55:27,567 - #44 )
INFO  10:55:27,568 - #40 ;
INFO  10:55:27,568 - #20 fun
INFO  10:55:27,568 - #43 (
INFO  10:55:27,568 - #23 true
INFO  10:55:27,568 - #44 )
INFO  10:55:27,569 - #40 ;
INFO  10:55:27,569 - #20 character
INFO  10:55:27,569 - #37 =
INFO  10:55:27,569 - #25 -
INFO  10:55:27,569 - #22 a
INFO  10:55:27,569 - #40 ;
INFO  10:55:27,569 - #20 niz
INFO  10:55:27,569 - #37 =
INFO  10:55:27,569 - #12 new
INFO  10:55:27,569 - #20 int
INFO  10:55:27,569 - #45 [
INFO  10:55:27,569 - #22 a
INFO  10:55:27,570 - #46 ]
INFO  10:55:27,570 - #40 ;
INFO  10:55:27,570 - #10 do
INFO  10:55:27,570 - #47 {
INFO  10:55:27,571 - #20 num
INFO  10:55:27,571 - #38 ++
INFO  10:55:27,571 - #40 ;
INFO  10:55:27,571 - #3 break
INFO  10:55:27,571 - #40 ;
INFO  10:55:27,571 - #18 continue
INFO  10:55:27,572 - #40 ;
INFO  10:55:27,572 - #48 }
INFO  10:55:27,573 - #11 while
INFO  10:55:27,573 - #43 (
INFO  10:55:27,573 - #20 num
INFO  10:55:27,573 - #33 <
INFO  10:55:27,573 - #21 10
INFO  10:55:27,574 - #44 )
INFO  10:55:27,575 - #40 ;
INFO  10:55:27,575 - #3 break
INFO  10:55:27,575 - #40 ;
INFO  10:55:27,575 - #18 continue
INFO  10:55:27,575 - #40 ;
INFO  10:55:27,575 - #8 if
INFO  10:55:27,575 - #43 (
INFO  10:55:27,576 - #20 niz
INFO  10:55:27,576 - #33 <
INFO  10:55:27,576 - #20 niz1
INFO  10:55:27,577 - #44 )
INFO  10:55:27,577 - #47 {
INFO  10:55:27,577 - #20 num
INFO  10:55:27,577 - #37 =
INFO  10:55:27,577 - #21 1
INFO  10:55:27,577 - #40 ;
INFO  10:55:27,577 - #48 }
INFO  10:55:27,577 - #8 if
INFO  10:55:27,577 - #43 (
INFO  10:55:27,577 - #20 num
INFO  10:55:27,577 - #44 )
INFO  10:55:27,578 - #47 {
INFO  10:55:27,578 - #20 num
INFO  10:55:27,578 - #37 =
INFO  10:55:27,578 - #21 2
INFO  10:55:27,578 - #40 ;
INFO  10:55:27,578 - #48 }
INFO  10:55:27,578 - #10 do
INFO  10:55:27,578 - #47 {
INFO  10:55:27,578 - #20 niz
INFO  10:55:27,578 - #45 [
INFO  10:55:27,578 - #23 true
INFO  10:55:27,578 - #46 ]
INFO  10:55:27,578 - #37 =
INFO  10:55:27,578 - #21 1
INFO  10:55:27,579 - #40 ;
INFO  10:55:27,579 - #48 }
INFO  10:55:27,579 - #11 while
INFO  10:55:27,579 - #43 (
INFO  10:55:27,579 - #20 num
INFO  10:55:27,579 - #44 )
INFO  10:55:27,579 - #40 ;
INFO  10:55:27,579 - #20 num
INFO  10:55:27,579 - #37 =
INFO  10:55:27,579 - #20 num
INFO  10:55:27,579 - #24 +
INFO  10:55:27,579 - #22 a
INFO  10:55:27,581 - #40 ;
INFO  10:55:27,581 - #20 num
INFO  10:55:27,581 - #37 =
INFO  10:55:27,581 - #20 num
INFO  10:55:27,581 - #26 *
INFO  10:55:27,581 - #22 a
INFO  10:55:27,582 - #40 ;
INFO  10:55:27,583 - #20 num
INFO  10:55:27,583 - #37 =
INFO  10:55:27,583 - #20 boolean
INFO  10:55:27,583 - #49 ?
INFO  10:55:27,583 - #21 1
INFO  10:55:27,583 - #50 :
INFO  10:55:27,583 - #22 a
INFO  10:55:27,583 - #40 ;
INFO  10:55:27,584 - #48 }
INFO  10:55:27,584 - #48 }
INFO  10:55:27,586 - 

================SINTAKSNO STABLO====================


INFO  10:55:27,590 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               a
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           a
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         num
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorCharConst(
                                                                 a
                                                                ) [FactorCharConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               true
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     character
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 boolean
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             cnst
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorDecrement(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                      ) [DesignatorDecrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorMethodCallParams(
                                      DesignatorSimple(
                                       fun
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [DesignatorMethodCallParams]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprNeg(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprNeg]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 niz
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           int
                                          ) [Type]
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoKeyword(
                            ) [DoKeyword]
                            StmtWhileBody(
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementSingle]
                                    StmtBreak(
                                    ) [StmtBreak]
                                  ) [StatementMulti]
                                  StmtContinue(
                                  ) [StmtContinue]
                                ) [StatementMulti]
                              ) [Stmt]
                            ) [StmtWhileBody]
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         10
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtBreak(
                        ) [StmtBreak]
                      ) [StatementMulti]
                      StmtContinue(
                      ) [StmtContinue]
                    ) [StatementMulti]
                    StmtIf(
                      IfKeyword(
                      ) [IfKeyword]
                      StmtIfBody(
                        IfCond(
                          CondSingle(
                            CondTermSingle(
                              CondFactRelop(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz1
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactRelop]
                            ) [CondTermSingle]
                          ) [CondSingle]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                    ) [StmtIf]
                  ) [StatementMulti]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactSingle]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtDoWhile(
                  DoKeyword(
                  ) [DoKeyword]
                  StmtWhileBody(
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorArray(
                             niz
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtWhileBody]
                  CondSingle(
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [StmtDoWhile]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprAddop(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprAddop]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:55:27,592 - 

================SEMANTICKA OBRADA====================


ERROR 10:55:27,601 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  10:55:27,602 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  10:55:27,602 - Deklarisana konstanta 'cnst' na liniji 5
INFO  10:55:27,603 - Formalni parametar funkcije fun: 'x' na liniji 7
INFO  10:55:27,603 - Deklarisana promenljiva 'b' na liniji 16
ERROR 10:55:27,603 - Semanticka greska - 'b' je vec deklarisano na liniji 16
INFO  10:55:27,603 - Deklarisana promenljiva 'num' na liniji 17
INFO  10:55:27,603 - Deklarisana promenljiva 'character' na liniji 17
INFO  10:55:27,603 - Deklarisana promenljiva 'boolean' na liniji 17
INFO  10:55:27,603 - Deklarisan niz 'niz' na liniji 18
INFO  10:55:27,603 - Deklarisan niz 'niz1' na liniji 18
ERROR 10:55:27,604 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 10:55:27,604 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 10:55:27,604 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 10:55:27,604 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 10:55:27,604 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 10:55:27,604 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 27
ERROR 10:55:27,607 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 28
ERROR 10:55:27,607 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 31
ERROR 10:55:27,607 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 34
ERROR 10:55:27,607 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 35
INFO  10:55:27,607 - Pronadjen poziv funkcije 'fun' na liniji 38
ERROR 10:55:27,607 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 38
INFO  10:55:27,607 - Pronadjen poziv funkcije 'fun' na liniji 39
ERROR 10:55:27,607 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 39
ERROR 10:55:27,607 - Semanticka greska - tip mora da bude int na liniji 42
ERROR 10:55:27,608 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 45
ERROR 10:55:27,608 - Semanticka greska - break iskaz van petlje
ERROR 10:55:27,608 - Semanticka greska - continue iskaz van petlje
ERROR 10:55:27,609 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 56
ERROR 10:55:27,609 - Semanticka greska - if uslov nije tipa bool na liniji 60
ERROR 10:55:27,610 - Semanticka greska - nevalidan pristup elementu niza na liniji 65
INFO  10:55:27,610 - Pristup elementu niza 'niz' na liniji 65
ERROR 10:55:27,610 - Semanticka greska - while uslov nije tipa bool na liniji 64
ERROR 10:55:27,610 - Semanticka greska - clanovi izraza nisu tipa int na liniji 68
ERROR 10:55:27,611 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 68
ERROR 10:55:27,611 - Semanticka greska - clanovi izraza nisu tipa int na liniji 69
ERROR 10:55:27,611 - Semanticka greska - drugi i treci izraz moraju biti istog tipa na liniji 71
INFO  10:55:27,613 - ===================================
ERROR 10:55:27,614 - Parsiranje nije uspesno zavrseno!
INFO  11:22:18,767 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  11:22:18,839 - #2 program
INFO  11:22:18,839 - #20 test302
INFO  11:22:18,839 - #7 const
INFO  11:22:18,841 - #20 int
INFO  11:22:18,841 - #20 jedan
INFO  11:22:18,842 - #37 =
INFO  11:22:18,842 - #21 1
INFO  11:22:18,842 - #40 ;
INFO  11:22:18,844 - #20 int
INFO  11:22:18,844 - #20 i
INFO  11:22:18,844 - #40 ;
INFO  11:22:18,844 - #20 bool
INFO  11:22:18,845 - #20 ibool
INFO  11:22:18,845 - #40 ;
INFO  11:22:18,845 - #20 int
INFO  11:22:18,845 - #20 niz
INFO  11:22:18,845 - #45 [
INFO  11:22:18,845 - #46 ]
INFO  11:22:18,845 - #40 ;
INFO  11:22:18,845 - #47 {
INFO  11:22:18,846 - #20 int
INFO  11:22:18,846 - #20 sum
INFO  11:22:18,846 - #43 (
INFO  11:22:18,846 - #20 int
INFO  11:22:18,846 - #20 z
INFO  11:22:18,846 - #41 ,
INFO  11:22:18,847 - #20 int
INFO  11:22:18,847 - #20 d
INFO  11:22:18,847 - #44 )
INFO  11:22:18,847 - #47 {
INFO  11:22:18,847 - #15 return
INFO  11:22:18,847 - #20 z
INFO  11:22:18,847 - #24 +
INFO  11:22:18,847 - #20 d
INFO  11:22:18,849 - #40 ;
INFO  11:22:18,849 - #48 }
INFO  11:22:18,849 - #20 int
INFO  11:22:18,849 - #20 inkrement
INFO  11:22:18,849 - #43 (
INFO  11:22:18,849 - #20 int
INFO  11:22:18,849 - #20 a
INFO  11:22:18,850 - #41 ,
INFO  11:22:18,850 - #20 int
INFO  11:22:18,850 - #20 inc
INFO  11:22:18,850 - #44 )
INFO  11:22:18,850 - #20 int
INFO  11:22:18,850 - #20 pom
INFO  11:22:18,850 - #40 ;
INFO  11:22:18,850 - #47 {
INFO  11:22:18,850 - #8 if
INFO  11:22:18,851 - #43 (
INFO  11:22:18,852 - #20 inc
INFO  11:22:18,852 - #29 ==
INFO  11:22:18,852 - #20 jedan
INFO  11:22:18,853 - #44 )
INFO  11:22:18,853 - #20 pom
INFO  11:22:18,853 - #37 =
INFO  11:22:18,854 - #21 1
INFO  11:22:18,854 - #40 ;
INFO  11:22:18,854 - #6 else
INFO  11:22:18,854 - #8 if
INFO  11:22:18,854 - #43 (
INFO  11:22:18,854 - #20 inc
INFO  11:22:18,854 - #29 ==
INFO  11:22:18,855 - #21 2
INFO  11:22:18,855 - #44 )
INFO  11:22:18,855 - #20 pom
INFO  11:22:18,855 - #37 =
INFO  11:22:18,855 - #20 a
INFO  11:22:18,855 - #40 ;
INFO  11:22:18,855 - #15 return
INFO  11:22:18,855 - #20 sum
INFO  11:22:18,855 - #43 (
INFO  11:22:18,855 - #20 a
INFO  11:22:18,856 - #41 ,
INFO  11:22:18,856 - #20 pom
INFO  11:22:18,856 - #44 )
INFO  11:22:18,856 - #40 ;
INFO  11:22:18,856 - #48 }
INFO  11:22:18,856 - #20 bool
INFO  11:22:18,857 - #20 verify
INFO  11:22:18,857 - #43 (
INFO  11:22:18,857 - #44 )
INFO  11:22:18,857 - #47 {
INFO  11:22:18,857 - #13 print
INFO  11:22:18,857 - #43 (
INFO  11:22:18,857 - #22 v
INFO  11:22:18,857 - #44 )
INFO  11:22:18,857 - #40 ;
INFO  11:22:18,857 - #15 return
INFO  11:22:18,858 - #23 false
INFO  11:22:18,858 - #40 ;
INFO  11:22:18,858 - #48 }
INFO  11:22:18,858 - #16 void
INFO  11:22:18,858 - #20 main
INFO  11:22:18,858 - #43 (
INFO  11:22:18,858 - #44 )
INFO  11:22:18,858 - #47 {
INFO  11:22:18,858 - #8 if
INFO  11:22:18,858 - #43 (
INFO  11:22:18,859 - #21 1
INFO  11:22:18,859 - #30 !=
INFO  11:22:18,859 - #21 1
INFO  11:22:18,860 - #44 )
INFO  11:22:18,860 - #13 print
INFO  11:22:18,860 - #43 (
INFO  11:22:18,860 - #25 -
INFO  11:22:18,860 - #21 6
INFO  11:22:18,860 - #44 )
INFO  11:22:18,860 - #40 ;
INFO  11:22:18,860 - #6 else
INFO  11:22:18,860 - #13 print
INFO  11:22:18,861 - #43 (
INFO  11:22:18,861 - #21 0
INFO  11:22:18,861 - #44 )
INFO  11:22:18,861 - #40 ;
INFO  11:22:18,861 - #20 ibool
INFO  11:22:18,861 - #37 =
INFO  11:22:18,861 - #23 false
INFO  11:22:18,861 - #40 ;
INFO  11:22:18,861 - #20 i
INFO  11:22:18,861 - #37 =
INFO  11:22:18,861 - #21 0
INFO  11:22:18,861 - #40 ;
INFO  11:22:18,861 - #10 do
INFO  11:22:18,861 - #47 {
INFO  11:22:18,863 - #8 if
INFO  11:22:18,863 - #43 (
INFO  11:22:18,863 - #20 i
INFO  11:22:18,863 - #29 ==
INFO  11:22:18,863 - #21 2
INFO  11:22:18,863 - #44 )
INFO  11:22:18,863 - #20 ibool
INFO  11:22:18,863 - #37 =
INFO  11:22:18,863 - #23 true
INFO  11:22:18,863 - #40 ;
INFO  11:22:18,863 - #20 i
INFO  11:22:18,864 - #38 ++
INFO  11:22:18,864 - #40 ;
INFO  11:22:18,864 - #48 }
INFO  11:22:18,864 - #11 while
INFO  11:22:18,864 - #43 (
INFO  11:22:18,864 - #20 i
INFO  11:22:18,864 - #33 <
INFO  11:22:18,864 - #21 5
INFO  11:22:18,865 - #44 )
INFO  11:22:18,865 - #40 ;
INFO  11:22:18,865 - #8 if
INFO  11:22:18,868 - #43 (
INFO  11:22:18,868 - #20 ibool
INFO  11:22:18,868 - #44 )
INFO  11:22:18,869 - #8 if
INFO  11:22:18,869 - #43 (
INFO  11:22:18,869 - #20 i
INFO  11:22:18,869 - #29 ==
INFO  11:22:18,869 - #21 5
INFO  11:22:18,869 - #44 )
INFO  11:22:18,869 - #13 print
INFO  11:22:18,869 - #43 (
INFO  11:22:18,869 - #21 1
INFO  11:22:18,869 - #44 )
INFO  11:22:18,869 - #40 ;
INFO  11:22:18,869 - #6 else
INFO  11:22:18,869 - #13 print
INFO  11:22:18,869 - #43 (
INFO  11:22:18,869 - #25 -
INFO  11:22:18,870 - #21 1
INFO  11:22:18,870 - #44 )
INFO  11:22:18,870 - #40 ;
INFO  11:22:18,870 - #20 niz
INFO  11:22:18,870 - #37 =
INFO  11:22:18,870 - #12 new
INFO  11:22:18,870 - #20 int
INFO  11:22:18,870 - #45 [
INFO  11:22:18,870 - #21 3
INFO  11:22:18,870 - #46 ]
INFO  11:22:18,870 - #40 ;
INFO  11:22:18,870 - #20 niz
INFO  11:22:18,870 - #45 [
INFO  11:22:18,870 - #21 0
INFO  11:22:18,870 - #46 ]
INFO  11:22:18,871 - #37 =
INFO  11:22:18,871 - #21 1
INFO  11:22:18,871 - #40 ;
INFO  11:22:18,871 - #20 niz
INFO  11:22:18,871 - #45 [
INFO  11:22:18,871 - #21 1
INFO  11:22:18,871 - #46 ]
INFO  11:22:18,871 - #37 =
INFO  11:22:18,871 - #21 2
INFO  11:22:18,871 - #40 ;
INFO  11:22:18,871 - #20 niz
INFO  11:22:18,871 - #45 [
INFO  11:22:18,871 - #21 2
INFO  11:22:18,871 - #46 ]
INFO  11:22:18,872 - #37 =
INFO  11:22:18,872 - #20 sum
INFO  11:22:18,872 - #43 (
INFO  11:22:18,872 - #20 niz
INFO  11:22:18,872 - #45 [
INFO  11:22:18,872 - #21 1
INFO  11:22:18,872 - #46 ]
INFO  11:22:18,872 - #41 ,
INFO  11:22:18,872 - #20 niz
INFO  11:22:18,872 - #45 [
INFO  11:22:18,872 - #21 0
INFO  11:22:18,872 - #46 ]
INFO  11:22:18,872 - #44 )
INFO  11:22:18,872 - #24 +
INFO  11:22:18,872 - #21 1
INFO  11:22:18,872 - #40 ;
INFO  11:22:18,872 - #8 if
INFO  11:22:18,872 - #43 (
INFO  11:22:18,872 - #20 verify
INFO  11:22:18,872 - #43 (
INFO  11:22:18,872 - #44 )
INFO  11:22:18,873 - #36 ||
INFO  11:22:18,873 - #20 niz
INFO  11:22:18,873 - #45 [
INFO  11:22:18,873 - #21 2
INFO  11:22:18,873 - #46 ]
INFO  11:22:18,873 - #29 ==
INFO  11:22:18,873 - #21 4
INFO  11:22:18,873 - #44 )
INFO  11:22:18,873 - #13 print
INFO  11:22:18,873 - #43 (
INFO  11:22:18,873 - #20 ord
INFO  11:22:18,873 - #43 (
INFO  11:22:18,873 - #22 A
INFO  11:22:18,873 - #44 )
INFO  11:22:18,873 - #44 )
INFO  11:22:18,873 - #40 ;
INFO  11:22:18,873 - #6 else
INFO  11:22:18,873 - #13 print
INFO  11:22:18,873 - #43 (
INFO  11:22:18,873 - #20 ord
INFO  11:22:18,873 - #43 (
INFO  11:22:18,873 - #22 a
INFO  11:22:18,873 - #44 )
INFO  11:22:18,873 - #44 )
INFO  11:22:18,873 - #40 ;
INFO  11:22:18,873 - #13 print
INFO  11:22:18,873 - #43 (
INFO  11:22:18,873 - #20 eol
INFO  11:22:18,873 - #44 )
INFO  11:22:18,873 - #40 ;
INFO  11:22:18,874 - #20 i
INFO  11:22:18,874 - #37 =
INFO  11:22:18,874 - #21 0
INFO  11:22:18,874 - #40 ;
INFO  11:22:18,874 - #10 do
INFO  11:22:18,874 - #47 {
INFO  11:22:18,874 - #8 if
INFO  11:22:18,874 - #43 (
INFO  11:22:18,874 - #20 i
INFO  11:22:18,874 - #29 ==
INFO  11:22:18,874 - #21 3
INFO  11:22:18,874 - #44 )
INFO  11:22:18,874 - #47 {
INFO  11:22:18,874 - #20 i
INFO  11:22:18,874 - #38 ++
INFO  11:22:18,874 - #40 ;
INFO  11:22:18,875 - #18 continue
INFO  11:22:18,875 - #40 ;
INFO  11:22:18,875 - #48 }
INFO  11:22:18,875 - #8 if
INFO  11:22:18,875 - #43 (
INFO  11:22:18,876 - #20 i
INFO  11:22:18,876 - #29 ==
INFO  11:22:18,876 - #21 4
INFO  11:22:18,876 - #44 )
INFO  11:22:18,876 - #3 break
INFO  11:22:18,876 - #40 ;
INFO  11:22:18,876 - #20 i
INFO  11:22:18,877 - #37 =
INFO  11:22:18,877 - #20 inkrement
INFO  11:22:18,877 - #43 (
INFO  11:22:18,878 - #20 i
INFO  11:22:18,878 - #41 ,
INFO  11:22:18,878 - #21 1
INFO  11:22:18,878 - #44 )
INFO  11:22:18,878 - #40 ;
INFO  11:22:18,878 - #48 }
INFO  11:22:18,878 - #11 while
INFO  11:22:18,878 - #43 (
INFO  11:22:18,878 - #20 i
INFO  11:22:18,878 - #33 <
INFO  11:22:18,878 - #21 10
INFO  11:22:18,878 - #44 )
INFO  11:22:18,878 - #40 ;
INFO  11:22:18,878 - #8 if
INFO  11:22:18,878 - #43 (
INFO  11:22:18,878 - #20 i
INFO  11:22:18,878 - #29 ==
INFO  11:22:18,878 - #21 3
INFO  11:22:18,878 - #35 &&
INFO  11:22:18,878 - #20 verify
INFO  11:22:18,878 - #43 (
INFO  11:22:18,878 - #44 )
INFO  11:22:18,878 - #44 )
INFO  11:22:18,879 - #13 print
INFO  11:22:18,879 - #43 (
INFO  11:22:18,879 - #25 -
INFO  11:22:18,879 - #21 4
INFO  11:22:18,879 - #44 )
INFO  11:22:18,879 - #40 ;
INFO  11:22:18,879 - #6 else
INFO  11:22:18,879 - #13 print
INFO  11:22:18,879 - #43 (
INFO  11:22:18,879 - #21 4
INFO  11:22:18,879 - #44 )
INFO  11:22:18,879 - #40 ;
INFO  11:22:18,879 - #14 read
INFO  11:22:18,879 - #43 (
INFO  11:22:18,879 - #20 niz
INFO  11:22:18,880 - #45 [
INFO  11:22:18,880 - #21 0
INFO  11:22:18,880 - #46 ]
INFO  11:22:18,880 - #44 )
INFO  11:22:18,880 - #40 ;
INFO  11:22:18,880 - #14 read
INFO  11:22:18,880 - #43 (
INFO  11:22:18,880 - #20 niz
INFO  11:22:18,880 - #45 [
INFO  11:22:18,880 - #21 1
INFO  11:22:18,881 - #46 ]
INFO  11:22:18,881 - #44 )
INFO  11:22:18,881 - #40 ;
INFO  11:22:18,881 - #14 read
INFO  11:22:18,881 - #43 (
INFO  11:22:18,881 - #20 niz
INFO  11:22:18,881 - #45 [
INFO  11:22:18,881 - #21 2
INFO  11:22:18,881 - #46 ]
INFO  11:22:18,881 - #44 )
INFO  11:22:18,881 - #40 ;
INFO  11:22:18,882 - #13 print
INFO  11:22:18,882 - #43 (
INFO  11:22:18,882 - #20 eol
INFO  11:22:18,882 - #44 )
INFO  11:22:18,882 - #40 ;
INFO  11:22:18,882 - #13 print
INFO  11:22:18,882 - #43 (
INFO  11:22:18,882 - #20 sum
INFO  11:22:18,882 - #43 (
INFO  11:22:18,882 - #20 sum
INFO  11:22:18,883 - #43 (
INFO  11:22:18,883 - #20 niz
INFO  11:22:18,883 - #45 [
INFO  11:22:18,883 - #21 0
INFO  11:22:18,883 - #46 ]
INFO  11:22:18,883 - #41 ,
INFO  11:22:18,883 - #20 niz
INFO  11:22:18,883 - #45 [
INFO  11:22:18,883 - #21 1
INFO  11:22:18,883 - #46 ]
INFO  11:22:18,883 - #44 )
INFO  11:22:18,883 - #41 ,
INFO  11:22:18,883 - #20 niz
INFO  11:22:18,883 - #45 [
INFO  11:22:18,883 - #21 2
INFO  11:22:18,883 - #46 ]
INFO  11:22:18,883 - #44 )
INFO  11:22:18,883 - #44 )
INFO  11:22:18,883 - #40 ;
INFO  11:22:18,884 - #13 print
INFO  11:22:18,884 - #43 (
INFO  11:22:18,884 - #20 eol
INFO  11:22:18,884 - #44 )
INFO  11:22:18,884 - #40 ;
INFO  11:22:18,884 - #13 print
INFO  11:22:18,884 - #43 (
INFO  11:22:18,884 - #20 inkrement
INFO  11:22:18,884 - #43 (
INFO  11:22:18,884 - #20 niz
INFO  11:22:18,884 - #45 [
INFO  11:22:18,884 - #21 2
INFO  11:22:18,884 - #46 ]
INFO  11:22:18,884 - #41 ,
INFO  11:22:18,884 - #21 2
INFO  11:22:18,884 - #44 )
INFO  11:22:18,884 - #44 )
INFO  11:22:18,884 - #40 ;
INFO  11:22:18,884 - #13 print
INFO  11:22:18,884 - #43 (
INFO  11:22:18,884 - #20 verify
INFO  11:22:18,884 - #43 (
INFO  11:22:18,884 - #44 )
INFO  11:22:18,884 - #49 ?
INFO  11:22:18,885 - #22 t
INFO  11:22:18,885 - #50 :
INFO  11:22:18,885 - #22 f
INFO  11:22:18,885 - #44 )
INFO  11:22:18,885 - #40 ;
INFO  11:22:18,885 - #48 }
INFO  11:22:18,885 - #48 }
INFO  11:22:18,886 - 

================SINTAKSNO STABLO====================


INFO  11:22:18,896 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      IfKeyword(
                                                      ) [IfKeyword]
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondSingle(
                                                            CondTermSingle(
                                                              CondFactRelop(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactRelop]
                                                            ) [CondTermSingle]
                                                          ) [CondSingle]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoKeyword(
                                                ) [DoKeyword]
                                                StmtWhileBody(
                                                  Stmt(
                                                    StatementMulti(
                                                      StatementSingle(
                                                        StmtIf(
                                                          IfKeyword(
                                                          ) [IfKeyword]
                                                          StmtIfBody(
                                                            IfCond(
                                                              CondSingle(
                                                                CondTermSingle(
                                                                  CondFactRelop(
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorDesignator(
                                                                            DesignatorSimple(
                                                                             i
                                                                            ) [DesignatorSimple]
                                                                          ) [FactorDesignator]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                    RelopEQ(
                                                                    ) [RelopEQ]
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorNumConst(
                                                                           2
                                                                          ) [FactorNumConst]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                  ) [CondFactRelop]
                                                                ) [CondTermSingle]
                                                              ) [CondSingle]
                                                            ) [IfCond]
                                                            StmtDesign(
                                                              DesignatorAssignment(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                                AssignmentExpr(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorBoolConst(
                                                                         true
                                                                        ) [FactorBoolConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [AssignmentExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StmtDesign]
                                                          ) [StmtIfBody]
                                                        ) [StmtIf]
                                                      ) [StatementSingle]
                                                      StmtDesign(
                                                        DesignatorIncrement(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [DesignatorIncrement]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                  ) [Stmt]
                                                ) [StmtWhileBody]
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactRelop(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactRelop]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              IfKeyword(
                                              ) [IfKeyword]
                                              StmtIfBody(
                                                IfCond(
                                                  CondSingle(
                                                    CondTermSingle(
                                                      CondFactSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactSingle]
                                                    ) [CondTermSingle]
                                                  ) [CondSingle]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  IfKeyword(
                                                  ) [IfKeyword]
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondSingle(
                                                        CondTermSingle(
                                                          CondFactRelop(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactRelop]
                                                        ) [CondTermSingle]
                                                      ) [CondSingle]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    IfKeyword(
                                    ) [IfKeyword]
                                    StmtIfBody(
                                      IfCond(
                                        CondOr(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactSingle]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                          CondTermSingle(
                                            CondFactRelop(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactRelop]
                                          ) [CondTermSingle]
                                        ) [CondOr]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoKeyword(
                              ) [DoKeyword]
                              StmtWhileBody(
                                Stmt(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementSingle(
                                        StmtIf(
                                          IfKeyword(
                                          ) [IfKeyword]
                                          StmtIfBody(
                                            IfCond(
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                    RelopEQ(
                                                    ) [RelopEQ]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           3
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [IfCond]
                                            Stmt(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorIncrement(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [DesignatorIncrement]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtContinue(
                                                ) [StmtContinue]
                                              ) [StatementMulti]
                                            ) [Stmt]
                                          ) [StmtIfBody]
                                        ) [StmtIf]
                                      ) [StatementSingle]
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         4
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          StmtBreak(
                                          ) [StmtBreak]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FuncCallParams(
                                                  DesignatorSimple(
                                                   inkrement
                                                  ) [DesignatorSimple]
                                                  ActParsMulti(
                                                    ActParsSingle(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsSingle]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsMulti]
                                                ) [FuncCallParams]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                ) [Stmt]
                              ) [StmtWhileBody]
                              CondSingle(
                                CondTermSingle(
                                  CondFactRelop(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactRelop]
                                ) [CondTermSingle]
                              ) [CondSingle]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            IfKeyword(
                            ) [IfKeyword]
                            StmtIfBody(
                              IfCond(
                                CondSingle(
                                  CondTermAnd(
                                    CondTermSingle(
                                      CondFactRelop(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactRelop]
                                    ) [CondTermSingle]
                                    CondFactSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactSingle]
                                  ) [CondTermAnd]
                                ) [CondSingle]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FuncCall(
                      DesignatorSimple(
                       verify
                      ) [DesignatorSimple]
                    ) [FuncCall]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     t
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     f
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  11:22:18,901 - 

================SEMANTICKA OBRADA====================


INFO  11:22:18,912 - Deklarisana konstanta 'jedan' na liniji 5
INFO  11:22:18,912 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  11:22:18,912 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  11:22:18,912 - Deklarisan globalni niz 'niz' na liniji 10
INFO  11:22:18,913 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  11:22:18,913 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  11:22:18,913 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  11:22:18,913 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  11:22:18,913 - Deklarisana promenljiva 'pom' na liniji 20
INFO  11:22:18,913 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 50
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 51
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 52
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 52
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 52
INFO  11:22:18,914 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  11:22:18,914 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 53
INFO  11:22:18,914 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  11:22:18,914 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  11:22:18,914 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  11:22:18,914 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 71
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 72
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 73
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 76
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 76
INFO  11:22:18,914 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 76
INFO  11:22:18,914 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  11:22:18,914 - Pristup elementu niza 'niz' na liniji 79
INFO  11:22:18,914 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  11:22:18,915 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  11:22:18,915 - ===================================
INFO  11:22:18,915 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  11:22:18,923 - Parsiranje uspesno zavrseno!
